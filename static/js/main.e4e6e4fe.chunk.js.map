{"version":3,"sources":["graph-frontend/src/structure/node.js","graph-frontend/include/THREE.MeshLine.js","graph-frontend/index.js","graph-frontend/src/process.js","graph-frontend/include/QuickHull.js","graph-frontend/include/ConvexGeometry.js","graph-frontend/include/CSS3DRenderer.js","graph-frontend/include/OrbitControls.js","graph-frontend/src/utils/utils.js","graph-frontend/src/setup.js","graph-frontend/src/addremove.js","graph-frontend/src/highlighting.js","graph-frontend/src/select.js","graph-frontend/src/mouse.js","graph-frontend/src/modify.js","graph-frontend/src/draw.js","graph-frontend/src/api.js","graph-frontend/src/update.js","graph-frontend/src/imports.js","constants/index.js","notifications/client.js","ipc/client.js","stores/PreferencesStore.js","stores/GraphStore.js","stores/ImportStore.js","stores/ProjectStore.js","stores/SearchStore.js","stores/index.js","components/PreferencesDialog.jsx","components/utils/Collapsable.jsx","components/utils/CommonItemRenderer.jsx","components/utils/SimpleSelect.jsx","components/ImportDialog.jsx","components/OpenDialog.jsx","components/NewProjectDialog.jsx","components/ProjectDetailDialog.jsx","components/SaveSnapshotDialog.jsx","components/RenameSnapshotDialog.jsx","components/OpenSnapshotDialog.jsx","components/ShareDialog.jsx","components/Dialogs.jsx","components/Navbar.jsx","components/WorkspaceView.jsx","visualizers/ThreeJSVis.jsx","components/panels/GlobalPanel.jsx","components/utils/SwitchCollapsable.jsx","components/panels/SelectionPanel.jsx","components/panels/NodesPanel.jsx","components/panels/LabelsPanel.jsx","components/panels/NodeDetailPanel.jsx","components/Legends.jsx","components/FloatingCards.jsx","app.jsx","index.js"],"names":["$","require","Node","id","size","this","index","in","out","renderData","domainData","x","y","vx","vy","connectedTo","outNodeIds","map","outNode","inArray","prototype","connectNode","node","push","exports","Edge","source","target","THREE","memcpy","src","srcOffset","dst","dstOffset","length","i","subarray","slice","buffer","set","MeshLine","positions","previous","next","side","width","indices_array","uvs","counters","geometry","BufferGeometry","widthCallback","setGeometry","g","c","Geometry","j","vertices","v","z","Float32Array","Array","process","compareV3","a","b","aa","ab","copyV3","w","l","n","attributes","position","copyArray","needsUpdate","uv","Uint16Array","BufferAttribute","addAttribute","setIndex","advance","array","MeshLineMaterial","parameters","check","d","undefined","Material","call","lineWidth","useMap","color","Color","opacity","resolution","Vector2","sizeAttenuation","near","far","dashArray","useDash","visibility","alphaTest","material","RawShaderMaterial","uniforms","type","value","vertexShader","join","fragmentShader","setValues","Object","create","constructor","copy","Frame","graph","balancedBinTree","window","Argo","def","default","spawn","d3","OrbitControls","ee","options","self","inGraph","layout","LAYOUT","layout_options","graphLayout","lineObjects","lineIndices","MAX_LINES","textureLoader","TextureLoader","crossOrigin","oldIntersect","selection","fov","mouseStart","Vector3","mouseEnd","dragging","showBox","renderWidth","renderHeight","maxZoom","paused","mouseDown","layoutInit","labelSize","relativeFontSize","mapShowing","MAP","darkMode","lastNode","fakeNodes","rightClickedNode","doHighlightNeighbors","NODE_NEIGHBOR_HIGHLIGHT","prevHighlights","neighborHost","hull","display","animate","now","then","Date","requestAnimationFrame","controls","update","render","init","renderer","WebGLRenderer","alpha","antialias","setDisplayParams","setRendererParams","setupCamera","setupMinimap","setupGeometry","setupSelect","element","appendChild","domElement","cssRenderer","canvas","document","querySelector","setupLayout","setupGraph","addEventListener","e","preventDefault","onWindowResize","clientRect","getBoundingClientRect","height","minimap","aspect","ccamera","updateProjectionMatrix","setSize","stage","updateCamera","updateNodes","updateLabels","updateEdges","nodes","forEachNode","force","forceLink","restart","stop","tickToStatic","Math","ceil","log","alphaMin","alphaDecay","tick","setViewport","setScissor","setScissorTest","scene","camera","Visible","QuickHull","tolerance","faces","newFaces","assigned","VertexList","unassigned","Face","normal","midpoint","area","constant","outside","mark","edge","HalfEdge","vertex","face","prev","twin","VertexNode","point","head","tail","assign","setFromPoints","points","isArray","console","error","makeEmpty","compute","setFromObject","object","updateMatrixWorld","traverse","isGeometry","clone","applyMatrix4","matrixWorld","isBufferGeometry","attribute","count","fromBufferAttribute","addVertexToFace","append","insertBefore","removeVertexFromFace","remove","removeAllVerticesFromFace","start","end","removeSubList","deleteFaceVertices","absorbingFace","faceVertices","appendChain","nextVertex","distanceToPoint","resolveUnassignedPoints","isEmpty","first","maxDistance","maxFace","distance","computeExtremes","min","max","minVertices","maxVertices","getComponent","setComponent","Number","EPSILON","abs","computeInitialHull","line3","plane","closestPoint","Line3","Plane","v0","v1","v2","v3","extremes","closestPointToPoint","distanceToSquared","setFromCoplanarPoints","getEdge","setTwin","reindexFaces","activeFaces","nextVertexToAdd","eyeVertex","eyeFace","computeHorizon","eyePoint","crossEdge","horizon","twinEdge","oppositeFace","addAdjoiningFace","horizonEdge","addNewFaces","firstSideEdge","previousSideEdge","sideEdge","addVertexToHull","clear","cleanup","e0","e1","e2","triangle","Triangle","dot","distanceTo","lengthSquared","last","insertAfter","ConvexGeometry","fromBufferGeometry","ConvexBufferGeometry","mergeVertices","normals","Float32BufferAttribute","CSS3DObject","Object3D","style","parentNode","removeChild","CSS3DSprite","CSS3DRenderer","_width","_height","REVISION","matrix","Matrix4","cache","objects","createElement","overflow","WebkitTransformStyle","MozTransformStyle","oTransformStyle","transformStyle","cameraElement","epsilon","getObjectCSSMatrix","elements","left","top","setClearColor","getSize","tan","degToRad","getEffectiveFOV","WebkitPerspective","MozPerspective","oPerspective","perspective","parent","matrixWorldInverse","getInverse","getCameraCSSMatrix","WebkitTransform","MozTransform","oTransform","transform","renderObject","transpose","copyPosition","scale","cachedStyle","children","module","enabled","minDistance","Infinity","minZoom","minPolarAngle","maxPolarAngle","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","SPACE","mouseButtons","ORBIT","MOUSE","ZOOM","MIDDLE","PAN","target0","position0","zoom0","zoom","spacePan","bothPan","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","reset","scope","dispatchEvent","changeEvent","state","STATE","NONE","offset","quat","Quaternion","setFromUnitVectors","up","quatInverse","inverse","lastPosition","lastQuaternion","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","makeSafe","radius","add","panOffset","setFromSpherical","lookAt","zoomChanged","EPS","quaternion","dispose","removeEventListener","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","onKeyDown","startEvent","endEvent","ROTATE","DOLLY","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","Spherical","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","objectMatrix","setFromMatrixColumn","multiplyScalar","panUp","pan","deltaX","deltaY","body","PerspectiveCamera","targetDistance","clientHeight","OrthographicCamera","right","clientWidth","bottom","warn","dollyIn","dollyScale","dollyOut","handleMouseDownPan","event","clientX","clientY","button","handleMouseDownRotate","handleMouseDownDolly","subVectors","handleMouseMoveRotate","handleMouseMoveDolly","spacePanStart","handleMouseMovePan","stopPropagation","handleMouseWheel","keyCode","handleKeyDown","touches","pageX","pageY","handleTouchStartRotate","dx","dy","sqrt","handleTouchStartDolly","handleTouchStartPan","handleTouchMoveRotate","handleTouchMoveDolly","handleTouchMovePan","handleKeyUp","EventDispatcher","defineProperties","center","get","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","relMouseCoords","currentElement","totalOffsetX","totalOffsetY","offsetLeft","scrollLeft","offsetTop","scrollTop","offsetParent","prepNode","nodeToAdd","data","label","NODE_COLOR","hcolor","NODE_HIGHLIGHT","shape","NODE_SHAPE","linecolor","numYeast","random","tsize","TEXT_SIZE","make1x1Rect","rectShape","Shape","moveTo","lineTo","ShapeGeometry","make2x2Rect","volToRadius","volume","createNGraph","updateGraph","setupNgraphLayout","setupD3Layout","forceSimulation","forceManyBody","strength","forceY","forceX","velocityDecay","getElementById","setPixelRatio","devicePixelRatio","oldCoords","panToMousePosition","coordX","coordY","coefficient","Scene","Group","LINES","setupFancyEdges","setUpSimpleEdges","rect","setupSelectionBox","setupBoundaries","setupViewPort","edges","edgeCount","LineBasicMaterial","linewidth","vertexColors","VertexColors","shading","FlatShading","line","LineSegments","frustumCulled","colors","drawCount","selectBox","Line","visible","boundaries","setBoundarySize","viewPort","setViewPortSize","computeBoundingSphere","nodeCount","setupMouseHandlers","callback","coords","mouseX","mouseY","mousePosition","unproject","dir","normalize","isMouseCoordinatesOnMinimap","raycaster","Raycaster","pos","onRightClick","which","getAttribute","focus","onRightClickCoords","callMouseHandler","intersects","intersectObjects","nodeIndex","getNode","ctrlKey","mouseHandler","addNode","graphNode","fx","fy","pinnedx","pinnedy","drawNode","links","removeNode","removeGraphEdges","undrawEdges","draw_object","undrawNode","nodeLinks","getLinks","forEach","removeLink","textHolder","hidden","splice","killed","k","pop","toString","node_id","addEdge","addLink","drawEdge","addNeighbors","neighbors","newNode","addNeighbors2","removeFakes","extend","highlightNode","toggle","setHex","highlightEdges","froms","tos","fromId","toId","highlightNeighbors","indexOf","colorNodeOpacity","colorNodeEdge","linkObjs","ADJACENT_HIGHLIGHT","dc","r","op","selectNode","isSelected","updateSelection","clearSelection","NODE_NO_HIGHLIGHT","hideme","diffx","diffy","checkSelection","npos","getNodePosition","insideBox","posx","posy","ctrl","leftMouseDown","onHover","lastHover","SEARCH_HIGHLIGHT","startTime","endTime","newNodeIds","highlightNodeIds","emit","setUniformNodeSize","s","hsize","HIGHLIGHT_SIZE","setNodeDataSize","dataValue","dataVal","setUniformNodeColor","hsvDegree","setNodeDataColor","values","mapNodeAttributes","mapping","val","mod","attr","changeLabelFontSize","changeLabelLength","changeNodes","changeNode","numChars","relativeSize","fontSize","createHighlightMesh","texture","hshape","NODE_HSHAPE","hgeometry","CircleGeometry","createHighlightDrawObject","getNodeSize","NODE_NO_HTEX","NODE_NO_HCOLOR","parseInt","hmaterial","MeshBasicMaterial","transparent","highlight","Mesh","createNodeMesh","createNodeDrawObject","createPinMesh","PIN_COLOR","pinMesh","NODE_NO_TEX","NODE_NO_COLOR","createNodeLabel","wireframe","wireframeLinewidth","DoubleSide","PlaneGeometry","textMesh","createAndSetupLabelTextMesh","createAndSetupLabelDiv","createAndSetupTextHolder","bbox","Box3","TEXT_X_OFFSET","TEXT_Y_OFFSET","TEXT_WIREFRAME","createLabelDiv","createLabelDivElement","content","createTextNode","textElement","createLabelTextElement","backgroundColor","TEXT_BACK_COLOR","TEXT_OPACITY","textOverflow","userSelect","whiteSpace","setupNodeDrawObject","htexture","name","onTextureLoad","load","himage","NODE_HTEXTURE","image","NODE_TEXTURE","bind","hide","updateColorsAndPositions","setTimeout","v1pos","v2pos","v1color","v2color","setMouseMode","mode","mouseMode","isMouseModeMove","pauseLayout","pause","resumeLayout","mapSelectedNodes","mapAllNodes","pinSelectedNodes","unpinSelectedNodes","setLabelFontSize","setLabelRelativeSize","setLabelLength","toggleMap","updateNodesShowingLabels","override","toggleSelectedLabels","toggleLabels","showSelectedLabels","showLabels","hideSelectedLabels","hideLabels","nodeids","includes","hideAllLabels","showAllLabels","setCanvasSize","setAllNodesShape","setNodeShape","getNumSelected","getNodesCount","toggleDark","getGraph","getNodeList","getPositions","poses","getPinPositions","alias","toggleAlias","setLastNode","dragLastNode","lowerRes","getNeighbors","toggleNeighborHighlight","removeSelected","getSelected","getSelectedIds","setDrawRange","total","thisNode","step","oldNode","updateNode","forEachLink","link","getLink","updatePositions","childNodes","innerText","NODE_SIZE","TEXT_SCALE","scales","LOAD_USER_CONFIG","SAVE_USER_CONFIG","FETCH_WORKSPACE_PROJECTS","CREATE_NEW_PROJECT","DELETE_FILE","CHANGE_WORKSPACE_FOLDER","CHOOSE_GRAPH_FILE","CHOOSE_STATE_FILE","NODE_AND_EDGE_FILE","ONLY_EDGE_FILE","GRAPH_AND_STATE_FILE","ONLY_GRAPH_FILE","IMPORT_GRAPH","OPEN_GRAPH","SEARCH_REQUEST","ADD_NODE","toaster","Toaster","Position","TOP","ipcRenderer","send","eventString","requestChooseGraphFile","requestChooseStateFile","requestOpen","appState","import","graphFile","stateFile","requestImportGraphFromCSV","hasNodeFile","delimiter","newProjectName","loading","importConfig","path","nodeFile","hasColumns","columns","toJS","edgeFile","createMissing","importGraphFromCSV","runInAction","rawGraph","metadata","initialGlobalConfig","overrides","Map","dialogOpen","readCSV","fileObject","hasHeader","file","reader","FileReader","readAsText","Promise","resolve","reject","onload","result","parse","comment","trim","auto_parse","skip_empty_lines","config","nodesArr","createGraph","degreeDict","selectedNodeFileFromInput","degree","pagerank","selectedEdgeFileFromInput","it","from","to","hasNode","edgesSet","Set","edgesArr","edgeKey","has","source_id","target_id","rank","pageRank","snapshotName","fullNodes","fullEdges","floor","nodeProperties","nodeComputed","edgeProperties","PreferencesStore","userConfig","requestSaveUserConfig","workspace","workspacePath","observable","GraphStore","ref","colorBy","sizeBy","labelBy","labelLength","nodesShowingLabels","hasGraphLoaded","filter","frame","optionalConfig","snapshot","global","noPosition","noGlobal","noOverride","JSON","stringify","savedStatesStr","savedStates","savedOverrides","entries","merge","initialNodesShowingLabels","uniq","ret","p","MAX_VALUE","MIN_VALUE","domain","minMax","range","nodeSizeScale","nodeColorScale","computed","action","ImportStore","topN","ready","ProjectStore","SearchStore","preferences","search","project","loadAndDisplaySnapshotFromURL","url","fetch","method","response","text","loadSnapshotFromURL","snapshotString","split","loadImmediateStates","loadAndDisplaySnapshotFromStrapi","uuid","json","catch","loadSnapshotFromStrapi","loadInitialSampleGraph","location","hash","substring","startsWith","decodeURIComponent","alert","saveSnapshotToString","saveImmediateStates","autorun","hasGraph","computedGraph","searchStr","searchOrder","runSearch","panelOpen","candidates","lines","topLinesAsString","show","message","intent","Intent","DANGER","timeout","onerror","PreferencesDialog","observer","iconName","className","classnames","Classes","DARK","isOpen","onClose","title","checked","onChange","saveUserConfig","CONTROL_GROUP","INPUT_GROUP","FILL","DISABLED","INPUT","placeholder","readOnly","PRIMARY","onClick","React","Component","onToggle","MINIMAL","rightIconName","handleClick","item","isActive","ACTIVE","key","items","onSelect","fill","itemRenderer","CommonItemRenderer","filterable","onItemSelect","PreviewTable","props","numRows","selectedRegions","rows","cols","renderCell","ImportDialog","changeAvailable","targetValue","setState","available","canImport","renderNodesSelection","Collapsable","nodesOpen","files","SimpleSelect","renderEdgesSelection","edgesOpen","disabled","newDelimiter","updateDelimiter","DIALOG_BODY","renderDelimiterSelection","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","projectMetadata","createdDate","toLocaleString","OpenDialog","renderSelectGraph","renderSelectState","selectedGraph","selectedState","openDialogOpen","NewProjectDialog","isNewProjectNameDuplicate","projects","some","isNewProjectNameEmpty","isValidated","isNewProjectDialogOpen","ProjectDetailDialog","currentProject","isProjectDetailDialogOpen","hasGraphData","interactive","elevation","Card","ELEVATION_TWO","graphDataPath","snapshotPaths","snapshotPath","replace","BUTTON","INTENT_PRIMARY","currentSnapshotName","filePath","SaveSnapshotDialog","isSaveSnapshotDialogOpen","stringCopyOfSnapshot","select","execCommand","isRenameSnapshotDialogOpen","OpenSnapshotDialog","selectedFile","openSnapshotDialogOpen","fileAsString","uuidv4","ShareDialog","isShared","isFetching","sharedURL","handleRequest","backendURL","headers","referrer","ok","shareDialogOpen","Dialogs","RenameSnapshotDialog","Navbar","NAVBAR","NAVBAR_GROUP","ALIGN_LEFT","NAVBAR_HEADING","NAVBAR_DIVIDER","forceUpdate","selectedNodes","WARNING","removeNodes","ALIGN_RIGHT","href","textDecoration","icon","faGithub","WorkspaceView","textAlign","ThreeJSVis","graphFrame","on","menu","MenuFactory","MenuItemFactory","ContextMenu","flex","GlobalPanel","timeOutRef","sizeOptionOpen","colorOptionOpen","shapeOptionOpen","CARD","allPropertiesKeyList","backgroundImage","hex","x1","y1","x2","y2","stopColor","stopOpacity","stepSize","labelStepSize","pluralize","SelectionPanel","twoLayerUpdate","nodeId","nodeAttrs","delete","batchTwoLayerUpdate","labelOptionOpen","SwitchCollapsable","overrideConfig","NodesPanel","getRenderedNodes","LabelsPanel","NodeDetail","TABLE","TABLE_STRIPED","direction","itemDirection","itemMargin","shapeMargin","labelFormat","format","cx","cy","RenderOptionsCard","panel","Expander","FloatingCards","ELEVATION_2","justifyContent","alignItems","numCandidates","INTERACTIVE","onMouseOver","onMouseLeave","pageNum","allCands","nPerPage","pointerEvents","cursor","pages","maxPage","FocusStyleManager","onlyShowFocusOnTabs","loadUserConfig","DELETE","Keys","BACKSPACE","P","U","App","keydown","ReactDOM"],"mappings":"qGAAA,IAAIA,EAAIC,EAAQ,KAOhB,SAASC,EAAKC,GAAiB,IAAbC,EAAY,uDAAL,GACvBC,KAAKF,GAAKA,EACVE,KAAKC,MAAQH,EACbE,KAAKE,GAAK,GACVF,KAAKG,IAAM,GACXH,KAAKD,KAAOA,EACZC,KAAKI,WAAa,GAClBJ,KAAKK,WAAa,GAClBL,KAAKM,EAAI,EACTN,KAAKO,EAAI,EACTP,KAAKQ,GAAK,EACVR,KAAKS,GAAK,EAKVT,KAAKU,YAAc,SAASZ,GAI1B,OAHAa,WAAaX,KAAKG,IAAIS,IAAI,SAASC,GACjC,OAAOA,EAAQf,KAEVH,EAAEmB,QAAQhB,EAAIa,aAAe,GAIxCd,EAAKkB,UAAUC,YAAc,SAASC,GACpC,OAAKjB,KAAKU,YAAYO,EAAKnB,MACzBE,KAAKG,IAAIe,KAAKD,IACP,IAKXE,EAAQC,KAtCR,SAAcC,EAAQC,GACpBtB,KAAKqB,OAASA,EACdrB,KAAKsB,OAASA,EACdtB,KAAKI,WAAa,IAoCpBe,EAAQtB,KAAOA,G,oBCxCf,IAAI0B,EAAQ3B,EAAQ,KAwKpB,SAAS4B,EAAOC,EAAKC,EAAWC,EAAKC,EAAWC,GAC9C,IAAIC,EAWJ,GATAL,EAAMA,EAAIM,UAAYN,EAAIO,MAAQP,EAAMA,EAAIQ,OAC5CN,EAAMA,EAAII,UAAYJ,EAAIK,MAAQL,EAAMA,EAAIM,OAE5CR,EAAMC,EACFD,EAAIM,SACFN,EAAIM,SAASL,EAAWG,GAAUH,EAAYG,GAC9CJ,EAAIO,MAAMN,EAAWG,GAAUH,EAAYG,GAC7CJ,EAEAE,EAAIO,IACNP,EAAIO,IAAIT,EAAKG,QAEb,IAAKE,EAAI,EAAGA,EAAIL,EAAII,OAAQC,IAC1BH,EAAIG,EAAIF,GAAaH,EAAIK,GAI7B,OAAOH,EA1LTJ,EAAMY,SAAW,WACfnC,KAAKoC,UAAY,GAEjBpC,KAAKqC,SAAW,GAChBrC,KAAKsC,KAAO,GACZtC,KAAKuC,KAAO,GACZvC,KAAKwC,MAAQ,GACbxC,KAAKyC,cAAgB,GACrBzC,KAAK0C,IAAM,GACX1C,KAAK2C,SAAW,GAChB3C,KAAK4C,SAAW,IAAIrB,EAAMsB,eAE1B7C,KAAK8C,cAAgB,MAGvBvB,EAAMY,SAASpB,UAAUgC,YAAc,SAASC,EAAGC,GAMjD,GALAjD,KAAK8C,cAAgBG,EAErBjD,KAAKoC,UAAY,GACjBpC,KAAK2C,SAAW,GAEZK,aAAazB,EAAM2B,SACrB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAEI,SAASvB,OAAQsB,IAAK,CAC1C,IAAIE,EAAIL,EAAEI,SAASD,GACfF,EAAIE,EAAIH,EAAEI,SAASvB,OACvB7B,KAAKoC,UAAUlB,KAAKmC,EAAE/C,EAAG+C,EAAE9C,EAAG8C,EAAEC,GAChCtD,KAAKoC,UAAUlB,KAAKmC,EAAE/C,EAAG+C,EAAE9C,EAAG8C,EAAEC,GAChCtD,KAAK2C,SAASzB,KAAK+B,GACnBjD,KAAK2C,SAASzB,KAAK+B,GAQvB,GAJiB1B,EAAMsB,eAInBG,aAAaO,cAAgBP,aAAaQ,MAC5C,IAASL,EAAI,EAAGA,EAAIH,EAAEnB,OAAQsB,GAAK,EAAG,CAChCF,EAAIE,EAAIH,EAAEnB,OACd7B,KAAKoC,UAAUlB,KAAK8B,EAAEG,GAAIH,EAAEG,EAAI,GAAIH,EAAEG,EAAI,IAC1CnD,KAAKoC,UAAUlB,KAAK8B,EAAEG,GAAIH,EAAEG,EAAI,GAAIH,EAAEG,EAAI,IAC1CnD,KAAK2C,SAASzB,KAAK+B,GACnBjD,KAAK2C,SAASzB,KAAK+B,GAIvBjD,KAAKyD,WAGPlC,EAAMY,SAASpB,UAAU2C,UAAY,SAASC,EAAGC,GAC/C,IAAIC,EAAS,EAAJF,EACLG,EAAS,EAAJF,EACT,OACE5D,KAAKoC,UAAUyB,KAAQ7D,KAAKoC,UAAU0B,IACtC9D,KAAKoC,UAAUyB,EAAK,KAAO7D,KAAKoC,UAAU0B,EAAK,IAC/C9D,KAAKoC,UAAUyB,EAAK,KAAO7D,KAAKoC,UAAU0B,EAAK,IAInDvC,EAAMY,SAASpB,UAAUgD,OAAS,SAASJ,GACzC,IAAIE,EAAS,EAAJF,EACT,MAAO,CAAC3D,KAAKoC,UAAUyB,GAAK7D,KAAKoC,UAAUyB,EAAK,GAAI7D,KAAKoC,UAAUyB,EAAK,KAG1EtC,EAAMY,SAASpB,UAAU0C,QAAU,WACjC,IAcIO,EAaAX,EA3BAY,EAAIjE,KAAKoC,UAAUP,OAAS,EAEhC7B,KAAKqC,SAAW,GAChBrC,KAAKsC,KAAO,GACZtC,KAAKuC,KAAO,GACZvC,KAAKwC,MAAQ,GACbxC,KAAKyC,cAAgB,GACrBzC,KAAK0C,IAAM,GAEX,IAAK,IAAIS,EAAI,EAAGA,EAAIc,EAAGd,IACrBnD,KAAKuC,KAAKrB,KAAK,GACflB,KAAKuC,KAAKrB,MAAM,GAIlB,IAASiC,EAAI,EAAGA,EAAIc,EAAGd,IACGa,EAApBhE,KAAK8C,cAAmB9C,KAAK8C,cAAcK,GAAKc,EAAI,IAC/C,EACTjE,KAAKwC,MAAMtB,KAAK8C,GAChBhE,KAAKwC,MAAMtB,KAAK8C,GAGlB,IAASb,EAAI,EAAGA,EAAIc,EAAGd,IACrBnD,KAAK0C,IAAIxB,KAAKiC,GAAKc,EAAI,GAAI,GAC3BjE,KAAK0C,IAAIxB,KAAKiC,GAAKc,EAAI,GAAI,GAM3BZ,EADErD,KAAK0D,UAAU,EAAGO,EAAI,GACpBjE,KAAK+D,OAAOE,EAAI,GAEhBjE,KAAK+D,OAAO,GAElB/D,KAAKqC,SAASnB,KAAKmC,EAAE,GAAIA,EAAE,GAAIA,EAAE,IACjCrD,KAAKqC,SAASnB,KAAKmC,EAAE,GAAIA,EAAE,GAAIA,EAAE,IACjC,IAASF,EAAI,EAAGA,EAAIc,EAAI,EAAGd,IACzBE,EAAIrD,KAAK+D,OAAOZ,GAChBnD,KAAKqC,SAASnB,KAAKmC,EAAE,GAAIA,EAAE,GAAIA,EAAE,IACjCrD,KAAKqC,SAASnB,KAAKmC,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAGnC,IAASF,EAAI,EAAGA,EAAIc,EAAGd,IACrBE,EAAIrD,KAAK+D,OAAOZ,GAChBnD,KAAKsC,KAAKpB,KAAKmC,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAC7BrD,KAAKsC,KAAKpB,KAAKmC,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAI7BA,EADErD,KAAK0D,UAAUO,EAAI,EAAG,GACpBjE,KAAK+D,OAAO,GAEZ/D,KAAK+D,OAAOE,EAAI,GAEtBjE,KAAKsC,KAAKpB,KAAKmC,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAC7BrD,KAAKsC,KAAKpB,KAAKmC,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAE7B,IAASF,EAAI,EAAGA,EAAIc,EAAI,EAAGd,IAAK,CAC9B,IAAIe,EAAQ,EAAJf,EACRnD,KAAKyC,cAAcvB,KAAKgD,EAAGA,EAAI,EAAGA,EAAI,GACtClE,KAAKyC,cAAcvB,KAAKgD,EAAI,EAAGA,EAAI,EAAGA,EAAI,GAGvClE,KAAKmE,YAYRnE,KAAKmE,WAAWC,SAASC,UAAU,IAAId,aAAavD,KAAKoC,YACzDpC,KAAKmE,WAAWC,SAASE,aAAc,EACvCtE,KAAKmE,WAAW9B,SAASgC,UAAU,IAAId,aAAavD,KAAKqC,WACzDrC,KAAKmE,WAAW9B,SAASiC,aAAc,EACvCtE,KAAKmE,WAAW7B,KAAK+B,UAAU,IAAId,aAAavD,KAAKsC,OACrDtC,KAAKmE,WAAW7B,KAAKgC,aAAc,EACnCtE,KAAKmE,WAAW5B,KAAK8B,UAAU,IAAId,aAAavD,KAAKuC,OACrDvC,KAAKmE,WAAW5B,KAAK+B,aAAc,EACnCtE,KAAKmE,WAAW3B,MAAM6B,UAAU,IAAId,aAAavD,KAAKwC,QACtDxC,KAAKmE,WAAW3B,MAAM8B,aAAc,EACpCtE,KAAKmE,WAAWI,GAAGF,UAAU,IAAId,aAAavD,KAAK0C,MACnD1C,KAAKmE,WAAWI,GAAGD,aAAc,EACjCtE,KAAKmE,WAAWlE,MAAMoE,UAAU,IAAIG,YAAYxE,KAAKyC,gBACrDzC,KAAKmE,WAAWlE,MAAMqE,aAAc,GAxBpCtE,KAAKmE,WAAa,CAChBC,SAAU,IAAI7C,EAAMkD,gBAAgB,IAAIlB,aAAavD,KAAKoC,WAAY,GACtEC,SAAU,IAAId,EAAMkD,gBAAgB,IAAIlB,aAAavD,KAAKqC,UAAW,GACrEC,KAAM,IAAIf,EAAMkD,gBAAgB,IAAIlB,aAAavD,KAAKsC,MAAO,GAC7DC,KAAM,IAAIhB,EAAMkD,gBAAgB,IAAIlB,aAAavD,KAAKuC,MAAO,GAC7DC,MAAO,IAAIjB,EAAMkD,gBAAgB,IAAIlB,aAAavD,KAAKwC,OAAQ,GAC/D+B,GAAI,IAAIhD,EAAMkD,gBAAgB,IAAIlB,aAAavD,KAAK0C,KAAM,GAC1DzC,MAAO,IAAIsB,EAAMkD,gBAAgB,IAAID,YAAYxE,KAAKyC,eAAgB,GACtEE,SAAU,IAAIpB,EAAMkD,gBAAgB,IAAIlB,aAAavD,KAAK2C,UAAW,IAmBzE3C,KAAK4C,SAAS8B,aAAa,WAAY1E,KAAKmE,WAAWC,UACvDpE,KAAK4C,SAAS8B,aAAa,WAAY1E,KAAKmE,WAAW9B,UACvDrC,KAAK4C,SAAS8B,aAAa,OAAQ1E,KAAKmE,WAAW7B,MACnDtC,KAAK4C,SAAS8B,aAAa,OAAQ1E,KAAKmE,WAAW5B,MACnDvC,KAAK4C,SAAS8B,aAAa,QAAS1E,KAAKmE,WAAW3B,OACpDxC,KAAK4C,SAAS8B,aAAa,KAAM1E,KAAKmE,WAAWI,IACjDvE,KAAK4C,SAAS8B,aAAa,WAAY1E,KAAKmE,WAAWxB,UAEvD3C,KAAK4C,SAAS+B,SAAS3E,KAAKmE,WAAWlE,QA8BzCsB,EAAMY,SAASpB,UAAU6D,QAAU,SAASR,GAC1C,IAAIhC,EAAYpC,KAAKmE,WAAWC,SAASS,MACrCxC,EAAWrC,KAAKmE,WAAW9B,SAASwC,MACpCvC,EAAOtC,KAAKmE,WAAW7B,KAAKuC,MAC5BZ,EAAI7B,EAAUP,OAGlBL,EAAOY,EAAW,EAAGC,EAAU,EAAG4B,GAGlCzC,EAAOY,EAAW,EAAGA,EAAW,EAAG6B,EAAI,GAEvC7B,EAAU6B,EAAI,GAAKG,EAAS9D,EAC5B8B,EAAU6B,EAAI,GAAKG,EAAS7D,EAC5B6B,EAAU6B,EAAI,GAAKG,EAASd,EAC5BlB,EAAU6B,EAAI,GAAKG,EAAS9D,EAC5B8B,EAAU6B,EAAI,GAAKG,EAAS7D,EAC5B6B,EAAU6B,EAAI,GAAKG,EAASd,EAG5B9B,EAAOY,EAAW,EAAGE,EAAM,EAAG2B,EAAI,GAElC3B,EAAK2B,EAAI,GAAKG,EAAS9D,EACvBgC,EAAK2B,EAAI,GAAKG,EAAS7D,EACvB+B,EAAK2B,EAAI,GAAKG,EAASd,EACvBhB,EAAK2B,EAAI,GAAKG,EAAS9D,EACvBgC,EAAK2B,EAAI,GAAKG,EAAS7D,EACvB+B,EAAK2B,EAAI,GAAKG,EAASd,EAEvBtD,KAAKmE,WAAWC,SAASE,aAAc,EACvCtE,KAAKmE,WAAW9B,SAASiC,aAAc,EACvCtE,KAAKmE,WAAW7B,KAAKgC,aAAc,GAGrC/C,EAAMuD,iBAAmB,SAASC,GAqHhC,SAASC,EAAM3B,EAAG4B,GAChB,YAAUC,IAAN7B,EAAwB4B,EACrB5B,EAGT9B,EAAM4D,SAASC,KAAKpF,MAEpB+E,EAAaA,GAAc,GAE3B/E,KAAKqF,UAAYL,EAAMD,EAAWM,UAAW,GAC7CrF,KAAKY,IAAMoE,EAAMD,EAAWnE,IAAK,MACjCZ,KAAKsF,OAASN,EAAMD,EAAWO,OAAQ,GACvCtF,KAAKuF,MAAQP,EAAMD,EAAWQ,MAAO,IAAIhE,EAAMiE,MAAM,WACrDxF,KAAKyF,QAAUT,EAAMD,EAAWU,QAAS,GACzCzF,KAAK0F,WAAaV,EAAMD,EAAWW,WAAY,IAAInE,EAAMoE,QAAQ,EAAG,IACpE3F,KAAK4F,gBAAkBZ,EAAMD,EAAWa,gBAAiB,GACzD5F,KAAK6F,KAAOb,EAAMD,EAAWc,KAAM,GACnC7F,KAAK8F,IAAMd,EAAMD,EAAWe,IAAK,GACjC9F,KAAK+F,UAAYf,EAAMD,EAAWgB,UAAW,IAC7C/F,KAAKgG,QAAUhG,KAAK+F,YAAc,GAAK,EAAI,EAC3C/F,KAAKiG,WAAajB,EAAMD,EAAWkB,WAAY,GAC/CjG,KAAKkG,UAAYlB,EAAMD,EAAWmB,UAAW,GAE7C,IAAIC,EAAW,IAAI5E,EAAM6E,kBAAkB,CACzCC,SAAU,CACRhB,UAAW,CAAEiB,KAAM,IAAKC,MAAOvG,KAAKqF,WACpCzE,IAAK,CAAE0F,KAAM,IAAKC,MAAOvG,KAAKY,KAC9B0E,OAAQ,CAAEgB,KAAM,IAAKC,MAAOvG,KAAKsF,QACjCC,MAAO,CAAEe,KAAM,IAAKC,MAAOvG,KAAKuF,OAChCE,QAAS,CAAEa,KAAM,IAAKC,MAAOvG,KAAKyF,SAClCC,WAAY,CAAEY,KAAM,KAAMC,MAAOvG,KAAK0F,YACtCE,gBAAiB,CAAEU,KAAM,IAAKC,MAAOvG,KAAK4F,iBAC1CC,KAAM,CAAES,KAAM,IAAKC,MAAOvG,KAAK6F,MAC/BC,IAAK,CAAEQ,KAAM,IAAKC,MAAOvG,KAAK8F,KAC9BC,UAAW,CACTO,KAAM,KACNC,MAAO,IAAIhF,EAAMoE,QAAQ3F,KAAK+F,UAAU,GAAI/F,KAAK+F,UAAU,KAE7DC,QAAS,CAAEM,KAAM,IAAKC,MAAOvG,KAAKgG,SAClCC,WAAY,CAAEK,KAAM,IAAKC,MAAOvG,KAAKiG,YACrCC,UAAW,CAAEI,KAAM,IAAKC,MAAOvG,KAAKkG,YAEtCM,aA9JuB,CACvB,yBACA,GACA,2BACA,2BACA,uBACA,wBACA,yBACA,qBACA,4BACA,GACA,iCACA,gCACA,2BACA,2BACA,sBACA,yBACA,sBACA,qBACA,iCACA,GACA,oBACA,uBACA,0BACA,2BACA,GACA,qCACA,GACA,6BACA,uBACA,2BACA,kBACA,GACA,IACA,GACA,gBACA,GACA,kDACA,2EACA,GACA,uCACA,gBACA,GACA,mDACA,sDACA,gDACA,4CACA,GACA,oDACA,2CACA,2CACA,GACA,2DACA,sDACA,GACA,oCACA,uCACA,QACA,GACA,gBACA,mEACA,wEACA,aACA,qDACA,qDACA,0CACA,GACA,+CACA,8CACA,6EACA,GACA,QACA,GACA,2EACA,2CACA,0BACA,wBACA,GACA,qDACA,qCACA,GACA,iEACA,mCACA,GACA,KA0EiCC,KAAK,QACtCC,eAxEyB,CACzB,kDACA,2BACA,GACA,yBACA,wBACA,yBACA,0BACA,4BACA,2BACA,GACA,oBACA,uBACA,0BACA,2BACA,GACA,gBACA,GACA,uBACA,oCACA,qDACA,0BACA,SACA,OACA,wBACA,mDACA,KA8CqCD,KAAK,UAoB5C,cAjBO1B,EAAWM,iBACXN,EAAWnE,WACXmE,EAAWO,cACXP,EAAWQ,aACXR,EAAWU,eACXV,EAAWW,kBACXX,EAAWa,uBACXb,EAAWc,YACXd,EAAWe,WACXf,EAAWgB,iBACXhB,EAAWkB,kBACXlB,EAAWmB,UAElBC,EAASG,KAAO,mBAEhBH,EAASQ,UAAU5B,GAEZoB,GAGT5E,EAAMuD,iBAAiB/D,UAAY6F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","file":"static/js/main.e4e6e4fe.chunk.js","sourcesContent":["var $ = require(\"jquery\");\r\nfunction Edge(source, target) {\r\n  this.source = source;\r\n  this.target = target;\r\n  this.renderData = {};\r\n}\r\n\r\nfunction Node(id, size = 0.5) {\r\n  this.id = id;\r\n  this.index = id;\r\n  this.in = [];\r\n  this.out = [];\r\n  this.size = size;\r\n  this.renderData = {};\r\n  this.domainData = {};\r\n  this.x = 1;\r\n  this.y = 1;\r\n  this.vx = 1;\r\n  this.vy = 1;\r\n\r\n  /**\r\n   * Tells if a node is connected to a node of a certain id\r\n   */\r\n  this.connectedTo = function(id) {\r\n    outNodeIds = this.out.map(function(outNode) {\r\n      return outNode.id;\r\n    });\r\n    return $.inArray(id, outNodeIds) >= 0;\r\n  };\r\n}\r\n\r\nNode.prototype.connectNode = function(node) {\r\n  if (!this.connectedTo(node.id)) {\r\n    this.out.push(node);\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexports.Edge = Edge;\r\nexports.Node = Node;\r\n","var THREE = require(\"three\");\r\n\r\nTHREE.MeshLine = function() {\r\n  this.positions = [];\r\n\r\n  this.previous = [];\r\n  this.next = [];\r\n  this.side = [];\r\n  this.width = [];\r\n  this.indices_array = [];\r\n  this.uvs = [];\r\n  this.counters = [];\r\n  this.geometry = new THREE.BufferGeometry();\r\n\r\n  this.widthCallback = null;\r\n};\r\n\r\nTHREE.MeshLine.prototype.setGeometry = function(g, c) {\r\n  this.widthCallback = c;\r\n\r\n  this.positions = [];\r\n  this.counters = [];\r\n\r\n  if (g instanceof THREE.Geometry) {\r\n    for (var j = 0; j < g.vertices.length; j++) {\r\n      var v = g.vertices[j];\r\n      var c = j / g.vertices.length;\r\n      this.positions.push(v.x, v.y, v.z);\r\n      this.positions.push(v.x, v.y, v.z);\r\n      this.counters.push(c);\r\n      this.counters.push(c);\r\n    }\r\n  }\r\n\r\n  if (g instanceof THREE.BufferGeometry) {\r\n    // read attribute positions ?\r\n  }\r\n\r\n  if (g instanceof Float32Array || g instanceof Array) {\r\n    for (var j = 0; j < g.length; j += 3) {\r\n      var c = j / g.length;\r\n      this.positions.push(g[j], g[j + 1], g[j + 2]);\r\n      this.positions.push(g[j], g[j + 1], g[j + 2]);\r\n      this.counters.push(c);\r\n      this.counters.push(c);\r\n    }\r\n  }\r\n\r\n  this.process();\r\n};\r\n\r\nTHREE.MeshLine.prototype.compareV3 = function(a, b) {\r\n  var aa = a * 6;\r\n  var ab = b * 6;\r\n  return (\r\n    this.positions[aa] === this.positions[ab] &&\r\n    this.positions[aa + 1] === this.positions[ab + 1] &&\r\n    this.positions[aa + 2] === this.positions[ab + 2]\r\n  );\r\n};\r\n\r\nTHREE.MeshLine.prototype.copyV3 = function(a) {\r\n  var aa = a * 6;\r\n  return [this.positions[aa], this.positions[aa + 1], this.positions[aa + 2]];\r\n};\r\n\r\nTHREE.MeshLine.prototype.process = function() {\r\n  var l = this.positions.length / 6;\r\n\r\n  this.previous = [];\r\n  this.next = [];\r\n  this.side = [];\r\n  this.width = [];\r\n  this.indices_array = [];\r\n  this.uvs = [];\r\n\r\n  for (var j = 0; j < l; j++) {\r\n    this.side.push(1);\r\n    this.side.push(-1);\r\n  }\r\n\r\n  var w;\r\n  for (var j = 0; j < l; j++) {\r\n    if (this.widthCallback) w = this.widthCallback(j / (l - 1));\r\n    else w = 1;\r\n    this.width.push(w);\r\n    this.width.push(w);\r\n  }\r\n\r\n  for (var j = 0; j < l; j++) {\r\n    this.uvs.push(j / (l - 1), 0);\r\n    this.uvs.push(j / (l - 1), 1);\r\n  }\r\n\r\n  var v;\r\n\r\n  if (this.compareV3(0, l - 1)) {\r\n    v = this.copyV3(l - 2);\r\n  } else {\r\n    v = this.copyV3(0);\r\n  }\r\n  this.previous.push(v[0], v[1], v[2]);\r\n  this.previous.push(v[0], v[1], v[2]);\r\n  for (var j = 0; j < l - 1; j++) {\r\n    v = this.copyV3(j);\r\n    this.previous.push(v[0], v[1], v[2]);\r\n    this.previous.push(v[0], v[1], v[2]);\r\n  }\r\n\r\n  for (var j = 1; j < l; j++) {\r\n    v = this.copyV3(j);\r\n    this.next.push(v[0], v[1], v[2]);\r\n    this.next.push(v[0], v[1], v[2]);\r\n  }\r\n\r\n  if (this.compareV3(l - 1, 0)) {\r\n    v = this.copyV3(1);\r\n  } else {\r\n    v = this.copyV3(l - 1);\r\n  }\r\n  this.next.push(v[0], v[1], v[2]);\r\n  this.next.push(v[0], v[1], v[2]);\r\n\r\n  for (var j = 0; j < l - 1; j++) {\r\n    var n = j * 2;\r\n    this.indices_array.push(n, n + 1, n + 2);\r\n    this.indices_array.push(n + 2, n + 1, n + 3);\r\n  }\r\n\r\n  if (!this.attributes) {\r\n    this.attributes = {\r\n      position: new THREE.BufferAttribute(new Float32Array(this.positions), 3),\r\n      previous: new THREE.BufferAttribute(new Float32Array(this.previous), 3),\r\n      next: new THREE.BufferAttribute(new Float32Array(this.next), 3),\r\n      side: new THREE.BufferAttribute(new Float32Array(this.side), 1),\r\n      width: new THREE.BufferAttribute(new Float32Array(this.width), 1),\r\n      uv: new THREE.BufferAttribute(new Float32Array(this.uvs), 2),\r\n      index: new THREE.BufferAttribute(new Uint16Array(this.indices_array), 1),\r\n      counters: new THREE.BufferAttribute(new Float32Array(this.counters), 1)\r\n    };\r\n  } else {\r\n    this.attributes.position.copyArray(new Float32Array(this.positions));\r\n    this.attributes.position.needsUpdate = true;\r\n    this.attributes.previous.copyArray(new Float32Array(this.previous));\r\n    this.attributes.previous.needsUpdate = true;\r\n    this.attributes.next.copyArray(new Float32Array(this.next));\r\n    this.attributes.next.needsUpdate = true;\r\n    this.attributes.side.copyArray(new Float32Array(this.side));\r\n    this.attributes.side.needsUpdate = true;\r\n    this.attributes.width.copyArray(new Float32Array(this.width));\r\n    this.attributes.width.needsUpdate = true;\r\n    this.attributes.uv.copyArray(new Float32Array(this.uvs));\r\n    this.attributes.uv.needsUpdate = true;\r\n    this.attributes.index.copyArray(new Uint16Array(this.indices_array));\r\n    this.attributes.index.needsUpdate = true;\r\n  }\r\n\r\n  this.geometry.addAttribute(\"position\", this.attributes.position);\r\n  this.geometry.addAttribute(\"previous\", this.attributes.previous);\r\n  this.geometry.addAttribute(\"next\", this.attributes.next);\r\n  this.geometry.addAttribute(\"side\", this.attributes.side);\r\n  this.geometry.addAttribute(\"width\", this.attributes.width);\r\n  this.geometry.addAttribute(\"uv\", this.attributes.uv);\r\n  this.geometry.addAttribute(\"counters\", this.attributes.counters);\r\n\r\n  this.geometry.setIndex(this.attributes.index);\r\n};\r\n\r\nfunction memcpy(src, srcOffset, dst, dstOffset, length) {\r\n  var i;\r\n\r\n  src = src.subarray || src.slice ? src : src.buffer;\r\n  dst = dst.subarray || dst.slice ? dst : dst.buffer;\r\n\r\n  src = srcOffset\r\n    ? src.subarray\r\n      ? src.subarray(srcOffset, length && srcOffset + length)\r\n      : src.slice(srcOffset, length && srcOffset + length)\r\n    : src;\r\n\r\n  if (dst.set) {\r\n    dst.set(src, dstOffset);\r\n  } else {\r\n    for (i = 0; i < src.length; i++) {\r\n      dst[i + dstOffset] = src[i];\r\n    }\r\n  }\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Fast method to advance the line by one position.  The oldest position is removed.\r\n * @param position\r\n */\r\nTHREE.MeshLine.prototype.advance = function(position) {\r\n  var positions = this.attributes.position.array;\r\n  var previous = this.attributes.previous.array;\r\n  var next = this.attributes.next.array;\r\n  var l = positions.length;\r\n\r\n  // PREVIOUS\r\n  memcpy(positions, 0, previous, 0, l);\r\n\r\n  // POSITIONS\r\n  memcpy(positions, 6, positions, 0, l - 6);\r\n\r\n  positions[l - 6] = position.x;\r\n  positions[l - 5] = position.y;\r\n  positions[l - 4] = position.z;\r\n  positions[l - 3] = position.x;\r\n  positions[l - 2] = position.y;\r\n  positions[l - 1] = position.z;\r\n\r\n  // NEXT\r\n  memcpy(positions, 6, next, 0, l - 6);\r\n\r\n  next[l - 6] = position.x;\r\n  next[l - 5] = position.y;\r\n  next[l - 4] = position.z;\r\n  next[l - 3] = position.x;\r\n  next[l - 2] = position.y;\r\n  next[l - 1] = position.z;\r\n\r\n  this.attributes.position.needsUpdate = true;\r\n  this.attributes.previous.needsUpdate = true;\r\n  this.attributes.next.needsUpdate = true;\r\n};\r\n\r\nTHREE.MeshLineMaterial = function(parameters) {\r\n  var vertexShaderSource = [\r\n    \"precision highp float;\",\r\n    \"\",\r\n    \"attribute vec3 position;\",\r\n    \"attribute vec3 previous;\",\r\n    \"attribute vec3 next;\",\r\n    \"attribute float side;\",\r\n    \"attribute float width;\",\r\n    \"attribute vec2 uv;\",\r\n    \"attribute float counters;\",\r\n    \"\",\r\n    \"uniform mat4 projectionMatrix;\",\r\n    \"uniform mat4 modelViewMatrix;\",\r\n    \"uniform vec2 resolution;\",\r\n    \"uniform float lineWidth;\",\r\n    \"uniform vec3 color;\",\r\n    \"uniform float opacity;\",\r\n    \"uniform float near;\",\r\n    \"uniform float far;\",\r\n    \"uniform float sizeAttenuation;\",\r\n    \"\",\r\n    \"varying vec2 vUV;\",\r\n    \"varying vec4 vColor;\",\r\n    \"varying vec3 vPosition;\",\r\n    \"varying float vCounters;\",\r\n    \"\",\r\n    \"vec2 fix( vec4 i, float aspect ) {\",\r\n    \"\",\r\n    \"    vec2 res = i.xy / i.w;\",\r\n    \"    res.x *= aspect;\",\r\n    \"\t vCounters = counters;\",\r\n    \"    return res;\",\r\n    \"\",\r\n    \"}\",\r\n    \"\",\r\n    \"void main() {\",\r\n    \"\",\r\n    \"    float aspect = resolution.x / resolution.y;\",\r\n    \"\t float pixelWidthRatio = 1. / (resolution.x * projectionMatrix[0][0]);\",\r\n    \"\",\r\n    \"    vColor = vec4( color, opacity );\",\r\n    \"    vUV = uv;\",\r\n    \"\",\r\n    \"    mat4 m = projectionMatrix * modelViewMatrix;\",\r\n    \"    vec4 finalPosition = m * vec4( position, 1.0 );\",\r\n    \"    vec4 prevPos = m * vec4( previous, 1.0 );\",\r\n    \"    vec4 nextPos = m * vec4( next, 1.0 );\",\r\n    \"\",\r\n    \"    vec2 currentP = fix( finalPosition, aspect );\",\r\n    \"    vec2 prevP = fix( prevPos, aspect );\",\r\n    \"    vec2 nextP = fix( nextPos, aspect );\",\r\n    \"\",\r\n    \"\t float pixelWidth = finalPosition.w * pixelWidthRatio;\",\r\n    \"    float w = 1.8 * pixelWidth * lineWidth * width;\",\r\n    \"\",\r\n    \"    if( sizeAttenuation == 1. ) {\",\r\n    \"        w = 1.8 * lineWidth * width;\",\r\n    \"    }\",\r\n    \"\",\r\n    \"    vec2 dir;\",\r\n    \"    if( nextP == currentP ) dir = normalize( currentP - prevP );\",\r\n    \"    else if( prevP == currentP ) dir = normalize( nextP - currentP );\",\r\n    \"    else {\",\r\n    \"        vec2 dir1 = normalize( currentP - prevP );\",\r\n    \"        vec2 dir2 = normalize( nextP - currentP );\",\r\n    \"        dir = normalize( dir1 + dir2 );\",\r\n    \"\",\r\n    \"        vec2 perp = vec2( -dir1.y, dir1.x );\",\r\n    \"        vec2 miter = vec2( -dir.y, dir.x );\",\r\n    \"        //w = clamp( w / dot( miter, perp ), 0., 4. * lineWidth * width );\",\r\n    \"\",\r\n    \"    }\",\r\n    \"\",\r\n    \"    //vec2 normal = ( cross( vec3( dir, 0. ), vec3( 0., 0., 1. ) ) ).xy;\",\r\n    \"    vec2 normal = vec2( -dir.y, dir.x );\",\r\n    \"    normal.x /= aspect;\",\r\n    \"    normal *= .5 * w;\",\r\n    \"\",\r\n    \"    vec4 offset = vec4( normal * side, 0.0, 1.0 );\",\r\n    \"    finalPosition.xy += offset.xy;\",\r\n    \"\",\r\n    \"\t vPosition = ( modelViewMatrix * vec4( position, 1. ) ).xyz;\",\r\n    \"    gl_Position = finalPosition;\",\r\n    \"\",\r\n    \"}\"\r\n  ];\r\n\r\n  var fragmentShaderSource = [\r\n    \"#extension GL_OES_standard_derivatives : enable\",\r\n    \"precision mediump float;\",\r\n    \"\",\r\n    \"uniform sampler2D map;\",\r\n    \"uniform float useMap;\",\r\n    \"uniform float useDash;\",\r\n    \"uniform vec2 dashArray;\",\r\n    \"uniform float visibility;\",\r\n    \"uniform float alphaTest;\",\r\n    \"\",\r\n    \"varying vec2 vUV;\",\r\n    \"varying vec4 vColor;\",\r\n    \"varying vec3 vPosition;\",\r\n    \"varying float vCounters;\",\r\n    \"\",\r\n    \"void main() {\",\r\n    \"\",\r\n    \"    vec4 c = vColor;\",\r\n    \"\t if( c.a < alphaTest ) discard;\",\r\n    \"    if( useMap == 1. ) c *= texture2D( map, vUV );\",\r\n    \"\t if( useDash == 1. ){\",\r\n    \"\t \t \",\r\n    \"\t }\",\r\n    \"    gl_FragColor = c;\",\r\n    \"\t gl_FragColor.a *= step(vCounters,visibility);\",\r\n    \"}\"\r\n  ];\r\n\r\n  function check(v, d) {\r\n    if (v === undefined) return d;\r\n    return v;\r\n  }\r\n\r\n  THREE.Material.call(this);\r\n\r\n  parameters = parameters || {};\r\n\r\n  this.lineWidth = check(parameters.lineWidth, 1);\r\n  this.map = check(parameters.map, null);\r\n  this.useMap = check(parameters.useMap, 0);\r\n  this.color = check(parameters.color, new THREE.Color(0xffffff));\r\n  this.opacity = check(parameters.opacity, 1);\r\n  this.resolution = check(parameters.resolution, new THREE.Vector2(1, 1));\r\n  this.sizeAttenuation = check(parameters.sizeAttenuation, 1);\r\n  this.near = check(parameters.near, 1);\r\n  this.far = check(parameters.far, 1);\r\n  this.dashArray = check(parameters.dashArray, []);\r\n  this.useDash = this.dashArray !== [] ? 1 : 0;\r\n  this.visibility = check(parameters.visibility, 1);\r\n  this.alphaTest = check(parameters.alphaTest, 0);\r\n\r\n  var material = new THREE.RawShaderMaterial({\r\n    uniforms: {\r\n      lineWidth: { type: \"f\", value: this.lineWidth },\r\n      map: { type: \"t\", value: this.map },\r\n      useMap: { type: \"f\", value: this.useMap },\r\n      color: { type: \"c\", value: this.color },\r\n      opacity: { type: \"f\", value: this.opacity },\r\n      resolution: { type: \"v2\", value: this.resolution },\r\n      sizeAttenuation: { type: \"f\", value: this.sizeAttenuation },\r\n      near: { type: \"f\", value: this.near },\r\n      far: { type: \"f\", value: this.far },\r\n      dashArray: {\r\n        type: \"v2\",\r\n        value: new THREE.Vector2(this.dashArray[0], this.dashArray[1])\r\n      },\r\n      useDash: { type: \"f\", value: this.useDash },\r\n      visibility: { type: \"f\", value: this.visibility },\r\n      alphaTest: { type: \"f\", value: this.alphaTest }\r\n    },\r\n    vertexShader: vertexShaderSource.join(\"\\r\\n\"),\r\n    fragmentShader: fragmentShaderSource.join(\"\\r\\n\")\r\n  });\r\n\r\n  delete parameters.lineWidth;\r\n  delete parameters.map;\r\n  delete parameters.useMap;\r\n  delete parameters.color;\r\n  delete parameters.opacity;\r\n  delete parameters.resolution;\r\n  delete parameters.sizeAttenuation;\r\n  delete parameters.near;\r\n  delete parameters.far;\r\n  delete parameters.dashArray;\r\n  delete parameters.visibility;\r\n  delete parameters.alphaTest;\r\n\r\n  material.type = \"MeshLineMaterial\";\r\n\r\n  material.setValues(parameters);\r\n\r\n  return material;\r\n};\r\n\r\nTHREE.MeshLineMaterial.prototype = Object.create(THREE.Material.prototype);\r\nTHREE.MeshLineMaterial.prototype.constructor = THREE.MeshLineMaterial;\r\n\r\nTHREE.MeshLineMaterial.prototype.copy = function(source) {\r\n  THREE.Material.prototype.copy.call(this, source);\r\n\r\n  this.lineWidth = source.lineWidth;\r\n  this.map = source.map;\r\n  this.useMap = source.useMap;\r\n  this.color.copy(source.color);\r\n  this.opacity = source.opacity;\r\n  this.resolution.copy(source.resolution);\r\n  this.sizeAttenuation = source.sizeAttenuation;\r\n  this.near = source.near;\r\n  this.far = source.far;\r\n\r\n  return this;\r\n};\r\n\r\nexports.MeshLine = THREE.MeshLine;\r\nexports.MeshLineMaterial = THREE.MeshLineMaterial;\r\n","var Frame = require(\"./src/process\").Frame;\r\n\r\nexports.Frame = Frame;\r\n\r\nvar graph = require(\"ngraph.generators\").balancedBinTree(5);\r\n\r\nexports.graph = graph;\r\n\r\nif (window) {\r\n  window.Argo = exports;\r\n}\r\n","var def = require(\"./imports\").default;\r\nconst spawn = require(\"threads\").spawn;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\n\r\nvar Frame = function(graph, options) {\r\n  // Needed to reference \"this\" in functions\r\n  var self = this;\r\n\r\n  // Options\r\n  this.inGraph = graph;\r\n  this.options = options || {\r\n    layout: def.LAYOUT\r\n  };\r\n  this.layout_options = this.options.graphLayout || {};\r\n\r\n  this.lineObjects = [];\r\n  this.lineIndices = [];\r\n  this.MAX_LINES = 100000;\r\n  this.textureLoader = new THREE.TextureLoader();\r\n  this.textureLoader.crossOrigin = true;\r\n  this.oldIntersect = -1;\r\n  this.selection = [];\r\n  this.fov = 60;\r\n  this.near = 1;\r\n  this.far = 5000;\r\n  this.mouseStart = new THREE.Vector3(0, 0, 0);\r\n  this.mouseEnd = new THREE.Vector3(0, 0, 0);\r\n  this.dragging = null;\r\n  this.showBox = false;\r\n  this.renderWidth = 500;\r\n  this.renderHeight = 500;\r\n  this.maxZoom = 1000;\r\n  this.paused = false;\r\n  this.mouseDown = false;\r\n  this.ee = ee({});\r\n  this.layoutInit = true;\r\n  this.labelSize = 6;\r\n  this.relativeFontSize = 1;\r\n  this.mapShowing = def.MAP;\r\n  this.darkMode = true;\r\n  this.lastNode = null;\r\n  this.fakeNodes = [];\r\n  this.rightClickedNode = null;\r\n  this.doHighlightNeighbors = def.NODE_NEIGHBOR_HIGHLIGHT;\r\n  this.prevHighlights = [];\r\n  this.neighborHost = null;\r\n  this.hull = null;\r\n\r\n  require(\"./utils/utils\")(this);\r\n  require(\"./setup\")(this);\r\n  require(\"./addremove\")(this);\r\n  require(\"./highlighting\")(this);\r\n  require(\"./select\")(this);\r\n  require(\"./mouse\")(this);\r\n  require(\"./modify\")(this);\r\n  require(\"./draw\")(this);\r\n  require(\"./api\")(this);\r\n  require(\"./update\")(this);\r\n\r\n  /**\r\n   *  Starting point, run once to create scene\r\n   */\r\n  this.display = function() {\r\n    this.animate();\r\n  };\r\n\r\n  /**\r\n   *  Creates loop called on every animation frame\r\n   */\r\n  let fps = 30;\r\n  let now;\r\n  let then = Date.now();\r\n  let interval = 1000 / fps;\r\n  let delta;\r\n  this.animate = function() {\r\n    requestAnimationFrame(self.animate);\r\n\r\n    now = Date.now();\r\n    delta = now - then;\r\n    if (delta > interval) {\r\n      then = now;\r\n      self.controls.update();\r\n      self.render();\r\n    }\r\n  };\r\n\r\n  /**\r\n   *  Set initial properties\r\n   */\r\n  this.init = function(aa = true) {\r\n    self.renderer = new THREE.WebGLRenderer({\r\n      alpha: true,\r\n      antialias: aa\r\n    });\r\n    //self.renderer.setPixelRatio(window.devicePixelRatio);\r\n    //self.renderer.setPixelRatio(0.1);\r\n    self.setDisplayParams();\r\n    self.setRendererParams();\r\n\r\n    self.setupCamera();\r\n    self.setupMinimap();\r\n    self.setupGeometry();\r\n    self.setupSelect();\r\n\r\n    self.element.appendChild(self.renderer.domElement);\r\n    self.element.appendChild(self.cssRenderer.domElement);\r\n\r\n    self.canvas = document.querySelector(\"graph-container\");\r\n\r\n    self.setupLayout();\r\n\r\n    self.setupGraph();\r\n\r\n    window.addEventListener(\r\n      \"resize\",\r\n      function(e) {\r\n        e.preventDefault();\r\n        self.onWindowResize();\r\n      },\r\n      false\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Change camera on window resize\r\n   */\r\n  self.onWindowResize = function() {\r\n    self.clientRect = self.element.getBoundingClientRect();\r\n    self.width = self.clientRect.width;\r\n    self.height = self.clientRect.height;\r\n    self.minimap.width = 0.2 * self.height;\r\n    self.minimap.height = 0.2 * self.height;\r\n    self.aspect = self.width / self.height;\r\n    self.ccamera.aspect = self.aspect;\r\n    self.ccamera.updateProjectionMatrix();\r\n\r\n    self.renderer.setSize(self.width, self.height);\r\n    self.cssRenderer.setSize(self.width, self.height);\r\n  };\r\n\r\n  /**\r\n   *  Draws graphics\r\n   */\r\n  var stage = 0;\r\n  this.render = function() {\r\n    self.updateCamera();\r\n    self.updateNodes();\r\n    if (stage == 1) {\r\n      self.updateLabels();\r\n      self.updateEdges();\r\n      stage = 0;\r\n    }\r\n    stage += 1;\r\n    if (self.options.layout == \"d3\") {\r\n      if (self.layoutInit == true) {\r\n        var nodes = [];\r\n        self.graph.forEachNode(function(node) {\r\n          nodes.push(node);\r\n        });\r\n        self.force.nodes(nodes);\r\n        self.force.force(\"link\", d3.forceLink(self.lineIndices));\r\n        self.force.restart();\r\n        self.force.stop();\r\n        if (self.tickToStatic && !self.paused) {\r\n          // We don't tick and pause for now\r\n          for (\r\n            var i = 0,\r\n              n = Math.ceil(\r\n                Math.log(self.force.alphaMin()) /\r\n                  Math.log(1 - self.force.alphaDecay())\r\n              );\r\n            i < n;\r\n            ++i\r\n          ) {\r\n            self.force.tick();\r\n          }\r\n          //self.pauseLayout();\r\n        }\r\n        self.layoutInit = false;\r\n      }\r\n    }\r\n    self.renderer.setViewport(0, 0, 1 * self.width, 1 * self.height);\r\n    self.renderer.setScissor(0, 0, 1 * self.width, 1 * self.height);\r\n    self.renderer.setScissorTest(true);\r\n    self.renderer.render(self.scene, self.ccamera);\r\n    self.cssRenderer.render(self.scene, self.ccamera);\r\n    if (self.mapShowing) {\r\n      self.minimap.width = 0.2 * self.height;\r\n      self.minimap.height = 0.2 * self.height;\r\n      self.renderer.setViewport(0, 0, self.minimap.width, self.minimap.height);\r\n      self.renderer.setScissor(0, 0, self.minimap.width, self.minimap.height);\r\n      self.renderer.setScissorTest(true);\r\n      self.renderer.render(self.scene, self.minimap.camera);\r\n    }\r\n  };\r\n};\r\n\r\nexports.Frame = Frame;\r\n","/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n *\r\n * Ported from: https://github.com/maurizzzio/quickhull3d/ by Mauricio Poppe (https://github.com/maurizzzio)\r\n *\r\n */\r\n\r\n(function() {\r\n  var Visible = 0;\r\n  var Deleted = 1;\r\n\r\n  function QuickHull() {\r\n    this.tolerance = -1;\r\n\r\n    this.faces = []; // the generated faces of the convex hull\r\n    this.newFaces = []; // this array holds the faces that are generated within a single iteration\r\n\r\n    // the vertex lists work as follows:\r\n    //\r\n    // let 'a' and 'b' be 'Face' instances\r\n    // let 'v' be points wrapped as instance of 'Vertex'\r\n    //\r\n    //     [v, v, ..., v, v, v, ...]\r\n    //      ^             ^\r\n    //      |             |\r\n    //  a.outside     b.outside\r\n    //\r\n    this.assigned = new VertexList();\r\n    this.unassigned = new VertexList();\r\n\r\n    this.vertices = []; // vertices of the hull (internal representation of given geometry data)\r\n  }\r\n\r\n  Object.assign(QuickHull.prototype, {\r\n    setFromPoints: function(points) {\r\n      if (Array.isArray(points) !== true) {\r\n        console.error(\"THREE.QuickHull: Points parameter is not an array.\");\r\n      }\r\n\r\n      if (points.length < 4) {\r\n        console.error(\r\n          \"THREE.QuickHull: The algorithm needs at least four points.\"\r\n        );\r\n      }\r\n\r\n      this.makeEmpty();\r\n\r\n      for (var i = 0, l = points.length; i < l; i++) {\r\n        this.vertices.push(new VertexNode(points[i]));\r\n      }\r\n\r\n      this.compute();\r\n\r\n      return this;\r\n    },\r\n\r\n    setFromObject: function(object) {\r\n      var points = [];\r\n\r\n      object.updateMatrixWorld(true);\r\n\r\n      object.traverse(function(node) {\r\n        var i, l, point;\r\n\r\n        var geometry = node.geometry;\r\n\r\n        if (geometry !== undefined) {\r\n          if (geometry.isGeometry) {\r\n            var vertices = geometry.vertices;\r\n\r\n            for (i = 0, l = vertices.length; i < l; i++) {\r\n              point = vertices[i].clone();\r\n              point.applyMatrix4(node.matrixWorld);\r\n\r\n              points.push(point);\r\n            }\r\n          } else if (geometry.isBufferGeometry) {\r\n            var attribute = geometry.attributes.position;\r\n\r\n            if (attribute !== undefined) {\r\n              for (i = 0, l = attribute.count; i < l; i++) {\r\n                point = new THREE.Vector3();\r\n\r\n                point\r\n                  .fromBufferAttribute(attribute, i)\r\n                  .applyMatrix4(node.matrixWorld);\r\n\r\n                points.push(point);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      return this.setFromPoints(points);\r\n    },\r\n\r\n    makeEmpty: function() {\r\n      this.faces = [];\r\n      this.vertices = [];\r\n\r\n      return this;\r\n    },\r\n\r\n    // Adds a vertex to the 'assigned' list of vertices and assigns it to the given face\r\n\r\n    addVertexToFace: function(vertex, face) {\r\n      vertex.face = face;\r\n\r\n      if (face.outside === null) {\r\n        this.assigned.append(vertex);\r\n      } else {\r\n        this.assigned.insertBefore(face.outside, vertex);\r\n      }\r\n\r\n      face.outside = vertex;\r\n\r\n      return this;\r\n    },\r\n\r\n    // Removes a vertex from the 'assigned' list of vertices and from the given face\r\n\r\n    removeVertexFromFace: function(vertex, face) {\r\n      if (vertex === face.outside) {\r\n        // fix face.outside link\r\n\r\n        if (vertex.next !== null && vertex.next.face === face) {\r\n          // face has at least 2 outside vertices, move the 'outside' reference\r\n\r\n          face.outside = vertex.next;\r\n        } else {\r\n          // vertex was the only outside vertex that face had\r\n\r\n          face.outside = null;\r\n        }\r\n      }\r\n\r\n      this.assigned.remove(vertex);\r\n\r\n      return this;\r\n    },\r\n\r\n    // Removes all the visible vertices that a given face is able to see which are stored in the 'assigned' vertext list\r\n\r\n    removeAllVerticesFromFace: function(face) {\r\n      if (face.outside !== null) {\r\n        // reference to the first and last vertex of this face\r\n\r\n        var start = face.outside;\r\n        var end = face.outside;\r\n\r\n        while (end.next !== null && end.next.face === face) {\r\n          end = end.next;\r\n        }\r\n\r\n        this.assigned.removeSubList(start, end);\r\n\r\n        // fix references\r\n\r\n        start.prev = end.next = null;\r\n        face.outside = null;\r\n\r\n        return start;\r\n      }\r\n    },\r\n\r\n    // Removes all the visible vertices that 'face' is able to see\r\n\r\n    deleteFaceVertices: function(face, absorbingFace) {\r\n      var faceVertices = this.removeAllVerticesFromFace(face);\r\n\r\n      if (faceVertices !== undefined) {\r\n        if (absorbingFace === undefined) {\r\n          // mark the vertices to be reassigned to some other face\r\n\r\n          this.unassigned.appendChain(faceVertices);\r\n        } else {\r\n          // if there's an absorbing face try to assign as many vertices as possible to it\r\n\r\n          var vertex = faceVertices;\r\n\r\n          do {\r\n            // we need to buffer the subsequent vertex at this point because the 'vertex.next' reference\r\n            // will be changed by upcoming method calls\r\n\r\n            var nextVertex = vertex.next;\r\n\r\n            var distance = absorbingFace.distanceToPoint(vertex.point);\r\n\r\n            // check if 'vertex' is able to see 'absorbingFace'\r\n\r\n            if (distance > this.tolerance) {\r\n              this.addVertexToFace(vertex, absorbingFace);\r\n            } else {\r\n              this.unassigned.append(vertex);\r\n            }\r\n\r\n            // now assign next vertex\r\n\r\n            vertex = nextVertex;\r\n          } while (vertex !== null);\r\n        }\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    // Reassigns as many vertices as possible from the unassigned list to the new faces\r\n\r\n    resolveUnassignedPoints: function(newFaces) {\r\n      if (this.unassigned.isEmpty() === false) {\r\n        var vertex = this.unassigned.first();\r\n\r\n        do {\r\n          // buffer 'next' reference, see .deleteFaceVertices()\r\n\r\n          var nextVertex = vertex.next;\r\n\r\n          var maxDistance = this.tolerance;\r\n\r\n          var maxFace = null;\r\n\r\n          for (var i = 0; i < newFaces.length; i++) {\r\n            var face = newFaces[i];\r\n\r\n            if (face.mark === Visible) {\r\n              var distance = face.distanceToPoint(vertex.point);\r\n\r\n              if (distance > maxDistance) {\r\n                maxDistance = distance;\r\n                maxFace = face;\r\n              }\r\n\r\n              if (maxDistance > 1000 * this.tolerance) break;\r\n            }\r\n          }\r\n\r\n          // 'maxFace' can be null e.g. if there are identical vertices\r\n\r\n          if (maxFace !== null) {\r\n            this.addVertexToFace(vertex, maxFace);\r\n          }\r\n\r\n          vertex = nextVertex;\r\n        } while (vertex !== null);\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    // Computes the extremes of a simplex which will be the initial hull\r\n\r\n    computeExtremes: function() {\r\n      var min = new THREE.Vector3();\r\n      var max = new THREE.Vector3();\r\n\r\n      var minVertices = [];\r\n      var maxVertices = [];\r\n\r\n      var i, l, j;\r\n\r\n      // initially assume that the first vertex is the min/max\r\n\r\n      for (i = 0; i < 3; i++) {\r\n        minVertices[i] = maxVertices[i] = this.vertices[0];\r\n      }\r\n\r\n      min.copy(this.vertices[0].point);\r\n      max.copy(this.vertices[0].point);\r\n\r\n      // compute the min/max vertex on all six directions\r\n\r\n      for (i = 0, l = this.vertices.length; i < l; i++) {\r\n        var vertex = this.vertices[i];\r\n        var point = vertex.point;\r\n\r\n        // update the min coordinates\r\n\r\n        for (j = 0; j < 3; j++) {\r\n          if (point.getComponent(j) < min.getComponent(j)) {\r\n            min.setComponent(j, point.getComponent(j));\r\n            minVertices[j] = vertex;\r\n          }\r\n        }\r\n\r\n        // update the max coordinates\r\n\r\n        for (j = 0; j < 3; j++) {\r\n          if (point.getComponent(j) > max.getComponent(j)) {\r\n            max.setComponent(j, point.getComponent(j));\r\n            maxVertices[j] = vertex;\r\n          }\r\n        }\r\n      }\r\n\r\n      // use min/max vectors to compute an optimal epsilon\r\n\r\n      this.tolerance =\r\n        3 *\r\n        Number.EPSILON *\r\n        (Math.max(Math.abs(min.x), Math.abs(max.x)) +\r\n          Math.max(Math.abs(min.y), Math.abs(max.y)) +\r\n          Math.max(Math.abs(min.z), Math.abs(max.z)));\r\n\r\n      return { min: minVertices, max: maxVertices };\r\n    },\r\n\r\n    // Computes the initial simplex assigning to its faces all the points\r\n    // that are candidates to form part of the hull\r\n\r\n    computeInitialHull: (function() {\r\n      var line3, plane, closestPoint;\r\n\r\n      return function computeInitialHull() {\r\n        if (line3 === undefined) {\r\n          line3 = new THREE.Line3();\r\n          plane = new THREE.Plane();\r\n          closestPoint = new THREE.Vector3();\r\n        }\r\n\r\n        var vertex,\r\n          vertices = this.vertices;\r\n        var extremes = this.computeExtremes();\r\n        var min = extremes.min;\r\n        var max = extremes.max;\r\n\r\n        var v0, v1, v2, v3;\r\n        var i, l, j;\r\n\r\n        // 1. Find the two vertices 'v0' and 'v1' with the greatest 1d separation\r\n        // (max.x - min.x)\r\n        // (max.y - min.y)\r\n        // (max.z - min.z)\r\n\r\n        var distance,\r\n          maxDistance = 0;\r\n        var index = 0;\r\n\r\n        for (i = 0; i < 3; i++) {\r\n          distance =\r\n            max[i].point.getComponent(i) - min[i].point.getComponent(i);\r\n\r\n          if (distance > maxDistance) {\r\n            maxDistance = distance;\r\n            index = i;\r\n          }\r\n        }\r\n\r\n        v0 = min[index];\r\n        v1 = max[index];\r\n\r\n        // 2. The next vertex 'v2' is the one farthest to the line formed by 'v0' and 'v1'\r\n\r\n        maxDistance = 0;\r\n        line3.set(v0.point, v1.point);\r\n\r\n        for (i = 0, l = this.vertices.length; i < l; i++) {\r\n          vertex = vertices[i];\r\n\r\n          if (vertex !== v0 && vertex !== v1) {\r\n            line3.closestPointToPoint(vertex.point, true, closestPoint);\r\n\r\n            distance = closestPoint.distanceToSquared(vertex.point);\r\n\r\n            if (distance > maxDistance) {\r\n              maxDistance = distance;\r\n              v2 = vertex;\r\n            }\r\n          }\r\n        }\r\n\r\n        // 3. The next vertex 'v3' is the one farthest to the plane 'v0', 'v1', 'v2'\r\n\r\n        maxDistance = 0;\r\n        plane.setFromCoplanarPoints(v0.point, v1.point, v2.point);\r\n\r\n        for (i = 0, l = this.vertices.length; i < l; i++) {\r\n          vertex = vertices[i];\r\n\r\n          if (vertex !== v0 && vertex !== v1 && vertex !== v2) {\r\n            distance = Math.abs(plane.distanceToPoint(vertex.point));\r\n\r\n            if (distance > maxDistance) {\r\n              maxDistance = distance;\r\n              v3 = vertex;\r\n            }\r\n          }\r\n        }\r\n\r\n        var faces = [];\r\n\r\n        if (plane.distanceToPoint(v3.point) < 0) {\r\n          // the face is not able to see the point so 'plane.normal' is pointing outside the tetrahedron\r\n\r\n          faces.push(\r\n            Face.create(v0, v1, v2),\r\n            Face.create(v3, v1, v0),\r\n            Face.create(v3, v2, v1),\r\n            Face.create(v3, v0, v2)\r\n          );\r\n\r\n          // set the twin edge\r\n\r\n          for (i = 0; i < 3; i++) {\r\n            j = (i + 1) % 3;\r\n\r\n            // join face[ i ] i > 0, with the first face\r\n\r\n            faces[i + 1].getEdge(2).setTwin(faces[0].getEdge(j));\r\n\r\n            // join face[ i ] with face[ i + 1 ], 1 <= i <= 3\r\n\r\n            faces[i + 1].getEdge(1).setTwin(faces[j + 1].getEdge(0));\r\n          }\r\n        } else {\r\n          // the face is able to see the point so 'plane.normal' is pointing inside the tetrahedron\r\n\r\n          faces.push(\r\n            Face.create(v0, v2, v1),\r\n            Face.create(v3, v0, v1),\r\n            Face.create(v3, v1, v2),\r\n            Face.create(v3, v2, v0)\r\n          );\r\n\r\n          // set the twin edge\r\n\r\n          for (i = 0; i < 3; i++) {\r\n            j = (i + 1) % 3;\r\n\r\n            // join face[ i ] i > 0, with the first face\r\n\r\n            faces[i + 1].getEdge(2).setTwin(faces[0].getEdge((3 - i) % 3));\r\n\r\n            // join face[ i ] with face[ i + 1 ]\r\n\r\n            faces[i + 1].getEdge(0).setTwin(faces[j + 1].getEdge(1));\r\n          }\r\n        }\r\n\r\n        // the initial hull is the tetrahedron\r\n\r\n        for (i = 0; i < 4; i++) {\r\n          this.faces.push(faces[i]);\r\n        }\r\n\r\n        // initial assignment of vertices to the faces of the tetrahedron\r\n\r\n        for (i = 0, l = vertices.length; i < l; i++) {\r\n          vertex = vertices[i];\r\n\r\n          if (\r\n            vertex !== v0 &&\r\n            vertex !== v1 &&\r\n            vertex !== v2 &&\r\n            vertex !== v3\r\n          ) {\r\n            maxDistance = this.tolerance;\r\n            var maxFace = null;\r\n\r\n            for (j = 0; j < 4; j++) {\r\n              distance = this.faces[j].distanceToPoint(vertex.point);\r\n\r\n              if (distance > maxDistance) {\r\n                maxDistance = distance;\r\n                maxFace = this.faces[j];\r\n              }\r\n            }\r\n\r\n            if (maxFace !== null) {\r\n              this.addVertexToFace(vertex, maxFace);\r\n            }\r\n          }\r\n        }\r\n\r\n        return this;\r\n      };\r\n    })(),\r\n\r\n    // Removes inactive faces\r\n\r\n    reindexFaces: function() {\r\n      var activeFaces = [];\r\n\r\n      for (var i = 0; i < this.faces.length; i++) {\r\n        var face = this.faces[i];\r\n\r\n        if (face.mark === Visible) {\r\n          activeFaces.push(face);\r\n        }\r\n      }\r\n\r\n      this.faces = activeFaces;\r\n\r\n      return this;\r\n    },\r\n\r\n    // Finds the next vertex to create faces with the current hull\r\n\r\n    nextVertexToAdd: function() {\r\n      // if the 'assigned' list of vertices is empty, no vertices are left. return with 'undefined'\r\n\r\n      if (this.assigned.isEmpty() === false) {\r\n        var eyeVertex,\r\n          maxDistance = 0;\r\n\r\n        // grap the first available face and start with the first visible vertex of that face\r\n\r\n        var eyeFace = this.assigned.first().face;\r\n        var vertex = eyeFace.outside;\r\n\r\n        // now calculate the farthest vertex that face can see\r\n\r\n        do {\r\n          var distance = eyeFace.distanceToPoint(vertex.point);\r\n\r\n          if (distance > maxDistance) {\r\n            maxDistance = distance;\r\n            eyeVertex = vertex;\r\n          }\r\n\r\n          vertex = vertex.next;\r\n        } while (vertex !== null && vertex.face === eyeFace);\r\n\r\n        return eyeVertex;\r\n      }\r\n    },\r\n\r\n    // Computes a chain of half edges in CCW order called the 'horizon'.\r\n    // For an edge to be part of the horizon it must join a face that can see\r\n    // 'eyePoint' and a face that cannot see 'eyePoint'.\r\n\r\n    computeHorizon: function(eyePoint, crossEdge, face, horizon) {\r\n      // moves face's vertices to the 'unassigned' vertex list\r\n\r\n      this.deleteFaceVertices(face);\r\n\r\n      face.mark = Deleted;\r\n\r\n      var edge;\r\n\r\n      if (crossEdge === null) {\r\n        edge = crossEdge = face.getEdge(0);\r\n      } else {\r\n        // start from the next edge since 'crossEdge' was already analyzed\r\n        // (actually 'crossEdge.twin' was the edge who called this method recursively)\r\n\r\n        edge = crossEdge.next;\r\n      }\r\n\r\n      do {\r\n        var twinEdge = edge.twin;\r\n        var oppositeFace = twinEdge.face;\r\n\r\n        if (oppositeFace.mark === Visible) {\r\n          if (oppositeFace.distanceToPoint(eyePoint) > this.tolerance) {\r\n            // the opposite face can see the vertex, so proceed with next edge\r\n\r\n            this.computeHorizon(eyePoint, twinEdge, oppositeFace, horizon);\r\n          } else {\r\n            // the opposite face can't see the vertex, so this edge is part of the horizon\r\n\r\n            horizon.push(edge);\r\n          }\r\n        }\r\n\r\n        edge = edge.next;\r\n      } while (edge !== crossEdge);\r\n\r\n      return this;\r\n    },\r\n\r\n    // Creates a face with the vertices 'eyeVertex.point', 'horizonEdge.tail' and 'horizonEdge.head' in CCW order\r\n\r\n    addAdjoiningFace: function(eyeVertex, horizonEdge) {\r\n      // all the half edges are created in ccw order thus the face is always pointing outside the hull\r\n\r\n      var face = Face.create(eyeVertex, horizonEdge.tail(), horizonEdge.head());\r\n\r\n      this.faces.push(face);\r\n\r\n      // join face.getEdge( - 1 ) with the horizon's opposite edge face.getEdge( - 1 ) = face.getEdge( 2 )\r\n\r\n      face.getEdge(-1).setTwin(horizonEdge.twin);\r\n\r\n      return face.getEdge(0); // the half edge whose vertex is the eyeVertex\r\n    },\r\n\r\n    //  Adds 'horizon.length' faces to the hull, each face will be linked with the\r\n    //  horizon opposite face and the face on the left/right\r\n\r\n    addNewFaces: function(eyeVertex, horizon) {\r\n      this.newFaces = [];\r\n\r\n      var firstSideEdge = null;\r\n      var previousSideEdge = null;\r\n\r\n      for (var i = 0; i < horizon.length; i++) {\r\n        var horizonEdge = horizon[i];\r\n\r\n        // returns the right side edge\r\n\r\n        var sideEdge = this.addAdjoiningFace(eyeVertex, horizonEdge);\r\n\r\n        if (firstSideEdge === null) {\r\n          firstSideEdge = sideEdge;\r\n        } else {\r\n          // joins face.getEdge( 1 ) with previousFace.getEdge( 0 )\r\n\r\n          sideEdge.next.setTwin(previousSideEdge);\r\n        }\r\n\r\n        this.newFaces.push(sideEdge.face);\r\n        previousSideEdge = sideEdge;\r\n      }\r\n\r\n      // perform final join of new faces\r\n\r\n      firstSideEdge.next.setTwin(previousSideEdge);\r\n\r\n      return this;\r\n    },\r\n\r\n    // Adds a vertex to the hull\r\n\r\n    addVertexToHull: function(eyeVertex) {\r\n      var horizon = [];\r\n      var i, face;\r\n\r\n      this.unassigned.clear();\r\n\r\n      // remove 'eyeVertex' from 'eyeVertex.face' so that it can't be added to the 'unassigned' vertex list\r\n\r\n      this.removeVertexFromFace(eyeVertex, eyeVertex.face);\r\n\r\n      this.computeHorizon(eyeVertex.point, null, eyeVertex.face, horizon);\r\n\r\n      this.addNewFaces(eyeVertex, horizon);\r\n\r\n      // reassign 'unassigned' vertices to the new faces\r\n\r\n      this.resolveUnassignedPoints(this.newFaces);\r\n\r\n      return this;\r\n    },\r\n\r\n    cleanup: function() {\r\n      this.assigned.clear();\r\n      this.unassigned.clear();\r\n      this.newFaces = [];\r\n\r\n      return this;\r\n    },\r\n\r\n    compute: function() {\r\n      var vertex;\r\n\r\n      this.computeInitialHull();\r\n\r\n      // add all available vertices gradually to the hull\r\n\r\n      while ((vertex = this.nextVertexToAdd()) !== undefined) {\r\n        this.addVertexToHull(vertex);\r\n      }\r\n\r\n      this.reindexFaces();\r\n\r\n      this.cleanup();\r\n\r\n      return this;\r\n    }\r\n  });\r\n\r\n  //\r\n\r\n  function Face() {\r\n    this.normal = new THREE.Vector3();\r\n    this.midpoint = new THREE.Vector3();\r\n    this.area = 0;\r\n\r\n    this.constant = 0; // signed distance from face to the origin\r\n    this.outside = null; // reference to a vertex in a vertex list this face can see\r\n    this.mark = Visible;\r\n    this.edge = null;\r\n  }\r\n\r\n  Object.assign(Face, {\r\n    create: function(a, b, c) {\r\n      var face = new Face();\r\n\r\n      var e0 = new HalfEdge(a, face);\r\n      var e1 = new HalfEdge(b, face);\r\n      var e2 = new HalfEdge(c, face);\r\n\r\n      // join edges\r\n\r\n      e0.next = e2.prev = e1;\r\n      e1.next = e0.prev = e2;\r\n      e2.next = e1.prev = e0;\r\n\r\n      // main half edge reference\r\n\r\n      face.edge = e0;\r\n\r\n      return face.compute();\r\n    }\r\n  });\r\n\r\n  Object.assign(Face.prototype, {\r\n    getEdge: function(i) {\r\n      var edge = this.edge;\r\n\r\n      while (i > 0) {\r\n        edge = edge.next;\r\n        i--;\r\n      }\r\n\r\n      while (i < 0) {\r\n        edge = edge.prev;\r\n        i++;\r\n      }\r\n\r\n      return edge;\r\n    },\r\n\r\n    compute: (function() {\r\n      var triangle;\r\n\r\n      return function compute() {\r\n        if (triangle === undefined) triangle = new THREE.Triangle();\r\n\r\n        var a = this.edge.tail();\r\n        var b = this.edge.head();\r\n        var c = this.edge.next.head();\r\n\r\n        triangle.set(a.point, b.point, c.point);\r\n\r\n        triangle.normal(this.normal);\r\n        triangle.midpoint(this.midpoint);\r\n        this.area = triangle.area();\r\n\r\n        this.constant = this.normal.dot(this.midpoint);\r\n\r\n        return this;\r\n      };\r\n    })(),\r\n\r\n    distanceToPoint: function(point) {\r\n      return this.normal.dot(point) - this.constant;\r\n    }\r\n  });\r\n\r\n  // Entity for a Doubly-Connected Edge List (DCEL).\r\n\r\n  function HalfEdge(vertex, face) {\r\n    this.vertex = vertex;\r\n    this.prev = null;\r\n    this.next = null;\r\n    this.twin = null;\r\n    this.face = face;\r\n  }\r\n\r\n  Object.assign(HalfEdge.prototype, {\r\n    head: function() {\r\n      return this.vertex;\r\n    },\r\n\r\n    tail: function() {\r\n      return this.prev ? this.prev.vertex : null;\r\n    },\r\n\r\n    length: function() {\r\n      var head = this.head();\r\n      var tail = this.tail();\r\n\r\n      if (tail !== null) {\r\n        return tail.point.distanceTo(head.point);\r\n      }\r\n\r\n      return -1;\r\n    },\r\n\r\n    lengthSquared: function() {\r\n      var head = this.head();\r\n      var tail = this.tail();\r\n\r\n      if (tail !== null) {\r\n        return tail.point.distanceToSquared(head.point);\r\n      }\r\n\r\n      return -1;\r\n    },\r\n\r\n    setTwin: function(edge) {\r\n      this.twin = edge;\r\n      edge.twin = this;\r\n\r\n      return this;\r\n    }\r\n  });\r\n\r\n  // A vertex as a double linked list node.\r\n\r\n  function VertexNode(point) {\r\n    this.point = point;\r\n    this.prev = null;\r\n    this.next = null;\r\n    this.face = null; // the face that is able to see this vertex\r\n  }\r\n\r\n  // A double linked list that contains vertex nodes.\r\n\r\n  function VertexList() {\r\n    this.head = null;\r\n    this.tail = null;\r\n  }\r\n\r\n  Object.assign(VertexList.prototype, {\r\n    first: function() {\r\n      return this.head;\r\n    },\r\n\r\n    last: function() {\r\n      return this.tail;\r\n    },\r\n\r\n    clear: function() {\r\n      this.head = this.tail = null;\r\n\r\n      return this;\r\n    },\r\n\r\n    // Inserts a vertex before the target vertex\r\n\r\n    insertBefore: function(target, vertex) {\r\n      vertex.prev = target.prev;\r\n      vertex.next = target;\r\n\r\n      if (vertex.prev === null) {\r\n        this.head = vertex;\r\n      } else {\r\n        vertex.prev.next = vertex;\r\n      }\r\n\r\n      target.prev = vertex;\r\n\r\n      return this;\r\n    },\r\n\r\n    // Inserts a vertex after the target vertex\r\n\r\n    insertAfter: function(target, vertex) {\r\n      vertex.prev = target;\r\n      vertex.next = target.next;\r\n\r\n      if (vertex.next === null) {\r\n        this.tail = vertex;\r\n      } else {\r\n        vertex.next.prev = vertex;\r\n      }\r\n\r\n      target.next = vertex;\r\n\r\n      return this;\r\n    },\r\n\r\n    // Appends a vertex to the end of the linked list\r\n\r\n    append: function(vertex) {\r\n      if (this.head === null) {\r\n        this.head = vertex;\r\n      } else {\r\n        this.tail.next = vertex;\r\n      }\r\n\r\n      vertex.prev = this.tail;\r\n      vertex.next = null; // the tail has no subsequent vertex\r\n\r\n      this.tail = vertex;\r\n\r\n      return this;\r\n    },\r\n\r\n    // Appends a chain of vertices where 'vertex' is the head.\r\n\r\n    appendChain: function(vertex) {\r\n      if (this.head === null) {\r\n        this.head = vertex;\r\n      } else {\r\n        this.tail.next = vertex;\r\n      }\r\n\r\n      vertex.prev = this.tail;\r\n\r\n      // ensure that the 'tail' reference points to the last vertex of the chain\r\n\r\n      while (vertex.next !== null) {\r\n        vertex = vertex.next;\r\n      }\r\n\r\n      this.tail = vertex;\r\n\r\n      return this;\r\n    },\r\n\r\n    // Removes a vertex from the linked list\r\n\r\n    remove: function(vertex) {\r\n      if (vertex.prev === null) {\r\n        this.head = vertex.next;\r\n      } else {\r\n        vertex.prev.next = vertex.next;\r\n      }\r\n\r\n      if (vertex.next === null) {\r\n        this.tail = vertex.prev;\r\n      } else {\r\n        vertex.next.prev = vertex.prev;\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    // Removes a list of vertices whose 'head' is 'a' and whose 'tail' is b\r\n\r\n    removeSubList: function(a, b) {\r\n      if (a.prev === null) {\r\n        this.head = b.next;\r\n      } else {\r\n        a.prev.next = b.next;\r\n      }\r\n\r\n      if (b.next === null) {\r\n        this.tail = a.prev;\r\n      } else {\r\n        b.next.prev = a.prev;\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    isEmpty: function() {\r\n      return this.head === null;\r\n    }\r\n  });\r\n\r\n  // export\r\n\r\n  THREE.QuickHull = QuickHull;\r\n})();\r\n","/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n */\r\n\r\n(function() {\r\n  // ConvexGeometry\r\n\r\n  function ConvexGeometry(points) {\r\n    THREE.Geometry.call(this);\r\n\r\n    this.type = \"ConvexGeometry\";\r\n\r\n    this.fromBufferGeometry(new ConvexBufferGeometry(points));\r\n    this.mergeVertices();\r\n  }\r\n\r\n  ConvexGeometry.prototype = Object.create(THREE.Geometry.prototype);\r\n  ConvexGeometry.prototype.constructor = ConvexGeometry;\r\n\r\n  // ConvexBufferGeometry\r\n\r\n  function ConvexBufferGeometry(points) {\r\n    THREE.BufferGeometry.call(this);\r\n\r\n    this.type = \"ConvexBufferGeometry\";\r\n\r\n    // buffers\r\n\r\n    var vertices = [];\r\n    var normals = [];\r\n\r\n    // execute QuickHull\r\n\r\n    if (THREE.QuickHull === undefined) {\r\n      console.error(\r\n        \"THREE.ConvexBufferGeometry: ConvexBufferGeometry relies on THREE.QuickHull\"\r\n      );\r\n    }\r\n\r\n    var quickHull = new THREE.QuickHull().setFromPoints(points);\r\n\r\n    // generate vertices and normals\r\n\r\n    var faces = quickHull.faces;\r\n\r\n    for (var i = 0; i < faces.length; i++) {\r\n      var face = faces[i];\r\n      var edge = face.edge;\r\n\r\n      // we move along a doubly-connected edge list to access all face points (see HalfEdge docs)\r\n\r\n      do {\r\n        var point = edge.head().point;\r\n\r\n        vertices.push(point.x, point.y, point.z);\r\n        normals.push(face.normal.x, face.normal.y, face.normal.z);\r\n\r\n        edge = edge.next;\r\n      } while (edge !== face.edge);\r\n    }\r\n\r\n    // build geometry\r\n\r\n    this.addAttribute(\r\n      \"position\",\r\n      new THREE.Float32BufferAttribute(vertices, 3)\r\n    );\r\n    this.addAttribute(\"normal\", new THREE.Float32BufferAttribute(normals, 3));\r\n  }\r\n\r\n  ConvexBufferGeometry.prototype = Object.create(\r\n    THREE.BufferGeometry.prototype\r\n  );\r\n  ConvexBufferGeometry.prototype.constructor = ConvexBufferGeometry;\r\n\r\n  // export\r\n\r\n  THREE.ConvexGeometry = ConvexGeometry;\r\n  THREE.ConvexBufferGeometry = ConvexBufferGeometry;\r\n})();\r\n","/**\r\n * Based on http://www.emagix.net/academic/mscs-project/item/camera-sync-with-css3-and-webgl-threejs\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nvar THREE = require(\"three\");\r\n\r\nTHREE.CSS3DObject = function(element) {\r\n  THREE.Object3D.call(this);\r\n\r\n  this.element = element;\r\n  this.element.style.position = \"absolute\";\r\n\r\n  this.addEventListener(\"removed\", function() {\r\n    if (this.element.parentNode !== null) {\r\n      this.element.parentNode.removeChild(this.element);\r\n    }\r\n  });\r\n};\r\n\r\nTHREE.CSS3DObject.prototype = Object.create(THREE.Object3D.prototype);\r\nTHREE.CSS3DObject.prototype.constructor = THREE.CSS3DObject;\r\n\r\nTHREE.CSS3DSprite = function(element) {\r\n  THREE.CSS3DObject.call(this, element);\r\n};\r\n\r\nTHREE.CSS3DSprite.prototype = Object.create(THREE.CSS3DObject.prototype);\r\nTHREE.CSS3DSprite.prototype.constructor = THREE.CSS3DSprite;\r\n\r\n//\r\n\r\nTHREE.CSS3DRenderer = function() {\r\n  console.log(\"THREE.CSS3DRenderer\", THREE.REVISION);\r\n\r\n  var _width, _height;\r\n\r\n  var matrix = new THREE.Matrix4();\r\n\r\n  var cache = {\r\n    camera: { fov: 0, style: \"\" },\r\n    objects: {}\r\n  };\r\n\r\n  var domElement = document.createElement(\"div\");\r\n  domElement.style.overflow = \"hidden\";\r\n\r\n  domElement.style.WebkitTransformStyle = \"preserve-3d\";\r\n  domElement.style.MozTransformStyle = \"preserve-3d\";\r\n  domElement.style.oTransformStyle = \"preserve-3d\";\r\n  domElement.style.transformStyle = \"preserve-3d\";\r\n\r\n  this.domElement = domElement;\r\n\r\n  var cameraElement = document.createElement(\"div\");\r\n\r\n  cameraElement.style.position = \"absolute\";\r\n  cameraElement.style.left = \"50%\";\r\n  cameraElement.style.top = \"50%\";\r\n\r\n  cameraElement.style.WebkitTransformStyle = \"preserve-3d\";\r\n  cameraElement.style.MozTransformStyle = \"preserve-3d\";\r\n  cameraElement.style.oTransformStyle = \"preserve-3d\";\r\n  cameraElement.style.transformStyle = \"preserve-3d\";\r\n\r\n  domElement.appendChild(cameraElement);\r\n\r\n  this.setClearColor = function() {};\r\n\r\n  this.getSize = function() {\r\n    return {\r\n      width: _width,\r\n      height: _height\r\n    };\r\n  };\r\n\r\n  this.setSize = function(width, height) {\r\n    _width = width;\r\n    _height = height;\r\n\r\n    domElement.style.width = width + \"px\";\r\n    domElement.style.height = height + \"px\";\r\n  };\r\n\r\n  function epsilon(value) {\r\n    return Math.abs(value) < Number.EPSILON ? 0 : value;\r\n  }\r\n\r\n  function getCameraCSSMatrix(matrix) {\r\n    var elements = matrix.elements;\r\n\r\n    return (\r\n      \"matrix3d(\" +\r\n      epsilon(elements[0]) +\r\n      \",\" +\r\n      epsilon(-elements[1]) +\r\n      \",\" +\r\n      epsilon(elements[2]) +\r\n      \",\" +\r\n      epsilon(elements[3]) +\r\n      \",\" +\r\n      epsilon(elements[4]) +\r\n      \",\" +\r\n      epsilon(-elements[5]) +\r\n      \",\" +\r\n      epsilon(elements[6]) +\r\n      \",\" +\r\n      epsilon(elements[7]) +\r\n      \",\" +\r\n      epsilon(elements[8]) +\r\n      \",\" +\r\n      epsilon(-elements[9]) +\r\n      \",\" +\r\n      epsilon(elements[10]) +\r\n      \",\" +\r\n      epsilon(elements[11]) +\r\n      \",\" +\r\n      epsilon(elements[12]) +\r\n      \",\" +\r\n      epsilon(-elements[13]) +\r\n      \",\" +\r\n      epsilon(elements[14]) +\r\n      \",\" +\r\n      epsilon(elements[15]) +\r\n      \")\"\r\n    );\r\n  }\r\n\r\n  function getObjectCSSMatrix(matrix) {\r\n    var elements = matrix.elements;\r\n\r\n    return (\r\n      \"translate3d(-50%,-50%,0) matrix3d(\" +\r\n      epsilon(elements[0]) +\r\n      \",\" +\r\n      epsilon(elements[1]) +\r\n      \",\" +\r\n      epsilon(elements[2]) +\r\n      \",\" +\r\n      epsilon(elements[3]) +\r\n      \",\" +\r\n      epsilon(-elements[4]) +\r\n      \",\" +\r\n      epsilon(-elements[5]) +\r\n      \",\" +\r\n      epsilon(-elements[6]) +\r\n      \",\" +\r\n      epsilon(-elements[7]) +\r\n      \",\" +\r\n      epsilon(elements[8]) +\r\n      \",\" +\r\n      epsilon(elements[9]) +\r\n      \",\" +\r\n      epsilon(elements[10]) +\r\n      \",\" +\r\n      epsilon(elements[11]) +\r\n      \",\" +\r\n      epsilon(elements[12]) +\r\n      \",\" +\r\n      epsilon(elements[13]) +\r\n      \",\" +\r\n      epsilon(elements[14]) +\r\n      \",\" +\r\n      epsilon(elements[15]) +\r\n      \")\"\r\n    );\r\n  }\r\n\r\n  function renderObject(object, camera) {\r\n    if (object instanceof THREE.CSS3DObject) {\r\n      var style;\r\n\r\n      if (object instanceof THREE.CSS3DSprite) {\r\n        // http://swiftcoder.wordpress.com/2008/11/25/constructing-a-billboard-matrix/\r\n\r\n        matrix.copy(camera.matrixWorldInverse);\r\n        matrix.transpose();\r\n        matrix.copyPosition(object.matrixWorld);\r\n        matrix.scale(object.scale);\r\n\r\n        matrix.elements[3] = 0;\r\n        matrix.elements[7] = 0;\r\n        matrix.elements[11] = 0;\r\n        matrix.elements[15] = 1;\r\n\r\n        style = getObjectCSSMatrix(matrix);\r\n      } else {\r\n        style = getObjectCSSMatrix(object.matrixWorld);\r\n      }\r\n\r\n      var element = object.element;\r\n      var cachedStyle = cache.objects[object.id];\r\n\r\n      if (cachedStyle === undefined || cachedStyle !== style) {\r\n        element.style.WebkitTransform = style;\r\n        element.style.MozTransform = style;\r\n        element.style.oTransform = style;\r\n        element.style.transform = style;\r\n\r\n        cache.objects[object.id] = style;\r\n      }\r\n\r\n      if (element.parentNode !== cameraElement) {\r\n        cameraElement.appendChild(element);\r\n      }\r\n    }\r\n\r\n    for (var i = 0, l = object.children.length; i < l; i++) {\r\n      renderObject(object.children[i], camera);\r\n    }\r\n  }\r\n\r\n  this.render = function(scene, camera) {\r\n    var fov =\r\n      (0.5 / Math.tan(THREE.Math.degToRad(camera.getEffectiveFOV() * 0.5))) *\r\n      _height;\r\n\r\n    if (cache.camera.fov !== fov) {\r\n      domElement.style.WebkitPerspective = fov + \"px\";\r\n      domElement.style.MozPerspective = fov + \"px\";\r\n      domElement.style.oPerspective = fov + \"px\";\r\n      domElement.style.perspective = fov + \"px\";\r\n\r\n      cache.camera.fov = fov;\r\n    }\r\n\r\n    scene.updateMatrixWorld();\r\n\r\n    if (camera.parent === null) camera.updateMatrixWorld();\r\n\r\n    camera.matrixWorldInverse.getInverse(camera.matrixWorld);\r\n\r\n    var style =\r\n      \"translateZ(\" +\r\n      fov +\r\n      \"px)\" +\r\n      getCameraCSSMatrix(camera.matrixWorldInverse);\r\n\r\n    if (cache.camera.style !== style) {\r\n      cameraElement.style.WebkitTransform = style;\r\n      cameraElement.style.MozTransform = style;\r\n      cameraElement.style.oTransform = style;\r\n      cameraElement.style.transform = style;\r\n\r\n      cache.camera.style = style;\r\n    }\r\n\r\n    renderObject(scene, camera);\r\n  };\r\n};\r\n","module.exports = function(THREE) {\r\n  /**\r\n   * @author qiao / https://github.com/qiao\r\n   * @author mrdoob / http://mrdoob.com\r\n   * @author alteredq / http://alteredqualia.com/\r\n   * @author WestLangley / http://github.com/WestLangley\r\n   * @author erich666 / http://erichaines.com\r\n   */\r\n\r\n  // This set of controls performs orbiting, dollying (zooming), and panning.\r\n  // Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\r\n  //\r\n  //    Orbit - left mouse / touch: one finger move\r\n  //    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\r\n  //    Pan - right mouse, or arrow keys / touch: three finter swipe\r\n\r\n  function OrbitControls(object, domElement) {\r\n    this.object = object;\r\n\r\n    this.domElement = domElement !== undefined ? domElement : document;\r\n\r\n    // Set to false to disable this control\r\n    this.enabled = true;\r\n\r\n    // \"target\" sets the location of focus, where the object orbits around\r\n    this.target = new THREE.Vector3();\r\n\r\n    // How far you can dolly in and out ( PerspectiveCamera only )\r\n    this.minDistance = 0;\r\n    this.maxDistance = Infinity;\r\n\r\n    // How far you can zoom in and out ( OrthographicCamera only )\r\n    this.minZoom = 0;\r\n    this.maxZoom = Infinity;\r\n\r\n    // How far you can orbit vertically, upper and lower limits.\r\n    // Range is 0 to Math.PI radians.\r\n    this.minPolarAngle = 0; // radians\r\n    this.maxPolarAngle = Math.PI; // radians\r\n\r\n    // How far you can orbit horizontally, upper and lower limits.\r\n    // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\r\n    this.minAzimuthAngle = -Infinity; // radians\r\n    this.maxAzimuthAngle = Infinity; // radians\r\n\r\n    // Set to true to enable damping (inertia)\r\n    // If damping is enabled, you must call controls.update() in your animation loop\r\n    this.enableDamping = false;\r\n    this.dampingFactor = 0.25;\r\n\r\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\r\n    // Set to false to disable zooming\r\n    this.enableZoom = true;\r\n    this.zoomSpeed = 1.0;\r\n\r\n    // Set to false to disable rotating\r\n    this.enableRotate = true;\r\n    this.rotateSpeed = 1.0;\r\n\r\n    // Set to false to disable panning\r\n    this.enablePan = true;\r\n    this.keyPanSpeed = 7.0; // pixels moved per arrow key push\r\n\r\n    // Set to true to automatically rotate around the target\r\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\r\n    this.autoRotate = false;\r\n    this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\r\n\r\n    // Set to false to disable use of the keys\r\n    this.enableKeys = true;\r\n\r\n    // The four arrow keys\r\n    this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40, SPACE: 32 };\r\n\r\n    // Mouse buttons\r\n    this.mouseButtons = {\r\n      ORBIT: THREE.MOUSE.LEFT,\r\n      ZOOM: THREE.MOUSE.MIDDLE,\r\n      PAN: THREE.MOUSE.RIGHT\r\n    };\r\n\r\n    // for reset\r\n    this.target0 = this.target.clone();\r\n    this.position0 = this.object.position.clone();\r\n    this.zoom0 = this.object.zoom;\r\n\r\n    // for space panning\r\n    this.spacePan = false;\r\n    this.bothPan = false;\r\n\r\n    //\r\n    // public methods\r\n    //\r\n\r\n    this.getPolarAngle = function() {\r\n      return spherical.phi;\r\n    };\r\n\r\n    this.getAzimuthalAngle = function() {\r\n      return spherical.theta;\r\n    };\r\n\r\n    this.reset = function() {\r\n      scope.target.copy(scope.target0);\r\n      scope.object.position.copy(scope.position0);\r\n      scope.object.zoom = scope.zoom0;\r\n\r\n      scope.object.updateProjectionMatrix();\r\n      scope.dispatchEvent(changeEvent);\r\n\r\n      scope.update();\r\n\r\n      state = STATE.NONE;\r\n    };\r\n\r\n    // this method is exposed, but perhaps it would be better if we can make it private...\r\n    this.update = (function() {\r\n      var offset = new THREE.Vector3();\r\n\r\n      // so camera.up is the orbit axis\r\n      var quat = new THREE.Quaternion().setFromUnitVectors(\r\n        object.up,\r\n        new THREE.Vector3(0, 1, 0)\r\n      );\r\n      var quatInverse = quat.clone().inverse();\r\n\r\n      var lastPosition = new THREE.Vector3();\r\n      var lastQuaternion = new THREE.Quaternion();\r\n\r\n      return function update() {\r\n        var position = scope.object.position;\r\n\r\n        offset.copy(position).sub(scope.target);\r\n\r\n        // rotate offset to \"y-axis-is-up\" space\r\n        offset.applyQuaternion(quat);\r\n\r\n        // angle from z-axis around y-axis\r\n        spherical.setFromVector3(offset);\r\n\r\n        if (scope.autoRotate && state === STATE.NONE) {\r\n          rotateLeft(getAutoRotationAngle());\r\n        }\r\n\r\n        spherical.theta += sphericalDelta.theta;\r\n        spherical.phi += sphericalDelta.phi;\r\n\r\n        // restrict theta to be between desired limits\r\n        spherical.theta = Math.max(\r\n          scope.minAzimuthAngle,\r\n          Math.min(scope.maxAzimuthAngle, spherical.theta)\r\n        );\r\n\r\n        // restrict phi to be between desired limits\r\n        spherical.phi = Math.max(\r\n          scope.minPolarAngle,\r\n          Math.min(scope.maxPolarAngle, spherical.phi)\r\n        );\r\n\r\n        spherical.makeSafe();\r\n\r\n        spherical.radius *= scale;\r\n\r\n        // restrict radius to be between desired limits\r\n        spherical.radius = Math.max(\r\n          scope.minDistance,\r\n          Math.min(scope.maxDistance, spherical.radius)\r\n        );\r\n\r\n        // move target to panned location\r\n        scope.target.add(panOffset);\r\n\r\n        offset.setFromSpherical(spherical);\r\n\r\n        // rotate offset back to \"camera-up-vector-is-up\" space\r\n        offset.applyQuaternion(quatInverse);\r\n\r\n        position.copy(scope.target).add(offset);\r\n\r\n        scope.object.lookAt(scope.target);\r\n\r\n        if (scope.enableDamping === true) {\r\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\r\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\r\n        } else {\r\n          sphericalDelta.set(0, 0, 0);\r\n        }\r\n\r\n        scale = 1;\r\n        panOffset.set(0, 0, 0);\r\n\r\n        // update condition is:\r\n        // min(camera displacement, camera rotation in radians)^2 > EPS\r\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\r\n\r\n        if (\r\n          zoomChanged ||\r\n          lastPosition.distanceToSquared(scope.object.position) > EPS ||\r\n          8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS\r\n        ) {\r\n          scope.dispatchEvent(changeEvent);\r\n\r\n          lastPosition.copy(scope.object.position);\r\n          lastQuaternion.copy(scope.object.quaternion);\r\n          zoomChanged = false;\r\n\r\n          return true;\r\n        }\r\n\r\n        return false;\r\n      };\r\n    })();\r\n\r\n    this.dispose = function() {\r\n      scope.domElement.removeEventListener(\"contextmenu\", onContextMenu, false);\r\n      scope.domElement.removeEventListener(\"mousedown\", onMouseDown, false);\r\n      scope.domElement.removeEventListener(\"wheel\", onMouseWheel, false);\r\n\r\n      scope.domElement.removeEventListener(\"touchstart\", onTouchStart, false);\r\n      scope.domElement.removeEventListener(\"touchend\", onTouchEnd, false);\r\n      scope.domElement.removeEventListener(\"touchmove\", onTouchMove, false);\r\n\r\n      document.removeEventListener(\"mousemove\", onMouseMove, false);\r\n      document.removeEventListener(\"mouseup\", onMouseUp, false);\r\n\r\n      window.removeEventListener(\"keydown\", onKeyDown, false);\r\n\r\n      //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\r\n    };\r\n\r\n    //\r\n    // internals\r\n    //\r\n\r\n    var scope = this;\r\n\r\n    var changeEvent = { type: \"change\" };\r\n    var startEvent = { type: \"start\" };\r\n    var endEvent = { type: \"end\" };\r\n\r\n    var STATE = {\r\n      NONE: -1,\r\n      ROTATE: 0,\r\n      DOLLY: 1,\r\n      PAN: 2,\r\n      TOUCH_ROTATE: 3,\r\n      TOUCH_DOLLY: 4,\r\n      TOUCH_PAN: 5\r\n    };\r\n\r\n    var state = STATE.NONE;\r\n\r\n    var EPS = 0.000001;\r\n\r\n    // current position in spherical coordinates\r\n    var spherical = new THREE.Spherical();\r\n    var sphericalDelta = new THREE.Spherical();\r\n\r\n    var scale = 1;\r\n    var panOffset = new THREE.Vector3();\r\n    var zoomChanged = false;\r\n\r\n    var rotateStart = new THREE.Vector2();\r\n    var rotateEnd = new THREE.Vector2();\r\n    var rotateDelta = new THREE.Vector2();\r\n\r\n    var panStart = new THREE.Vector2();\r\n    var panEnd = new THREE.Vector2();\r\n    var panDelta = new THREE.Vector2();\r\n\r\n    var dollyStart = new THREE.Vector2();\r\n    var dollyEnd = new THREE.Vector2();\r\n    var dollyDelta = new THREE.Vector2();\r\n\r\n    function getAutoRotationAngle() {\r\n      return ((2 * Math.PI) / 60 / 60) * scope.autoRotateSpeed;\r\n    }\r\n\r\n    function getZoomScale() {\r\n      return Math.pow(0.95, scope.zoomSpeed);\r\n    }\r\n\r\n    function rotateLeft(angle) {\r\n      sphericalDelta.theta -= angle;\r\n    }\r\n\r\n    function rotateUp(angle) {\r\n      sphericalDelta.phi -= angle;\r\n    }\r\n\r\n    var panLeft = (function() {\r\n      var v = new THREE.Vector3();\r\n\r\n      return function panLeft(distance, objectMatrix) {\r\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\r\n        v.multiplyScalar(-distance);\r\n\r\n        panOffset.add(v);\r\n      };\r\n    })();\r\n\r\n    var panUp = (function() {\r\n      var v = new THREE.Vector3();\r\n\r\n      return function panUp(distance, objectMatrix) {\r\n        v.setFromMatrixColumn(objectMatrix, 1); // get Y column of objectMatrix\r\n        v.multiplyScalar(distance);\r\n\r\n        panOffset.add(v);\r\n      };\r\n    })();\r\n\r\n    // deltaX and deltaY are in pixels; right and down are positive\r\n    var pan = (function() {\r\n      var offset = new THREE.Vector3();\r\n\r\n      return function pan(deltaX, deltaY) {\r\n        var element =\r\n          scope.domElement === document\r\n            ? scope.domElement.body\r\n            : scope.domElement;\r\n\r\n        if (scope.object instanceof THREE.PerspectiveCamera) {\r\n          // perspective\r\n          var position = scope.object.position;\r\n          offset.copy(position).sub(scope.target);\r\n          var targetDistance = offset.length();\r\n\r\n          // half of the fov is center to top of screen\r\n          targetDistance *= Math.tan(\r\n            ((scope.object.fov / 2) * Math.PI) / 180.0\r\n          );\r\n\r\n          // we actually don't use screenWidth, since perspective camera is fixed to screen height\r\n          panLeft(\r\n            (2 * deltaX * targetDistance) / element.clientHeight,\r\n            scope.object.matrix\r\n          );\r\n          panUp(\r\n            (2 * deltaY * targetDistance) / element.clientHeight,\r\n            scope.object.matrix\r\n          );\r\n        } else if (scope.object instanceof THREE.OrthographicCamera) {\r\n          // orthographic\r\n          panLeft(\r\n            (deltaX * (scope.object.right - scope.object.left)) /\r\n              scope.object.zoom /\r\n              element.clientWidth,\r\n            scope.object.matrix\r\n          );\r\n          panUp(\r\n            (deltaY * (scope.object.top - scope.object.bottom)) /\r\n              scope.object.zoom /\r\n              element.clientHeight,\r\n            scope.object.matrix\r\n          );\r\n        } else {\r\n          // camera neither orthographic nor perspective\r\n          console.warn(\r\n            \"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\"\r\n          );\r\n          scope.enablePan = false;\r\n        }\r\n      };\r\n    })();\r\n\r\n    // Expose panning for external usage\r\n    this.pan = pan;\r\n\r\n    function dollyIn(dollyScale) {\r\n      if (scope.object instanceof THREE.PerspectiveCamera) {\r\n        scale /= dollyScale;\r\n      } else if (scope.object instanceof THREE.OrthographicCamera) {\r\n        scope.object.zoom = Math.max(\r\n          scope.minZoom,\r\n          Math.min(scope.maxZoom, scope.object.zoom * dollyScale)\r\n        );\r\n        scope.object.updateProjectionMatrix();\r\n        zoomChanged = true;\r\n      } else {\r\n        console.warn(\r\n          \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\r\n        );\r\n        scope.enableZoom = false;\r\n      }\r\n    }\r\n\r\n    function dollyOut(dollyScale) {\r\n      if (scope.object instanceof THREE.PerspectiveCamera) {\r\n        scale *= dollyScale;\r\n      } else if (scope.object instanceof THREE.OrthographicCamera) {\r\n        scope.object.zoom = Math.max(\r\n          scope.minZoom,\r\n          Math.min(scope.maxZoom, scope.object.zoom / dollyScale)\r\n        );\r\n        scope.object.updateProjectionMatrix();\r\n        zoomChanged = true;\r\n      } else {\r\n        console.warn(\r\n          \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\r\n        );\r\n        scope.enableZoom = false;\r\n      }\r\n    }\r\n\r\n    //\r\n    // event callbacks - update the object state\r\n    //\r\n\r\n    function handleMouseDownRotate(event) {\r\n      //console.log( 'handleMouseDownRotate' );\r\n\r\n      rotateStart.set(event.clientX, event.clientY);\r\n    }\r\n\r\n    function handleMouseDownDolly(event) {\r\n      //console.log( 'handleMouseDownDolly' );\r\n\r\n      dollyStart.set(event.clientX, event.clientY);\r\n    }\r\n\r\n    function handleMouseDownPan(event) {\r\n      //console.log( 'handleMouseDownPan' );\r\n\r\n      panStart.set(event.clientX, event.clientY);\r\n    }\r\n\r\n    function handleMouseMoveRotate(event) {\r\n      //console.log( 'handleMouseMoveRotate' );\r\n\r\n      rotateEnd.set(event.clientX, event.clientY);\r\n      rotateDelta.subVectors(rotateEnd, rotateStart);\r\n\r\n      var element =\r\n        scope.domElement === document\r\n          ? scope.domElement.body\r\n          : scope.domElement;\r\n\r\n      // rotating across whole screen goes 360 degrees around\r\n      rotateLeft(\r\n        ((2 * Math.PI * rotateDelta.x) / element.clientWidth) *\r\n          scope.rotateSpeed\r\n      );\r\n\r\n      // rotating up and down along whole screen attempts to go 360, but limited to 180\r\n      rotateUp(\r\n        ((2 * Math.PI * rotateDelta.y) / element.clientHeight) *\r\n          scope.rotateSpeed\r\n      );\r\n\r\n      rotateStart.copy(rotateEnd);\r\n\r\n      scope.update();\r\n    }\r\n\r\n    function handleMouseMoveDolly(event) {\r\n      //console.log( 'handleMouseMoveDolly' );\r\n\r\n      dollyEnd.set(event.clientX, event.clientY);\r\n\r\n      dollyDelta.subVectors(dollyEnd, dollyStart);\r\n\r\n      if (dollyDelta.y > 0) {\r\n        dollyIn(getZoomScale());\r\n      } else if (dollyDelta.y < 0) {\r\n        dollyOut(getZoomScale());\r\n      }\r\n\r\n      dollyStart.copy(dollyEnd);\r\n\r\n      scope.update();\r\n    }\r\n\r\n    function handleMouseMovePan(event) {\r\n      //console.log( 'handleMouseMovePan' );\r\n\r\n      panEnd.set(event.clientX, event.clientY);\r\n\r\n      panDelta.subVectors(panEnd, panStart);\r\n\r\n      pan(panDelta.x, panDelta.y);\r\n\r\n      panStart.copy(panEnd);\r\n\r\n      scope.update();\r\n    }\r\n\r\n    function handleMouseUp(event) {\r\n      //console.log( 'handleMouseUp' );\r\n    }\r\n\r\n    function handleMouseWheel(event) {\r\n      //console.log( 'handleMouseWheel' );\r\n\r\n      if (event.deltaY < 0) {\r\n        dollyOut(getZoomScale());\r\n      } else if (event.deltaY > 0) {\r\n        dollyIn(getZoomScale());\r\n      }\r\n\r\n      scope.update();\r\n    }\r\n\r\n    function handleKeyUp(event) {\r\n      switch (event.keyCode) {\r\n        case scope.keys.SPACE:\r\n          if (scope.spacePan == true) {\r\n            scope.spacePanStart = false;\r\n            state = STATE.NONE;\r\n          }\r\n          break;\r\n      }\r\n    }\r\n\r\n    function handleKeyDown(event) {\r\n      //console.log( 'handleKeyDown' );\r\n\r\n      switch (event.keyCode) {\r\n        case scope.keys.UP:\r\n          pan(0, scope.keyPanSpeed);\r\n          scope.update();\r\n          break;\r\n\r\n        case scope.keys.BOTTOM:\r\n          pan(0, -scope.keyPanSpeed);\r\n          scope.update();\r\n          break;\r\n\r\n        case scope.keys.LEFT:\r\n          pan(scope.keyPanSpeed, 0);\r\n          scope.update();\r\n          break;\r\n\r\n        case scope.keys.RIGHT:\r\n          pan(-scope.keyPanSpeed, 0);\r\n          scope.update();\r\n          break;\r\n\r\n        case scope.keys.SPACE:\r\n          if (scope.spacePan == true) {\r\n            scope.spacePanStart = true;\r\n            state = STATE.PAN;\r\n          }\r\n          break;\r\n      }\r\n    }\r\n\r\n    function handleTouchStartRotate(event) {\r\n      //console.log( 'handleTouchStartRotate' );\r\n\r\n      rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\r\n    }\r\n\r\n    function handleTouchStartDolly(event) {\r\n      //console.log( 'handleTouchStartDolly' );\r\n\r\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\r\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\r\n\r\n      var distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n      dollyStart.set(0, distance);\r\n    }\r\n\r\n    function handleTouchStartPan(event) {\r\n      //console.log( 'handleTouchStartPan' );\r\n\r\n      panStart.set(event.touches[0].pageX, event.touches[0].pageY);\r\n    }\r\n\r\n    function handleTouchMoveRotate(event) {\r\n      //console.log( 'handleTouchMoveRotate' );\r\n\r\n      rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\r\n      rotateDelta.subVectors(rotateEnd, rotateStart);\r\n\r\n      var element =\r\n        scope.domElement === document\r\n          ? scope.domElement.body\r\n          : scope.domElement;\r\n\r\n      // rotating across whole screen goes 360 degrees around\r\n      rotateLeft(\r\n        ((2 * Math.PI * rotateDelta.x) / element.clientWidth) *\r\n          scope.rotateSpeed\r\n      );\r\n\r\n      // rotating up and down along whole screen attempts to go 360, but limited to 180\r\n      rotateUp(\r\n        ((2 * Math.PI * rotateDelta.y) / element.clientHeight) *\r\n          scope.rotateSpeed\r\n      );\r\n\r\n      rotateStart.copy(rotateEnd);\r\n\r\n      scope.update();\r\n    }\r\n\r\n    function handleTouchMoveDolly(event) {\r\n      //console.log( 'handleTouchMoveDolly' );\r\n\r\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\r\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\r\n\r\n      var distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n      dollyEnd.set(0, distance);\r\n\r\n      dollyDelta.subVectors(dollyEnd, dollyStart);\r\n\r\n      if (dollyDelta.y > 0) {\r\n        dollyOut(getZoomScale());\r\n      } else if (dollyDelta.y < 0) {\r\n        dollyIn(getZoomScale());\r\n      }\r\n\r\n      dollyStart.copy(dollyEnd);\r\n\r\n      scope.update();\r\n    }\r\n\r\n    function handleTouchMovePan(event) {\r\n      //console.log( 'handleTouchMovePan' );\r\n\r\n      panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\r\n\r\n      panDelta.subVectors(panEnd, panStart);\r\n\r\n      pan(panDelta.x, panDelta.y);\r\n\r\n      panStart.copy(panEnd);\r\n\r\n      scope.update();\r\n    }\r\n\r\n    function handleTouchEnd(event) {\r\n      //console.log( 'handleTouchEnd' );\r\n    }\r\n\r\n    //\r\n    // event handlers - FSM: listen for events and reset state\r\n    //\r\n\r\n    function onMouseDown(event) {\r\n      if (scope.enabled === false) return;\r\n\r\n      event.preventDefault();\r\n\r\n      if (event.button === scope.mouseButtons.ORBIT) {\r\n        if (scope.enableRotate === false) return;\r\n\r\n        handleMouseDownRotate(event);\r\n\r\n        state = STATE.ROTATE;\r\n      } else if (event.button === scope.mouseButtons.ZOOM) {\r\n        if (scope.enableZoom === false) return;\r\n\r\n        handleMouseDownDolly(event);\r\n\r\n        state = STATE.DOLLY;\r\n      } else if (event.button === scope.mouseButtons.PAN) {\r\n        if (scope.enablePan === false) return;\r\n\r\n        if (!scope.spacePan || scope.bothPan) {\r\n          handleMouseDownPan(event);\r\n\r\n          state = STATE.PAN;\r\n        }\r\n      }\r\n\r\n      if (state !== STATE.NONE) {\r\n        document.addEventListener(\"mousemove\", onMouseMove, false);\r\n        document.addEventListener(\"mouseup\", onMouseUp, false);\r\n\r\n        scope.dispatchEvent(startEvent);\r\n      }\r\n    }\r\n\r\n    function onMouseMove(event) {\r\n      if (scope.enabled === false) return;\r\n\r\n      event.preventDefault();\r\n\r\n      if (state === STATE.ROTATE) {\r\n        if (scope.enableRotate === false) return;\r\n\r\n        handleMouseMoveRotate(event);\r\n      } else if (state === STATE.DOLLY) {\r\n        if (scope.enableZoom === false) return;\r\n\r\n        handleMouseMoveDolly(event);\r\n      } else if (state === STATE.PAN) {\r\n        if (scope.enablePan === false) return;\r\n\r\n        if (scope.spacePan == true) {\r\n          if (scope.spacePanStart == true) {\r\n            handleMouseDownPan(event);\r\n            scope.spacePanStart = false;\r\n          }\r\n        }\r\n\r\n        handleMouseMovePan(event);\r\n      }\r\n    }\r\n\r\n    function onMouseUp(event) {\r\n      if (scope.enabled === false) return;\r\n\r\n      handleMouseUp(event);\r\n\r\n      //document.removeEventListener( 'mousemove', onMouseMove, false );\r\n      document.removeEventListener(\"mouseup\", onMouseUp, false);\r\n\r\n      scope.dispatchEvent(endEvent);\r\n\r\n      state = STATE.NONE;\r\n    }\r\n\r\n    function onMouseWheel(event) {\r\n      if (\r\n        scope.enabled === false ||\r\n        scope.enableZoom === false ||\r\n        (state !== STATE.NONE && state !== STATE.ROTATE)\r\n      )\r\n        return;\r\n\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n\r\n      handleMouseWheel(event);\r\n\r\n      scope.dispatchEvent(startEvent); // not sure why these are here...\r\n      scope.dispatchEvent(endEvent);\r\n    }\r\n\r\n    function onKeyDown(event) {\r\n      if (\r\n        scope.enabled === false ||\r\n        scope.enableKeys === false ||\r\n        scope.enablePan === false\r\n      )\r\n        return;\r\n\r\n      document.addEventListener(\"mousemove\", onMouseMove, false);\r\n\r\n      handleKeyDown(event);\r\n    }\r\n\r\n    function onKeyUp(event) {\r\n      if (\r\n        scope.enabled === false ||\r\n        scope.enableKeys === false ||\r\n        scope.enablePan === false\r\n      )\r\n        return;\r\n\r\n      handleKeyUp(event);\r\n    }\r\n\r\n    function onTouchStart(event) {\r\n      if (scope.enabled === false) return;\r\n\r\n      switch (event.touches.length) {\r\n        case 1: // one-fingered touch: rotate\r\n          if (scope.enableRotate === false) return;\r\n\r\n          handleTouchStartRotate(event);\r\n\r\n          state = STATE.TOUCH_ROTATE;\r\n\r\n          break;\r\n\r\n        case 2: // two-fingered touch: dolly\r\n          if (scope.enableZoom === false) return;\r\n\r\n          handleTouchStartDolly(event);\r\n\r\n          state = STATE.TOUCH_DOLLY;\r\n\r\n          break;\r\n\r\n        case 3: // three-fingered touch: pan\r\n          if (scope.enablePan === false) return;\r\n\r\n          handleTouchStartPan(event);\r\n\r\n          state = STATE.TOUCH_PAN;\r\n\r\n          break;\r\n\r\n        default:\r\n          state = STATE.NONE;\r\n      }\r\n\r\n      if (state !== STATE.NONE) {\r\n        scope.dispatchEvent(startEvent);\r\n      }\r\n    }\r\n\r\n    function onTouchMove(event) {\r\n      if (scope.enabled === false) return;\r\n\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n\r\n      switch (event.touches.length) {\r\n        case 1: // one-fingered touch: rotate\r\n          if (scope.enableRotate === false) return;\r\n          if (state !== STATE.TOUCH_ROTATE) return; // is this needed?...\r\n\r\n          handleTouchMoveRotate(event);\r\n\r\n          break;\r\n\r\n        case 2: // two-fingered touch: dolly\r\n          if (scope.enableZoom === false) return;\r\n          if (state !== STATE.TOUCH_DOLLY) return; // is this needed?...\r\n\r\n          handleTouchMoveDolly(event);\r\n\r\n          break;\r\n\r\n        case 3: // three-fingered touch: pan\r\n          if (scope.enablePan === false) return;\r\n          if (state !== STATE.TOUCH_PAN) return; // is this needed?...\r\n\r\n          handleTouchMovePan(event);\r\n\r\n          break;\r\n\r\n        default:\r\n          state = STATE.NONE;\r\n      }\r\n    }\r\n\r\n    function onTouchEnd(event) {\r\n      if (scope.enabled === false) return;\r\n\r\n      handleTouchEnd(event);\r\n\r\n      scope.dispatchEvent(endEvent);\r\n\r\n      state = STATE.NONE;\r\n    }\r\n\r\n    function onContextMenu(event) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    //\r\n\r\n    scope.domElement.addEventListener(\"contextmenu\", onContextMenu, false);\r\n\r\n    scope.domElement.addEventListener(\"mousedown\", onMouseDown, false);\r\n    scope.domElement.addEventListener(\"wheel\", onMouseWheel, false);\r\n\r\n    scope.domElement.addEventListener(\"touchstart\", onTouchStart, false);\r\n    scope.domElement.addEventListener(\"touchend\", onTouchEnd, false);\r\n    scope.domElement.addEventListener(\"touchmove\", onTouchMove, false);\r\n\r\n    window.addEventListener(\"keydown\", onKeyDown, false);\r\n    window.addEventListener(\"keyup\", onKeyUp, false);\r\n\r\n    // force an update at start\r\n\r\n    this.update();\r\n  }\r\n\r\n  OrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype);\r\n  OrbitControls.prototype.constructor = OrbitControls;\r\n\r\n  Object.defineProperties(OrbitControls.prototype, {\r\n    center: {\r\n      get: function() {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .center has been renamed to .target\"\r\n        );\r\n        return this.target;\r\n      }\r\n    },\r\n\r\n    // backward compatibility\r\n\r\n    noZoom: {\r\n      get: function() {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.\"\r\n        );\r\n        return !this.enableZoom;\r\n      },\r\n\r\n      set: function(value) {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.\"\r\n        );\r\n        this.enableZoom = !value;\r\n      }\r\n    },\r\n\r\n    noRotate: {\r\n      get: function() {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.\"\r\n        );\r\n        return !this.enableRotate;\r\n      },\r\n\r\n      set: function(value) {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.\"\r\n        );\r\n        this.enableRotate = !value;\r\n      }\r\n    },\r\n\r\n    noPan: {\r\n      get: function() {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.\"\r\n        );\r\n        return !this.enablePan;\r\n      },\r\n\r\n      set: function(value) {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.\"\r\n        );\r\n        this.enablePan = !value;\r\n      }\r\n    },\r\n\r\n    noKeys: {\r\n      get: function() {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.\"\r\n        );\r\n        return !this.enableKeys;\r\n      },\r\n\r\n      set: function(value) {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.\"\r\n        );\r\n        this.enableKeys = !value;\r\n      }\r\n    },\r\n\r\n    staticMoving: {\r\n      get: function() {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.\"\r\n        );\r\n        return !this.enableDamping;\r\n      },\r\n\r\n      set: function(value) {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.\"\r\n        );\r\n        this.enableDamping = !value;\r\n      }\r\n    },\r\n\r\n    dynamicDampingFactor: {\r\n      get: function() {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.\"\r\n        );\r\n        return this.dampingFactor;\r\n      },\r\n\r\n      set: function(value) {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.\"\r\n        );\r\n        this.dampingFactor = value;\r\n      }\r\n    }\r\n  });\r\n\r\n  return OrbitControls;\r\n};\r\n","var def = require(\"../imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\n\r\nmodule.exports = function(self) {\r\n  /**\r\n   * Calculates coordinates of mouse on canvas adjusted for padding\r\n   * @param {*} event\r\n   * @param {*} currentElement\r\n   */\r\n  self.relMouseCoords = function(event, currentElement) {\r\n    var totalOffsetX = 0;\r\n    var totalOffsetY = 0;\r\n    var canvasX = 0;\r\n    var canvasY = 0;\r\n\r\n    do {\r\n      totalOffsetX += currentElement.offsetLeft - currentElement.scrollLeft;\r\n      totalOffsetY += currentElement.offsetTop - currentElement.scrollTop;\r\n    } while ((currentElement = currentElement.offsetParent));\r\n\r\n    canvasX = event.pageX - totalOffsetX;\r\n    canvasY = event.pageY - totalOffsetY;\r\n\r\n    return { x: canvasX, y: canvasY };\r\n  };\r\n\r\n  /**\r\n   * Add metadata to node\r\n   * @param {*} node\r\n   */\r\n  self.prepNode = function(node) {\r\n    let nodeToAdd = node;\r\n    if (!node.data) {\r\n      node.data = {};\r\n    }\r\n    nodeToAdd.renderData = {\r\n      label: node.data.label || \"No Label\",\r\n      color: node.data.color || def.NODE_COLOR,\r\n      hcolor: node.data.hcolor || def.NODE_HIGHLIGHT,\r\n      shape: node.data.shape || def.NODE_SHAPE,\r\n      linecolor: new THREE.Color(0.5, 0.5, 0.5),\r\n      numYeast: Math.ceil(Math.random() * 8),\r\n      size: node.data.size,\r\n      tsize: node.data.tsize || def.TEXT_SIZE,\r\n      x: 0,\r\n      y: 0,\r\n      vx: 0,\r\n      vy: 0\r\n    };\r\n    return nodeToAdd;\r\n  };\r\n\r\n  /**\r\n   * Creates a generic rectangle shape to use for selection and boundaries\r\n   */\r\n  self.make1x1Rect = function() {\r\n    var rectShape = new THREE.Shape();\r\n    rectShape.moveTo(0, 0);\r\n    rectShape.lineTo(0, 1);\r\n    rectShape.lineTo(1, 1);\r\n    rectShape.lineTo(1, 0);\r\n    rectShape.lineTo(0, 0);\r\n    rectShape.lineTo(0, 1);\r\n    return new THREE.ShapeGeometry(rectShape);\r\n  };\r\n\r\n  /**\r\n   * Creates a centered 2x2 Rectangle\r\n   */\r\n  self.make2x2Rect = function() {\r\n    var rectShape = new THREE.Shape();\r\n    rectShape.moveTo(-1, -1);\r\n    rectShape.lineTo(-1, 1);\r\n    rectShape.lineTo(1, 1);\r\n    rectShape.lineTo(1, -1);\r\n    rectShape.lineTo(-1, -1);\r\n    return new THREE.ShapeGeometry(rectShape);\r\n  };\r\n\r\n  /**\r\n   *  find radius of circle given the volume\r\n   * @param {*} volume\r\n   */\r\n  self.volToRadius = function(volume) {\r\n    return Math.pow((volume / Math.PI) * (3.0 / 4.0), 1.0 / 3.0);\r\n  };\r\n};\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\n\r\nmodule.exports = function(self) {\r\n  /**\r\n   * Creates or converts ngraph or d3 graph\r\n   */\r\n  self.setupGraph = function() {\r\n    var createNGraph = require(\"ngraph.graph\");\r\n    self.graph = createNGraph();\r\n    if (self.inGraph) {\r\n      self.updateGraph(self.inGraph);\r\n    }\r\n  };\r\n\r\n  /**\r\n   *  Create layout using d3\r\n   */\r\n  self.setupLayout = function() {\r\n    if (self.options.layout == \"ngraph\") {\r\n      self.setupNgraphLayout();\r\n    } else if (self.options.layout == \"d3\") {\r\n      self.setupD3Layout();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Set graph layout to ngraph\r\n   */\r\n  self.setupNgraphLayout = function() {\r\n    self.force = require(\"ngraph.forcelayout\")(self.graph);\r\n  };\r\n\r\n  /**\r\n   * Set graph layout to D3 Force Directed and set decay parameters\r\n   */\r\n  self.setupD3Layout = function() {\r\n    self.force = d3\r\n      .forceSimulation()\r\n      .force(\"charge\", d3.forceManyBody().strength(-1))\r\n      .force(\"link\", d3.forceLink())\r\n      .force(\"y\", d3.forceY(0).strength(0.001))\r\n      .force(\"x\", d3.forceX(0).strength(0.001))\r\n      .stop();\r\n\r\n    // set alpha decay to be lower than the default 0.0228\r\n    // so force layout does not prematurely stop\r\n    self.force.alphaDecay(0.005);\r\n\r\n    // set velocity decay to be lower than the default 0.4\r\n    // so nodes move to their final locations\r\n    self.force.velocityDecay(0.1);\r\n  };\r\n\r\n  self.setDisplayParams = function() {\r\n    self.element = document.getElementById(\"graph-container\");\r\n    self.clientRect = self.element.getBoundingClientRect();\r\n    self.width = self.clientRect.width;\r\n    self.height = self.clientRect.height;\r\n    self.aspect = self.width / self.height;\r\n    self.resolution = new THREE.Vector2(self.width, self.height);\r\n  };\r\n\r\n  self.setRendererParams = function() {\r\n    self.renderer.setSize(self.width, self.height);\r\n    self.cssRenderer = new THREE.CSS3DRenderer();\r\n    self.cssRenderer.setSize(self.width, self.height);\r\n    self.cssRenderer.domElement.style.position = \"absolute\";\r\n    self.cssRenderer.domElement.style.top = 0;\r\n    self.renderer.setPixelRatio(window.devicePixelRatio);\r\n  };\r\n\r\n  /**\r\n   *  Create initial camera and parameters\r\n   */\r\n  self.setupCamera = function() {\r\n    self.ccamera = new THREE.PerspectiveCamera(\r\n      self.fov,\r\n      self.width / self.height,\r\n      self.near,\r\n      self.far\r\n    );\r\n    self.ccamera.position.z = 200;\r\n    var controls = new OrbitControls(self.ccamera, self.element);\r\n    controls.spacePan = true; // Space bar panning\r\n    controls.bothPan = true; // Space bar and right click panning\r\n    controls.minDistance = 10;\r\n    controls.maxDistance = self.renderWidth * 2;\r\n    controls.target.set(0, 0, 0);\r\n    controls.enableRotate = false;\r\n    self.controls = controls;\r\n  };\r\n\r\n  /**\r\n   *  Create minimap\r\n   */\r\n  self.setupMinimap = function() {\r\n    self.minimap = {};\r\n    self.minimap.camera = new THREE.PerspectiveCamera(\r\n      self.fov,\r\n      1,\r\n      self.near,\r\n      self.far\r\n    );\r\n    self.minimap.camera.position.z = self.renderWidth * 2;\r\n\r\n    (self.oldCoords = {\r\n      x: null,\r\n      y: null,\r\n      z: null\r\n    }),\r\n      /**\r\n       * Pan the ccamera according to mouse position on screen (should be called only when mouse is on minimap)\r\n       * @param coordX mouse position on screen returned by relMouseCoords\r\n       * @param coordY mouse position on screen returned by relMouseCoords\r\n       */\r\n      (self.minimap.panToMousePosition = function(coordX, coordY) {\r\n        // ensures that the camera position is updated from the last pan.\r\n        if (\r\n          self.ccamera.position.x == self.oldCoords.x &&\r\n          self.ccamera.position.y == self.oldCoords.y &&\r\n          self.ccamera.position.z == self.oldCoords.z\r\n        ) {\r\n          return;\r\n        }\r\n\r\n        self.oldCoords.x = self.ccamera.position.x;\r\n        self.oldCoords.y = self.ccamera.position.y;\r\n        self.oldCoords.z = self.ccamera.position.z;\r\n\r\n        // 850 is an approximation\r\n        const coefficient = (self.height - 200) / self.ccamera.position.z;\r\n\r\n        self.controls.pan(\r\n          ((coordX / self.minimap.width) * 2000 -\r\n            1000 -\r\n            self.ccamera.position.x) *\r\n            -coefficient,\r\n          (((self.height - coordY) / self.minimap.height) * 2000 -\r\n            1000 -\r\n            self.ccamera.position.y) *\r\n            coefficient\r\n        );\r\n      });\r\n  };\r\n\r\n  /**\r\n   *  Create initial scene geometry and attributes\r\n   */\r\n  self.setupGeometry = function() {\r\n    self.scene = new THREE.Scene();\r\n\r\n    self.points = new THREE.BufferGeometry();\r\n    self.nodes = new THREE.Group();\r\n    self.scene.add(self.nodes);\r\n\r\n    if (def.LINES == \"fancy\") {\r\n      self.setupFancyEdges();\r\n    } else {\r\n      self.setUpSimpleEdges();\r\n    }\r\n\r\n    var rect = self.make1x1Rect();\r\n\r\n    self.setupSelectionBox(rect);\r\n    self.setupBoundaries(rect);\r\n    self.setupViewPort(rect);\r\n  };\r\n\r\n  /**\r\n   * Setup data structures for fancy edges\r\n   */\r\n  self.setupFancyEdges = function() {\r\n    self.edges = [];\r\n    self.edgeCount = 0;\r\n  };\r\n\r\n  /**\r\n   * Sets up data structures for simple edges\r\n   */\r\n  self.setUpSimpleEdges = function() {\r\n    self.edges = new THREE.BufferGeometry();\r\n    var material = new THREE.LineBasicMaterial({\r\n      linewidth: 2,\r\n      color: 0xffffff,\r\n      vertexColors: THREE.VertexColors,\r\n      shading: THREE.FlatShading\r\n    });\r\n    self.line = new THREE.LineSegments(self.edges, material);\r\n    self.line.frustumCulled = false;\r\n    self.scene.add(self.line);\r\n\r\n    var positions = new THREE.BufferAttribute(\r\n      new Float32Array(self.MAX_LINES * 3),\r\n      3\r\n    );\r\n    var colors = new THREE.BufferAttribute(\r\n      new Float32Array(self.MAX_LINES * 3),\r\n      3\r\n    );\r\n\r\n    self.edges.addAttribute(\"position\", positions);\r\n    self.edges.addAttribute(\"color\", colors);\r\n    self.drawCount = 0;\r\n  };\r\n\r\n  /**\r\n   * Adds box to screen that is displayed when selecting groups of nodes\r\n   */\r\n  self.setupSelectionBox = function(rect) {\r\n    self.selectBox = new THREE.Line(\r\n      rect,\r\n      new THREE.LineBasicMaterial({ linewidth: 3, color: 0x3399aa })\r\n    );\r\n    self.selectBox.visible = false;\r\n    self.scene.add(self.selectBox);\r\n  };\r\n\r\n  /**\r\n   * Sets boundaries for max edges of graph\r\n   */\r\n  self.setupBoundaries = function(rect) {\r\n    self.boundaries = new THREE.Line(\r\n      rect,\r\n      new THREE.LineBasicMaterial({ linewidth: 3, color: 0x999999 })\r\n    );\r\n    self.scene.add(self.boundaries);\r\n    self.setBoundarySize(self.renderWidth * 2);\r\n  };\r\n\r\n  /**\r\n   * Sets viewport to match size of display\r\n   */\r\n  self.setupViewPort = function(rect) {\r\n    self.viewPort = new THREE.Line(\r\n      rect,\r\n      new THREE.LineBasicMaterial({ linewidth: 3, color: 0x333333 })\r\n    );\r\n    self.scene.add(self.viewPort);\r\n    self.setViewPortSize(self.ccamera);\r\n  };\r\n\r\n  /**\r\n   *  Creates listeners and events for selecting nodes\r\n   */\r\n  self.setupSelect = function() {\r\n    self.points.addAttribute(\r\n      \"position\",\r\n      new THREE.BufferAttribute(new Float32Array(20 * 3), 3)\r\n    );\r\n    self.points.computeBoundingSphere();\r\n    self.nodeCount = 0;\r\n    var mouseHandler = function(callback) {\r\n      return function(event) {\r\n        var coords = self.relMouseCoords(event, this);\r\n        var mouseX = (coords.x / self.width) * 2 - 1;\r\n        var mouseY = 1 - (coords.y / self.height) * 2;\r\n        var mousePosition = new THREE.Vector3(mouseX, mouseY, 1);\r\n        mousePosition.unproject(self.ccamera);\r\n        var dir = mousePosition.sub(self.ccamera.position).clone();\r\n        mousePosition.normalize();\r\n        // Determine whether mouse is on minimap\r\n        self.isMouseCoordinatesOnMinimap =\r\n          coords.x <= self.minimap.width &&\r\n          self.height - coords.y <= self.minimap.height;\r\n        if (self.isMouseCoordinatesOnMinimap) {\r\n          self.minimap.mouseX = coords.x;\r\n          self.minimap.mouseY = coords.y;\r\n        }\r\n\r\n        // Determine intersects\r\n        var raycaster = new THREE.Raycaster(\r\n          self.ccamera.position,\r\n          mousePosition\r\n        );\r\n\r\n        // Find real location of mouse\r\n        var distance = -self.ccamera.position.z / dir.z;\r\n        var pos = self.ccamera.position\r\n          .clone()\r\n          .add(dir.multiplyScalar(distance));\r\n\r\n        if (callback == self.onRightClick && event.which != 3) {\r\n          return;\r\n        }\r\n\r\n        if (\r\n          callback == self.onRightClick &&\r\n          event.target.getAttribute(\"contenteditable\")\r\n        ) {\r\n          event.target.focus();\r\n        } else {\r\n          event.preventDefault();\r\n          if (callback == self.onRightClick) {\r\n            self.onRightClickCoords(event);\r\n          }\r\n          self.callMouseHandler(raycaster, pos, callback);\r\n        }\r\n      };\r\n    };\r\n\r\n    //Add listeners to web page\r\n    self.setupMouseHandlers(mouseHandler);\r\n  };\r\n\r\n  /**\r\n   * Checks if a node has been clicked, and calls the appropriate mouse handler function\r\n   */\r\n  self.callMouseHandler = function(raycaster, pos, callback) {\r\n    var intersects = raycaster.intersectObjects(self.nodes.children);\r\n    if (intersects.length) {\r\n      // If a node has been clicked\r\n      var nodeIndex = intersects[0].object.index;\r\n      self.oldIntersect = nodeIndex;\r\n      callback(\r\n        self.graph.getNode(nodeIndex),\r\n        pos.x,\r\n        pos.y,\r\n        event.button,\r\n        event.ctrlKey\r\n      );\r\n    } else {\r\n      callback(null, pos.x, pos.y, event.button, event.ctrlKey);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Add Mouse Event Listeners to page\r\n   */\r\n  self.setupMouseHandlers = function(mouseHandler) {\r\n    self.element.addEventListener(\r\n      \"mousemove\",\r\n      mouseHandler(self.onMouseMove),\r\n      false\r\n    );\r\n    self.element.addEventListener(\r\n      \"mousedown\",\r\n      mouseHandler(self.onMouseDown),\r\n      false\r\n    );\r\n    self.element.addEventListener(\r\n      \"mouseup\",\r\n      mouseHandler(self.onMouseUp),\r\n      false\r\n    );\r\n    self.element.addEventListener(\r\n      \"mouseup\",\r\n      mouseHandler(self.onRightClick),\r\n      false\r\n    );\r\n  };\r\n};\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\nvar $ = require(\"jquery\");\r\n\r\nmodule.exports = function(self) {\r\n  self.addNode = function(node) {\r\n    self.graph.addNode(node.id, node.data);\r\n    var graphNode = self.graph.getNode(node.id);\r\n    graphNode.x = node.x;\r\n    graphNode.y = node.y;\r\n    graphNode.fx = node.fx;\r\n    graphNode.fy = node.fy;\r\n    graphNode.pinnedx = node.fx != undefined;\r\n    graphNode.pinnedy = node.fy != undefined;\r\n    self.prepNode(graphNode);\r\n    self.drawNode(graphNode);\r\n    graphNode.links = [];\r\n    self.layoutInit = true;\r\n    return graphNode;\r\n  };\r\n\r\n  self.removeNode = function(node) {\r\n    if (!node || !node.id) {\r\n      return;\r\n    }\r\n    self.removeGraphEdges(node);\r\n    self.undrawEdges(node);\r\n    self.nodes.remove(node.renderData.draw_object);\r\n    self.graph.removeNode(node.id);\r\n    self.undrawNode(node);\r\n    self.nodeCount -= 1;\r\n  };\r\n\r\n  self.removeGraphEdges = function(node) {\r\n    var nodeLinks = self.graph.getLinks(node.id);\r\n    if (nodeLinks) {\r\n      nodeLinks.forEach(function(edge) {\r\n        self.graph.removeLink(edge);\r\n      });\r\n    }\r\n  };\r\n\r\n  self.undrawNode = function(node) {\r\n    var nodes = self.force.nodes();\r\n    if (nodes) {\r\n      for (var i = 0; i < nodes.length; i++) {\r\n        if (nodes[i].id == node.id) {\r\n          self.scene.remove(nodes[i].renderData.draw_object);\r\n          nodes[i].renderData.textHolder.children[0].element.hidden = true;\r\n          nodes.splice(i, 1);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  self.undrawEdges = function(node) {\r\n    var positions = self.edges.attributes.position.array;\r\n    var colors = self.edges.attributes.color.array;\r\n    var killed = 0;\r\n    for (var i = 0; i - killed < self.lineIndices.length; i++) {\r\n      if (\r\n        self.lineIndices[i - killed].source.id == node.id ||\r\n        self.lineIndices[i - killed].target.id == node.id\r\n      ) {\r\n        for (var j = i - killed; j < self.lineIndices.length; j++) {\r\n          var k = j + 1;\r\n          if (k == self.lineIndices.length) {\r\n            positions[j * 6] = 0;\r\n            positions[j * 6 + 1] = 0;\r\n            positions[j * 6 + 3] = 0;\r\n            positions[j * 6 + 4] = 0;\r\n            colors[j * 6] = 255;\r\n            colors[j * 6 + 1] = 160;\r\n            colors[j * 6 + 2] = 80;\r\n            colors[j * 6 + 3] = 255;\r\n            colors[j * 6 + 4] = 160;\r\n            colors[j * 6 + 5] = 80;\r\n          } else {\r\n            self.lineIndices[j] = self.lineIndices[k];\r\n            self.lineObjects[j * 2] = self.lineObjects[k * 2];\r\n            self.lineObjects[j * 2 + 1] = self.lineObjects[k * 2 + 1];\r\n            positions[j * 6] = positions[k * 6];\r\n            positions[j * 6 + 1] = positions[k * 6 + 1];\r\n            positions[j * 6 + 3] = positions[k * 6 + 3];\r\n            positions[j * 6 + 4] = positions[k * 6 + 4];\r\n            colors[j * 6] = colors[k * 6];\r\n            colors[j * 6 + 1] = colors[k * 6 + 1];\r\n            colors[j * 6 + 2] = colors[k * 6 + 2];\r\n            colors[j * 6 + 3] = colors[k * 6 + 3];\r\n            colors[j * 6 + 4] = colors[k * 6 + 4];\r\n            colors[j * 6 + 5] = colors[k * 6 + 5];\r\n          }\r\n        }\r\n        self.lineIndices.pop();\r\n        self.lineObjects.pop();\r\n        self.lineObjects.pop();\r\n        self.drawCount -= 2;\r\n        killed += 1;\r\n      }\r\n    }\r\n    console.log(\"Deleted \" + killed.toString() + \" edges\");\r\n  };\r\n\r\n  self.getNode = function(node_id) {\r\n    return self.graph.getNode(node_id);\r\n  };\r\n\r\n  self.addEdge = function(source, target, visible = true) {\r\n    self.graph.addLink(source.id, target.id);\r\n    self.drawEdge(self.getNode(source.id), self.getNode(target.id), visible);\r\n  };\r\n\r\n  self.addNeighbors = function(node, neighbors) {\r\n    for (var i = 0; i < neighbors.length; i++) {\r\n      var newNode = neighbors[i];\r\n      self.addNode(newNode);\r\n      self.addEdge(node.id, newNode.id);\r\n    }\r\n  };\r\n\r\n  self.addNeighbors2 = function(node) {\r\n    self.removeFakes();\r\n    self.neighborHost = node;\r\n    node.pinnedx = true;\r\n    node.pinnedy = true;\r\n    var id = node.id;\r\n    var points = [];\r\n    for (var i = 0; i < 5; i++) {\r\n      id += 10000;\r\n      var newNode = $.extend(true, {}, node);\r\n      newNode.id = id;\r\n      newNode.data.label = i;\r\n      newNode.fx = node.x;\r\n      newNode.fy = node.y;\r\n      newNode.data.shape = node.renderData.shape;\r\n      self.fakeNodes.push(self.addNode(newNode));\r\n      self.addEdge(self.graph.getNode(node.id), self.graph.getNode(newNode.id));\r\n    }\r\n    self.lastNode = self.graph.getNode(id);\r\n  };\r\n\r\n  self.removeFakes = function(node = null) {\r\n    if (self.fakeNodes.length >= 3) {\r\n      for (var i = 0; i < 5; i++) {\r\n        if (i != node) {\r\n          self.removeNode(self.fakeNodes[i]);\r\n        }\r\n        self.fakeNodes[i].pinnedx = false;\r\n        self.fakeNodes[i].pinnedy = false;\r\n      }\r\n      self.fakeNodes = [];\r\n    }\r\n    if (self.neighborHost) {\r\n      self.neighborHost.pinnedx = false;\r\n      self.neighborHost.pinnedy = false;\r\n      self.neighborHost = null;\r\n    }\r\n  };\r\n};\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\n\r\nmodule.exports = function(self) {\r\n  /**\r\n   *  Change color of node edges\r\n   */\r\n  self.highlightNode = function(node, toggle, color = def.NODE_HIGHLIGHT) {\r\n    if (toggle) {\r\n      node.renderData.draw_object.children[0].material.color.setHex(color);\r\n      node.renderData.draw_object.children[0].visible = true;\r\n    } else {\r\n      node.renderData.draw_object.children[0].material.color.set(\r\n        node.renderData.hcolor\r\n      );\r\n      node.renderData.draw_object.children[0].visible = false;\r\n    }\r\n  };\r\n\r\n  /**\r\n   *  Highlight edges from and to a node and hide others\r\n   */\r\n  self.highlightEdges = function(node, toggle) {\r\n    const froms = [];\r\n    const tos = [];\r\n    for (var i = 0; i < self.selection.length; i++) {\r\n      for (var j = 0; j < self.selection[i].links.length; j++) {\r\n        froms.push(self.selection[i].links[j].fromId);\r\n        tos.push(self.selection[i].links[j].toId);\r\n      }\r\n    }\r\n    if (toggle) {\r\n      for (var i = 0; i < node.links.length; i++) {\r\n        froms.push(node.links[i].fromId);\r\n        tos.push(node.links[i].toId);\r\n      }\r\n      self.highlightNeighbors(node, froms, tos);\r\n    } else {\r\n      self.highlightNeighbors(node, froms, tos);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Highlight adjacent nodes\r\n   * \r\n   * Also highlights edges.\r\n   */\r\n  self.highlightNeighbors = function(node, froms, tos) {\r\n    self.graph.forEachNode(n => {\r\n      if (self.selection.indexOf(n) != -1 || n == node) {\r\n        // If the node is selected or the node is the node to be highlighted\r\n        self.colorNodeOpacity(n, 1);\r\n        self.colorNodeEdge(n, 0.5, 0.5);\r\n        for (var i = 0; i < n.linkObjs.length; i++) {\r\n          n.linkObjs[i].linecolor = n.renderData.linecolor;\r\n        }\r\n      } else if (\r\n        self.doHighlightNeighbors &&\r\n        (froms.indexOf(n.id) != -1 || tos.indexOf(n.id) != -1)\r\n      ) {\r\n        // If the node is not selected or highlighted and\r\n        // if the node is present in either froms or tos arrays\r\n        self.colorNodeOpacity(n, 1);\r\n        self.colorNodeEdge(n, 0.3, 0.9);\r\n        if (n.renderData.draw_object.children[0]) {\r\n          self.highlightNode(n, true, def.ADJACENT_HIGHLIGHT);\r\n        }\r\n      } else if (\r\n        !self.prevHighlights ||\r\n        self.prevHighlights.indexOf(n.id) == -1\r\n      ) {\r\n        self.colorNodeOpacity(n, 0.5);\r\n        self.colorNodeEdge(n, 0.3, 0.9);\r\n        self.highlightNode(n, false, def.ADJACENT_HIGHLIGHT);\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   *  Change color of node edges\r\n   */\r\n  self.colorNodeEdge = function(node, dc, c) {\r\n    node.renderData.linecolor.r = self.darkMode ? dc : c;\r\n    node.renderData.linecolor.g = self.darkMode ? dc : c;\r\n    node.renderData.linecolor.b = self.darkMode ? dc : c;\r\n  };\r\n\r\n  /**\r\n   *  Change node opacity\r\n   */\r\n  self.colorNodeOpacity = function(node, op) {\r\n    node.renderData.draw_object.material.opacity = op;\r\n  };\r\n};\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\nvar $ = require(\"jquery\");\r\n\r\nmodule.exports = function(self) {\r\n  self.selectNode = function(node) {\r\n    self.dragging = node;\r\n    self.selection = [node];\r\n    node.renderData.isSelected = true;\r\n    self.updateSelection(self.mouseX, self.mouseY);\r\n  };\r\n\r\n  /**\r\n   * Deselect nodes in selection list\r\n   */\r\n  self.clearSelection = function() {\r\n    for (var i = 0; i < self.selection.length; i++) {\r\n      self.selection[i].renderData.isSelected = false;\r\n      if (!def.NODE_NO_HIGHLIGHT) {\r\n        self.selection[i].renderData.draw_object.children[0].visible = false;\r\n      } else {\r\n        self.selection[i].renderData.draw_object.material.color.set(\r\n          new THREE.Color(self.selection[i].renderData.color)\r\n        );\r\n      }\r\n      self.selection[i].renderData.textHolder.children[0].element.hideme = true;\r\n    }\r\n    self.selection = [];\r\n  };\r\n\r\n  /**\r\n   *  Update positions of all objects in self.selection\r\n   *  based on diff between mouse position and self.dragging position\r\n   */\r\n  self.updateSelection = function(mouseX, mouseY) {\r\n    if (self.dragging) {\r\n      var diffx = mouseX - self.dragging.x;\r\n      var diffy = mouseY - self.dragging.y;\r\n    }\r\n    for (var i = 0; i < self.selection.length; i++) {\r\n      if (self.dragging) {\r\n        self.selection[i].x += diffx;\r\n        self.selection[i].y += diffy;\r\n        self.selection[i].fx = self.selection[i].x;\r\n        self.selection[i].fy = self.selection[i].y;\r\n        self.selection[i].pinnedx = true;\r\n        self.selection[i].pinnedy = true;\r\n      }\r\n      if (!def.NODE_NO_HIGHLIGHT) {\r\n        self.selection[i].renderData.draw_object.children[0].visible = true;\r\n      } else {\r\n        self.selection[i].renderData.draw_object.material.color.set(\r\n          new THREE.Color(self.selection[i].renderData.hcolor)\r\n        );\r\n      }\r\n      self.selection[\r\n        i\r\n      ].renderData.textHolder.children[0].element.hideme = false;\r\n    }\r\n  };\r\n\r\n  /**\r\n   *  Find any objects within the current box selection and add it to self.selection\r\n   */\r\n  self.checkSelection = function(mouseX, mouseY) {\r\n    if (!self.dragging) {\r\n      self.mouseEnd = new THREE.Vector3(mouseX, mouseY, 0);\r\n      if (self.mouseStart.x < self.mouseEnd.x) {\r\n        var left = self.mouseStart;\r\n        var right = self.mouseEnd;\r\n      } else {\r\n        var left = self.mouseEnd;\r\n        var right = self.mouseStart;\r\n      }\r\n\r\n      self.graph.forEachNode(function(node) {\r\n        let npos;\r\n        if (self.options.layout == \"ngraph\") {\r\n          npos = self.force.getNodePosition(node.id);\r\n        } else if (self.options.layout == \"d3\") {\r\n          npos = node;\r\n        }\r\n        if (self.insideBox(left, right, npos.x, npos.y)) {\r\n          self.selection.push(node);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   *  returns true if pos is in box with top left l and bottom right r\r\n   */\r\n  self.insideBox = function(l, r, posx, posy) {\r\n    return (\r\n      posx < r.x &&\r\n      posx > l.x &&\r\n      ((posy > r.y && posy < l.y) || (posy < r.y && posy > l.y))\r\n    );\r\n  };\r\n};\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\nvar $ = require(\"jquery\");\r\n\r\nmodule.exports = function(self) {\r\n  /**\r\n   * Mouse move event that selections nodes in selection box\r\n   */\r\n  self.onMouseMove = function(selection, mouseX, mouseY, button, ctrl) {\r\n    // check if left button is not down\r\n    self.mouseX = mouseX;\r\n    self.mouseY = mouseY;\r\n\r\n    if (self.leftMouseDown && self.mouseDown) {\r\n      // left-clicked empty space (i.e., not clicking a node)\r\n      if (!self.dragging && self.selection.indexOf(selection) == -1 && !ctrl) {\r\n        self.clearSelection();\r\n      }\r\n\r\n      if (!self.dragging) {\r\n        // add nodes enclosed by selection box into node selection\r\n        self.checkSelection(mouseX, mouseY);\r\n      }\r\n    }\r\n\r\n    if (self.selection.length > 0) {\r\n      // reactivate (in D3's terminology: reheat) the force layout\r\n      if (self.dragging) {\r\n        self.force.alpha(1);\r\n      }\r\n      // update position of nodes in selection\r\n      self.updateSelection(mouseX, mouseY);\r\n    }\r\n\r\n    if (!self.mouseDown) {\r\n      self.onHover(selection);\r\n      self.mouseStart = new THREE.Vector3(mouseX, mouseY, 0);\r\n    } else {\r\n      // if mouse is in minimap, do nothing else\r\n      if (self.isMouseCoordinatesOnMinimap) {\r\n        self.minimap.panToMousePosition(\r\n          self.minimap.mouseX,\r\n          self.minimap.mouseY\r\n        );\r\n        return;\r\n      }\r\n\r\n      // update selection box size/position\r\n      if (self.leftMouseDown && !self.dragging) {\r\n        if (self.showBox) {\r\n          self.selectBox.visible = true;\r\n          self.showBox = false;\r\n        }\r\n        self.selectBox.position.x = mouseX;\r\n        self.selectBox.position.y = mouseY;\r\n        var diffx = self.mouseStart.x - mouseX;\r\n        var diffy = self.mouseStart.y - mouseY;\r\n        self.selectBox.scale.set(diffx, diffy, 1);\r\n      } else {\r\n        self.selectBox.visible = false;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Mouse hover over node event that highlights the node and neighbors at mouse position\r\n   */\r\n  self.onHover = function(node) {\r\n    if (self.lastHover && self.selection.indexOf(self.lastHover) == -1) {\r\n      self.highlightNode(self.lastHover, false);\r\n      self.lastHover.renderData.textHolder.children[0].element.hideme = true;\r\n      self.highlightEdges(node, false);\r\n    }\r\n    self.lastHover = node;\r\n    if (node) {\r\n      self.highlightNode(node, true);\r\n      node.renderData.textHolder.children[0].element.hideme = false;\r\n      self.highlightEdges(node, true);\r\n    } else if (self.selection.length == 0) {\r\n      self.graph.forEachNode(n => {\r\n        self.colorNodeOpacity(n, 1);\r\n        self.colorNodeEdge(n, 0.5, 0.5);\r\n        self.highlightNode(n, false, def.ADJACENT_HIGHLIGHT);\r\n      });\r\n    }\r\n    if (self.prevHighlights != undefined) {\r\n      for (var i = 0; i < self.prevHighlights.length; i++) {\r\n        self.colorNodeOpacity(self.prevHighlights[i], 1);\r\n        self.highlightNode(self.prevHighlights[i], true, def.SEARCH_HIGHLIGHT);\r\n      }\r\n    }\r\n  };\r\n\r\n  // vars to get time at mouse press and time at mouse release\r\n  var startTime = 0;\r\n  var endTime = 0;\r\n  /**\r\n   * Mouse down event to start a selection box or start dragging a node\r\n   */\r\n  self.onMouseDown = function(selection, mouseX, mouseY, button, ctrl) {\r\n    // if mouse is in minimap, do nothing else\r\n    if (self.isMouseCoordinatesOnMinimap) {\r\n      self.mouseDown = true;\r\n      self.minimap.panToMousePosition(self.minimap.mouseX, self.minimap.mouseY);\r\n      return;\r\n    }\r\n    startTime = Date.now();\r\n    self.leftMouseDown = button == 0;\r\n    // left or right mouse button\r\n    if (button == 0 || button == 2) {\r\n      self.mouseDown = true;\r\n      self.mouseStart = new THREE.Vector3(mouseX, mouseY, 0);\r\n      if (button == 0 && !self.dragging) {\r\n        self.showBox = true;\r\n      }\r\n      if (self.selection.indexOf(selection) == -1 && !ctrl) {\r\n        for (var i = 0; i < self.selection.length; i++) {\r\n          self.selection[i].renderData.isSelected = false;\r\n          if (!def.NODE_NO_HIGHLIGHT) {\r\n            self.selection[\r\n              i\r\n            ].renderData.draw_object.children[0].visible = false;\r\n          } else {\r\n            self.selection[i].renderData.draw_object.material.color.set(\r\n              new THREE.Color(self.selection[i].renderData.color)\r\n            );\r\n          }\r\n          self.selection[\r\n            i\r\n          ].renderData.textHolder.children[0].element.hideme = true;\r\n        }\r\n        self.selection = [];\r\n      }\r\n      if (selection) {\r\n        self.dragging = selection;\r\n        if (!selection.renderData.isSelected) {\r\n          if (self.selection.indexOf(selection) == -1) {\r\n            self.selection.push(selection);\r\n          }\r\n          selection.renderData.isSelected = true;\r\n          self.updateSelection(mouseX, mouseY);\r\n        } else if (ctrl) {\r\n          self.selection.splice(self.selection.indexOf(selection), 1);\r\n          selection.renderData.isSelected = false;\r\n          if (!def.NODE_NO_HIGHLIGHT) {\r\n            selection.renderData.draw_object.children[0].visible = false;\r\n          } else {\r\n            selection.renderData.draw_object.material.color.set(\r\n              new THREE.Color(self.selection[i].renderData.color)\r\n            );\r\n          }\r\n          selection.renderData.textHolder.children[0].element.hideme = true;\r\n          self.dragging = null;\r\n        }\r\n      } else {\r\n        if (self.newNodeIds) {\r\n          self.highlightNodeIds([], true);\r\n          self.newNodeIds = undefined;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Mouse up event that closes selection flags and emits selection to Argo\r\n   */\r\n  self.onMouseUp = function(selection, mouseX, mouseY, button) {\r\n    endTime = Date.now();\r\n    self.mouseDown = false;\r\n    // Left or right mouse button\r\n    if (button == 0 || button == 2) {\r\n      self.showBox = false;\r\n      self.dragging = null;\r\n      self.selectBox.visible = false;\r\n\r\n      self.ee.emit(\"select-nodes\", self.selection);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Right click event to save right clicked node\r\n   */\r\n  self.onRightClick = function(selection) {\r\n    if (selection) {\r\n      self.rightClickedNode = selection;\r\n    }\r\n    if (self.neighborHost) {\r\n      var n = self.fakeNodes.indexOf(selection);\r\n      if (n != -1) {\r\n        self.removeFakes(n);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Right click event that emits context menu event to Argo\r\n   */\r\n  self.onRightClickCoords = function(event) {\r\n    // Don't show menu if dragging camera\r\n    if (endTime - startTime < 200) {\r\n      self.ee.emit(\"right-click\", {\r\n        pageX: event.pageX,\r\n        pageY: event.pageY\r\n      });\r\n    }\r\n  };\r\n};\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\n\r\nmodule.exports = function(self) {\r\n  /**\r\n   * Set all nodes to a size\r\n   */\r\n  self.setUniformNodeSize = function(s) {\r\n    self.graph.forEachNode(function(node) {\r\n      node.renderData.draw_object.scale.set(s, s, 1);\r\n      var hsize = 1 + def.HIGHLIGHT_SIZE / s;\r\n      node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Set all nodes to a size based on a value in the node's data\r\n   */\r\n  self.setNodeDataSize = function(dataValue) {\r\n    self.graph.forEachNode(function(node) {\r\n      dataVal = node.renderData[dataValue];\r\n      if (!dataVal) {\r\n        console.log(\"Data value does not exist\");\r\n      } else {\r\n        dataVal = Math.log(dataVal + 1);\r\n        node.renderData.draw_object.scale.set(dataVal, dataVal, 1);\r\n        var hsize = 1 + def.HIGHLIGHT_SIZE / dataVal;\r\n        node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Set all nodes to a color\r\n   */\r\n  self.setUniformNodeColor = function(hsvDegree) {\r\n    self.graph.forEachNode(function(node) {\r\n      node.renderData.draw_object.material.color.set(\r\n        new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 43%)\")\r\n      );\r\n      if (!def.NODE_NO_HIGHLIGHT) {\r\n        node.renderData.draw_object.children[0].material.color.set(\r\n          new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 63%)\")\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Set all nodes to a color based on a value in the node's data\r\n   */\r\n  self.setNodeDataColor = function(dataValue) {\r\n    var i = 0;\r\n    values = [];\r\n    min = null;\r\n    max = null;\r\n\r\n    self.graph.forEachNode(function(node) {\r\n      if ((dataVal = node.renderData[dataValue])) {\r\n        if (min == null) min = dataVal;\r\n        if (max == null) max = dataVal;\r\n        if (dataVal < min) min = dataVal;\r\n        else if (dataVal > max) max = dataVal;\r\n        values[i] = dataVal;\r\n        i += 1;\r\n      } else {\r\n        values[i] = -1;\r\n      }\r\n    });\r\n\r\n    i = 0;\r\n    self.graph.forEachNode(function(node) {\r\n      var hsvDegree;\r\n      if (values[i] == -1) {\r\n        hsvDegree = 0;\r\n      } else {\r\n        values[i] = (values[i] - min) / (max - min);\r\n        hsvDegree = values[i] * 120;\r\n      }\r\n      node.renderData.draw_object.material.color.set(\r\n        new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 48%)\")\r\n      );\r\n      if (!def.NODE_NO_HIGHLIGHT) {\r\n        node.renderData.draw_object.children[0].material.color.set(\r\n          new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 63%)\")\r\n        );\r\n      }\r\n      i++;\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Map a node attribute based on some mapping function\r\n   */\r\n  self.mapNodeAttributes = function(mapping, nodes = null) {\r\n    let val;\r\n    if (mapping[0] == \"degree\") {\r\n      val = node => (node.links ? node.links.length + 2 : 2);\r\n    } else if (mapping[0] == \"scalex\") {\r\n      val = node => node.renderData.draw_object.scale.x;\r\n    } else {\r\n      val = node => mapping[0];\r\n    }\r\n\r\n    let mod;\r\n    if (mapping[1] == \"volume\") {\r\n      mod = val => self.volToRadius(val);\r\n    } else if (mapping[1] == \"mult\") {\r\n      mod = val => val * mapping[3](val);\r\n    } else if (mapping[1] == \"add\") {\r\n      mod = val => val + mapping[3](val);\r\n    } else if (mapping[1] == \"log\") {\r\n      mod = val => Math.log(val);\r\n    } else {\r\n      mod = val => val;\r\n    }\r\n\r\n    let attr;\r\n    if (mapping[2] == \"scalexy\") {\r\n      attr = (node, val) => {\r\n        node.renderData.draw_object.scale.set(val, val, 1);\r\n        var hsize = 1 + def.HIGHLIGHT_SIZE / val;\r\n        node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\r\n      };\r\n    } else if (mapping[2] == \"edgeColorRed\") {\r\n      attr = (node, val) => {\r\n        node.renderData.linecolor.r = 1;\r\n        node.renderData.linecolor.b = 1 - val / 5;\r\n        node.renderData.linecolor.g = 1 - val / 5;\r\n      };\r\n    } else if (mapping[2] == \"edgeColorBlue\") {\r\n      attr = (node, val) => {\r\n        node.renderData.linecolor.b = 1;\r\n        node.renderData.linecolor.r = 1 - val / 5;\r\n        node.renderData.linecolor.g = 1 - val / 5;\r\n      };\r\n    } else if (mapping[2] == \"edgeColorGreen\") {\r\n      attr = (node, val) => {\r\n        node.renderData.linecolor.g = 1;\r\n        node.renderData.linecolor.b = 1 - val / 5;\r\n        node.renderData.linecolor.r = 1 - val / 5;\r\n      };\r\n    } else if (mapping[2] == \"nodeColorBlue\") {\r\n      attr = (node, val) => {\r\n        node.renderData.draw_object.material.color.b = 1;\r\n        node.renderData.draw_object.material.color.r = 1 - val / 5;\r\n        node.renderData.draw_object.material.color.g = 1 - val / 5;\r\n      };\r\n    } else if (mapping[2] == \"pinned\") {\r\n      attr = (node, val) => {\r\n        node.pinnedx = val;\r\n        node.pinnedy = val;\r\n      };\r\n    } else if (mapping[2] == \"labelSize\") {\r\n      attr = (node, val) => {\r\n        self.changeLabelFontSize(node, val);\r\n      };\r\n    } else if (mapping[2] == \"labelLength\") {\r\n      attr = (node, val) => {\r\n        self.changeLabelLength(node, val);\r\n      };\r\n    }\r\n\r\n    self.changeNodes(val, mod, attr, nodes);\r\n  };\r\n\r\n  /**\r\n   *  get attribute from node using function val\r\n   *  modify result with function mode\r\n   *  set node attribute with attr\r\n   */\r\n  self.changeNode = function(val, mod, attr, node) {\r\n    var v = val(node);\r\n    if (v != undefined) {\r\n      var r = mod(v);\r\n      if (r != undefined) {\r\n        attr(node, r);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   *  perform changeNode on many nodes\r\n   */\r\n  self.changeNodes = function(val, mod, attr, nodes = null) {\r\n    if (nodes == null) {\r\n      self.graph.forEachNode(function(node) {\r\n        self.changeNode(val, mod, attr, node);\r\n      });\r\n    } else {\r\n      for (var i = 0; i < nodes.length; i++) {\r\n        self.changeNode(val, mod, attr, nodes[i]);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Limit label size by (estimated) characters\r\n   * This is only accurate if the label is monospaced\r\n   */\r\n  self.changeLabelLength = function(node, numChars) {\r\n    node.renderData.textHolder.children[0].element.children[0].style.width =\r\n      numChars.toString() + \"ch\";\r\n  };\r\n\r\n  /**\r\n   * Limit label size by (estimated) characters\r\n   * This is only accurate if the label is monospaced\r\n   */\r\n  self.changeLabelFontSize = function(node, size, relativeSize = 1) {\r\n    size = size * relativeSize;\r\n    node.renderData.textHolder.children[0].element.children[0].style.fontSize =\r\n      size.toString() + \"rem\";\r\n  };\r\n\r\n  /**\r\n   * Change boundary size\r\n   */\r\n  self.setBoundarySize = function(size) {\r\n    self.renderWidth = size;\r\n    self.renderHeight = size;\r\n    self.boundaries.scale.set(size * 2, size * 2, 1);\r\n    self.boundaries.position.x = -size;\r\n    self.boundaries.position.y = -size;\r\n    self.controls.maxDistance = size * 2;\r\n    self.minimap.camera.position.z = self.renderWidth * 2;\r\n  };\r\n\r\n  /**\r\n   * Change viewport size\r\n   */\r\n  self.setViewPortSize = function(camera) {\r\n    var distance = self.ccamera.position.z;\r\n    var height =\r\n      Math.tan(((camera.fov * Math.PI) / 180) * 0.5) * distance * 2 + 5;\r\n    var width = height * camera.aspect + 5;\r\n    self.viewPort.scale.set(width, height, 1);\r\n    self.viewPort.position.x = camera.position.x - width / 2;\r\n    self.viewPort.position.y = camera.position.y - height / 2;\r\n  };\r\n};\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\n\r\nmodule.exports = function(self) {\r\n  /**\r\n   *  Create highlight mesh\r\n   */\r\n  self.createHighlightMesh = function(node, texture) {\r\n    var shape =\r\n      node.renderData.hshape || node.renderData.shape || def.NODE_HSHAPE;\r\n    if (shape == \"square\") {\r\n      var hgeometry = self.make2x2Rect();\r\n    } else {\r\n      var hgeometry = new THREE.CircleGeometry(1, 32);\r\n    }\r\n\r\n    return self.createHighlightDrawObject(hgeometry, node, texture);\r\n  };\r\n\r\n  /**\r\n   * Sets the material, color, visibility, and size of the highlight drawing for a node.\r\n   */\r\n  self.createHighlightDrawObject = function(hgeometry, node, texture) {\r\n    var size = self.getNodeSize(node);\r\n    var hsize = def.HIGHLIGHT_SIZE;\r\n\r\n    texture = def.NODE_NO_HTEX ? null : texture;\r\n    var color = def.NODE_NO_HCOLOR\r\n      ? null\r\n      : parseInt(node.renderData.hcolor || def.NODE_HIGHLIGHT);\r\n    var hmaterial = new THREE.MeshBasicMaterial({ color: color, map: texture });\r\n    hmaterial.transparent = true;\r\n    var highlight = new THREE.Mesh(hgeometry, hmaterial);\r\n    highlight.visible = true;\r\n    highlight.scale.set(1 + hsize / size, 1 + hsize / size, 1);\r\n    highlight.position.z = -0.01;\r\n    return highlight;\r\n  };\r\n\r\n  /**\r\n   *  Create node mesh\r\n   */\r\n  self.createNodeMesh = function(node, texture) {\r\n    var shape = node.renderData.shape || def.NODE_SHAPE;\r\n    if (shape == \"square\") {\r\n      var geometry = self.make2x2Rect();\r\n    } else {\r\n      var geometry = new THREE.CircleGeometry(1, 32);\r\n    }\r\n    return self.createNodeDrawObject(geometry, node, texture);\r\n  };\r\n\r\n  /**\r\n   * Create mesh to visual show pinning\r\n   */\r\n  self.createPinMesh = function(size) {\r\n    var geometry = self.make2x2Rect();\r\n    var color = new THREE.Color(def.PIN_COLOR);\r\n    var material = new THREE.MeshBasicMaterial({ color: color });\r\n    var pinMesh = new THREE.Mesh(geometry, material);\r\n    pinMesh.scale.set(0.1, 0.1, 1);\r\n    pinMesh.position.z = 0.01;\r\n    pinMesh.visible = false;\r\n    return pinMesh;\r\n  };\r\n\r\n  /**\r\n   * Create the drawing information for a node\r\n   */\r\n  self.createNodeDrawObject = function(geometry, node, texture) {\r\n    var size = self.getNodeSize(node);\r\n\r\n    texture = def.NODE_NO_TEX ? null : texture;\r\n    var color = def.NODE_NO_COLOR\r\n      ? null\r\n      : new THREE.Color(node.renderData.color || def.NODE_COLOR);\r\n    var material = new THREE.MeshBasicMaterial({ color: color, map: texture });\r\n    material.transparent = true;\r\n    var draw_object = new THREE.Mesh(geometry, material);\r\n    draw_object.scale.set(size, size, 1);\r\n    return draw_object;\r\n  };\r\n\r\n  /**\r\n   * Get the size of a node if it exists, otherwise get it from the render data.\r\n   */\r\n  self.getNodeSize = function(node) {\r\n    var size;\r\n    if (node.renderData.size != undefined) size = node.renderData.size;\r\n    else size = node.renderData[\"size\"];\r\n    return size;\r\n  };\r\n\r\n  self.createNodeLabel = function(node) {\r\n    var material = new THREE.MeshBasicMaterial({\r\n      color: 0x000000,\r\n      wireframe: true,\r\n      wireframeLinewidth: 1,\r\n      side: THREE.DoubleSide\r\n    });\r\n    var geometry = new THREE.PlaneGeometry(1000, 200);\r\n    var textMesh = self.createAndSetupLabelTextMesh(geometry, material);\r\n    var label = self.createAndSetupLabelDiv(node, textMesh);\r\n    var textHolder = self.createAndSetupTextHolder(label, textMesh);\r\n    node.renderData.textHolder = textHolder;\r\n    self.scene.add(textHolder);\r\n  };\r\n\r\n  self.createAndSetupLabelTextMesh = function(geometry, material) {\r\n    var textMesh = new THREE.Mesh(geometry, material);\r\n    textMesh.scale.set(def.TEXT_SIZE, def.TEXT_SIZE, 1);\r\n    var bbox = new THREE.Box3().setFromObject(textMesh);\r\n    textMesh.position.x += (bbox.max.x - bbox.min.x) * def.TEXT_X_OFFSET;\r\n    textMesh.position.y -= (bbox.max.y - bbox.min.y) * def.TEXT_Y_OFFSET;\r\n    textMesh.visible = def.TEXT_WIREFRAME;\r\n    return textMesh;\r\n  };\r\n\r\n  self.createAndSetupLabelDiv = function(node, textMesh) {\r\n    var label = self.createLabelDiv(node);\r\n    label.element.hidden = true;\r\n    label.position.copy(textMesh.position);\r\n    label.scale.copy(textMesh.scale);\r\n    return label;\r\n  };\r\n\r\n  self.createAndSetupTextHolder = function(label, textMesh) {\r\n    var textHolder = new THREE.Object3D();\r\n    textHolder.add(label);\r\n    textHolder.add(textMesh);\r\n    return textHolder;\r\n  };\r\n\r\n  /**\r\n   *  Create label div\r\n   */\r\n  self.createLabelDiv = function(node) {\r\n    // Create canvas to draw text label onto sprite image\r\n    var element = self.createLabelDivElement();\r\n    var content = document.createTextNode(node.renderData.label);\r\n    var textElement = self.createLabelTextElement();\r\n    textElement.appendChild(content);\r\n    element.appendChild(textElement);\r\n    var labelObj = new THREE.CSS3DObject(element);\r\n    return labelObj;\r\n  };\r\n\r\n  /**\r\n   * Creates the Label Div Element for a node's label\r\n   */\r\n  self.createLabelDivElement = function() {\r\n    var element = document.createElement(\"div\");\r\n    element.style.width = \"1000px\";\r\n    element.style.height = \"200px\";\r\n    element.style.backgroundColor = def.TEXT_BACK_COLOR;\r\n    element.style.opacity = def.TEXT_OPACITY;\r\n    return element;\r\n  };\r\n\r\n  /**\r\n   * Creates the text element to add to the label div for a node.\r\n   */\r\n  self.createLabelTextElement = function() {\r\n    var textElement = document.createElement(\"div\");\r\n    textElement.style.width = \"1000px\";\r\n    textElement.style.height = \"2ch\";\r\n    textElement.style.fontSize = \"96px\";\r\n    textElement.style.textOverflow = \"ellipsis\";\r\n    textElement.style.overflow = \"hidden\";\r\n    textElement.style.userSelect = \"all\";\r\n    textElement.style.whiteSpace = \"nowrap\";\r\n    //textElement.setAttribute('contenteditable', 'true');\r\n    return textElement;\r\n  };\r\n\r\n  /**\r\n   * Instantiates, sets highlight for, and sets position for the actual THREE\r\n   * drawing of a node\r\n   */\r\n  self.setupNodeDrawObject = function(node, htexture, texture) {\r\n    var draw_object = self.createNodeMesh(node, texture);\r\n\r\n    // Create highlight\r\n    if (!def.NODE_NO_HIGHLIGHT) {\r\n      var highlight = self.createHighlightMesh(node, htexture);\r\n      draw_object.add(highlight);\r\n    }\r\n\r\n    var pinMesh = self.createPinMesh();\r\n    draw_object.add(pinMesh);\r\n\r\n    draw_object.position.x = node.renderData.x;\r\n    draw_object.position.y = node.renderData.y;\r\n    draw_object.index = node.id;\r\n    draw_object.name = node.id;\r\n    node.renderData.draw_object = draw_object;\r\n\r\n    return draw_object;\r\n  };\r\n\r\n  /**\r\n   *  Create a node object and add it to the scene.\r\n   */\r\n  self.drawNode = function(node) {\r\n    function onHTextureLoad(node, htexture) {\r\n      // Load node texture\r\n      self.textureLoader.load(\r\n        node.renderData.image || def.NODE_TEXTURE,\r\n        onTextureLoad.bind(null, node, htexture)\r\n      );\r\n    }\r\n\r\n    function onTextureLoad(node, htexture, texture) {\r\n      // Create mesh for node\r\n      var draw_object = self.setupNodeDrawObject(node, htexture, texture);\r\n\r\n      // Create div for label\r\n      self.createNodeLabel(node);\r\n\r\n      self.nodeCount += 1;\r\n      self.nodes.add(draw_object);\r\n    }\r\n\r\n    if (def.NODE_NO_HTEX && def.NODE_NO_TEX) {\r\n      onTextureLoad(node, null, null);\r\n    } else {\r\n      // Load highlight texture\r\n      self.textureLoader.load(\r\n        node.renderData.himage || def.NODE_HTEXTURE,\r\n        onHTextureLoad.bind(null, node)\r\n      );\r\n    }\r\n  };\r\n\r\n  /**\r\n   *  Create an edge and add it to the lineSegments.\r\n   */\r\n  self.drawEdge = function(source, target, visible = true) {\r\n    if (\r\n      source.renderData.draw_object === undefined ||\r\n      target.renderData.draw_object === undefined\r\n    ) {\r\n      setTimeout(self.drawEdge.bind(null, source, target), 50);\r\n      return;\r\n    }\r\n    var index = self.drawCount * 3;\r\n    self.lineObjects[index / 3] = source;\r\n    self.lineObjects[index / 3 + 1] = target;\r\n    if (!source.linkObjs) {\r\n      source.linkObjs = [];\r\n    }\r\n    if (!target.linkObjs) {\r\n      target.linkObjs = [];\r\n    }\r\n    self.lineIndices.push({\r\n      source: source,\r\n      target: target,\r\n      hide: !visible,\r\n      linecolor: source.renderData.linecolor\r\n    });\r\n    source.linkObjs.push(self.lineIndices[index / 6]);\r\n    target.linkObjs.push(self.lineIndices[index / 6]);\r\n    self.updateColorsAndPositions(source, target, index);\r\n    self.drawCount += 2;\r\n  };\r\n\r\n  /**\r\n   * Update the colors and positions of the edges between source and target\r\n   */\r\n  self.updateColorsAndPositions = function(source, target, index) {\r\n    var positions = self.edges.attributes.position.array;\r\n    var colors = self.edges.attributes.color.array;\r\n\r\n    var v1pos = source.renderData.draw_object.position;\r\n    var v2pos = target.renderData.draw_object.position;\r\n    var v1color = self.lineIndices[index / 6].linecolor;\r\n    var v2color = self.lineIndices[index / 6].linecolor;\r\n    colors[index] = v1color.b;\r\n    positions[index++] = v1pos.x;\r\n    colors[index] = v1color.g;\r\n    positions[index++] = v1pos.y;\r\n    colors[index] = v1color.r;\r\n    positions[index++] = v1pos.z - 0.02;\r\n    colors[index] = v2color.b;\r\n    positions[index++] = v2pos.x;\r\n    colors[index] = v2color.g;\r\n    positions[index++] = v2pos.y;\r\n    colors[index] = v2color.r;\r\n    positions[index++] = v2pos.z - 0.02;\r\n  };\r\n};\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\n\r\n/**\r\n * These functions are endpoints revealed to Argo frontend\r\n */\r\nmodule.exports = function(self) {\r\n  /**\r\n   * Set frame.mouseMode to the specified mode\r\n   * @param {string} mode name of the mode, currently supports ['select', 'move']\r\n   */\r\n  self.setMouseMode = mode => {\r\n    if (mode === \"select\") {\r\n      // This is the default mode, where users can select one or multiple nodes\r\n      self.mouseMode = \"select\";\r\n      self.isMouseModeMove = false;\r\n    } else if (mode === \"move\") {\r\n      // move mode, where user can drag the screen to achieve panning\r\n      self.mouseMode = \"move\";\r\n      self.isMouseModeMove = true;\r\n    }\r\n  };\r\n\r\n  self.pauseLayout = () => {\r\n    self.paused = true;\r\n  };\r\n  window.pause = self.pauseLayout;\r\n\r\n  self.resumeLayout = () => {\r\n    self.paused = false;\r\n  };\r\n\r\n  self.mapSelectedNodes = () => {\r\n    self.mapNodeAttributes([\"degree\", \"log\", \"scalexy\"], self.selection);\r\n  };\r\n\r\n  self.mapAllNodes = () => {\r\n    self.mapNodeAttributes([\"degree\", \"log\", \"scalexy\"]);\r\n  };\r\n\r\n  self.pinSelectedNodes = () => {\r\n    self.mapNodeAttributes([true, \"\", \"pinned\"], self.selection);\r\n  };\r\n\r\n  self.unpinSelectedNodes = () => {\r\n    self.mapNodeAttributes([false, \"\", \"pinned\"], self.selection);\r\n  };\r\n\r\n  self.setLabelFontSize = size => {\r\n    self.graph.forEachNode(function(node) {\r\n      self.changeLabelFontSize(node, size, self.relativeFontSize);\r\n    });\r\n  };\r\n\r\n  self.setLabelRelativeSize = size => {\r\n    self.relativeFontSize = size;\r\n    self.setLabelFontSize(self.labelSize);\r\n  };\r\n\r\n  self.setLabelLength = numChars => {\r\n    self.graph.forEachNode(function(node) {\r\n      self.changeLabelLength(node, numChars);\r\n    });\r\n  };\r\n\r\n  self.toggleMap = () => {\r\n    self.mapShowing = !self.mapShowing;\r\n  };\r\n\r\n  // Emits id of every node with label being displayed at this moment.\r\n  self.updateNodesShowingLabels = () => {\r\n    var nodes = [];\r\n    self.graph.forEachNode(n => {\r\n      var node = self.graph.getNode(n.id);\r\n      if (node.renderData.textHolder.children[0].element.override) {\r\n        nodes.push(n.id);\r\n      }\r\n    });\r\n    self.ee.emit(\"show-node-label\", nodes);\r\n  };\r\n\r\n  self.toggleSelectedLabels = () => {\r\n    self.toggleLabels(self.selection.map(n => n.id));\r\n  };\r\n\r\n  self.showSelectedLabels = () => {\r\n    self.showLabels(self.selection.map(n => n.id));\r\n  };\r\n\r\n  self.hideSelectedLabels = () => {\r\n    self.hideLabels(self.selection.map(n => n.id));\r\n  };\r\n\r\n  self.toggleLabels = nodeids => {\r\n    self.graph.forEachNode(n => {\r\n      if (nodeids.includes(n.id)) {\r\n        var node = self.graph.getNode(n.id);\r\n        if (\r\n          node.renderData.textHolder.children[0].element.override == undefined\r\n        ) {\r\n          node.renderData.textHolder.children[0].element.override = false;\r\n        }\r\n        node.renderData.textHolder.children[0].element.override = !node\r\n          .renderData.textHolder.children[0].element.override;\r\n      }\r\n    });\r\n    self.updateNodesShowingLabels();\r\n  };\r\n\r\n  self.showLabels = nodeids => {\r\n    self.graph.forEachNode(n => {\r\n      if (nodeids.includes(n.id)) {\r\n        var node = self.graph.getNode(n.id);\r\n        node.renderData.textHolder.children[0].element.override = true;\r\n      }\r\n    });\r\n    self.updateNodesShowingLabels();\r\n  };\r\n\r\n  self.hideLabels = nodeids => {\r\n    self.graph.forEachNode(n => {\r\n      if (nodeids.includes(n.id)) {\r\n        var node = self.graph.getNode(n.id);\r\n        node.renderData.textHolder.children[0].element.override = false;\r\n      }\r\n    });\r\n    self.updateNodesShowingLabels();\r\n  };\r\n\r\n  self.hideAllLabels = () => {\r\n    self.graph.forEachNode(function(node) {\r\n      var node = self.graph.getNode(node.id);\r\n      node.renderData.textHolder.children[0].element.override = false;\r\n    });\r\n    self.updateNodesShowingLabels();\r\n  };\r\n\r\n  self.showAllLabels = () => {\r\n    self.graph.forEachNode(function(node) {\r\n      var node = self.graph.getNode(node.id);\r\n      node.renderData.textHolder.children[0].element.override = true;\r\n    });\r\n    self.updateNodesShowingLabels();\r\n  };\r\n\r\n  self.setCanvasSize = function(size) {\r\n    self.setBoundarySize(size);\r\n  };\r\n\r\n  self.setAllNodesShape = function(shape) {\r\n    if (self.selection.length == 0) {\r\n      self.graph.forEachNode(function(node) {\r\n        self.setNodeShape(self.graph.getNode(node.id), shape);\r\n      });\r\n    } else {\r\n      self.selection.forEach(function(node) {\r\n        self.setNodeShape(self.graph.getNode(node.id), shape);\r\n      });\r\n    }\r\n  };\r\n\r\n  self.setNodeShape = function(node, shape) {\r\n    if (shape == \"square\") {\r\n      node.renderData.shape = shape;\r\n      node.renderData.draw_object.geometry = self.make2x2Rect();\r\n      node.renderData.draw_object.children[0].geometry = self.make2x2Rect();\r\n    } else if (shape == \"circle\") {\r\n      node.renderData.shape = shape;\r\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 32);\r\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\r\n        1,\r\n        32\r\n      );\r\n    } else if (shape == \"triangle\") {\r\n      node.renderData.shape = shape;\r\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 3);\r\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\r\n        1,\r\n        3\r\n      );\r\n    } else if (shape == \"pentagon\") {\r\n      node.renderData.shape = shape;\r\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 5);\r\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\r\n        1,\r\n        5\r\n      );\r\n    } else if (shape == \"hexagon\") {\r\n      node.renderData.shape = shape;\r\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 6);\r\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\r\n        1,\r\n        6\r\n      );\r\n    } else if (shape == \"octagon\") {\r\n      node.renderData.shape = shape;\r\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 8);\r\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\r\n        1,\r\n        8\r\n      );\r\n    }\r\n  };\r\n\r\n  self.getNumSelected = function() {\r\n    if (self.selection.length == self.graph.getNodesCount()) {\r\n      return 0;\r\n    }\r\n    return self.selection.length;\r\n  };\r\n\r\n  self.toggleDark = function() {\r\n    self.darkMode = !self.darkMode;\r\n  };\r\n\r\n  self.getGraph = function() {\r\n    return self.graph;\r\n  };\r\n\r\n  self.getNodeList = function() {\r\n    var nodes = [];\r\n    self.graph.forEachNode(function(node) {\r\n      nodes.push(node);\r\n    });\r\n    return nodes;\r\n  };\r\n\r\n  self.getPositions = function() {\r\n    var poses = {};\r\n    self.graph.forEachNode(function(node) {\r\n      poses[node.id] = [node.x, node.y];\r\n    });\r\n    return poses;\r\n  };\r\n\r\n  self.getPinPositions = function() {\r\n    var poses = {};\r\n    self.graph.forEachNode(function(node) {\r\n      poses[node.id] = [node.fx, node.fy];\r\n    });\r\n    return poses;\r\n  };\r\n\r\n  var alias = false;\r\n  self.toggleAlias = () => {\r\n    // TODO: recreate renderer with new antialias\r\n    // self.init(alias);\r\n    // self.display();\r\n    alias = !alias;\r\n  };\r\n\r\n  self.setLastNode = id => {\r\n    self.lastNode = self.graph.getNode(id);\r\n  };\r\n\r\n  self.dragLastNode = () => {\r\n    self.selectNode(self.lastNode);\r\n  };\r\n\r\n  var x = 1.0;\r\n  self.lowerRes = () => {\r\n    x -= 0.1;\r\n    self.renderer.setPixelRatio(x);\r\n    self.onWindowResize();\r\n  };\r\n\r\n  self.getNeighbors = function(node) {\r\n    if (node) {\r\n      self.addNeighbors(node);\r\n    } else {\r\n      self.addNeighbors(self.rightClickedNode);\r\n    }\r\n  };\r\n\r\n  self.toggleNeighborHighlight = function() {\r\n    self.doHighlightNeighbors = !self.doHighlightNeighbors;\r\n  };\r\n\r\n  self.highlightNodeIds = function(nodeids, toggle) {\r\n    if (nodeids.length > 0 && Array.isArray(nodeids[0])) {\r\n      nodeids = nodeids[0];\r\n    }\r\n    if (self.prevHighlights) {\r\n      for (var i = 0; i < self.prevHighlights.length; i++) {\r\n        self.highlightNode(\r\n          self.prevHighlights[i],\r\n          !toggle,\r\n          def.SEARCH_HIGHLIGHT\r\n        );\r\n      }\r\n    }\r\n    self.prevHighlights = [];\r\n    self.graph.forEachNode(function(node) {\r\n      if (nodeids.indexOf(node.id) != -1) {\r\n        self.highlightNode(node, toggle, def.SEARCH_HIGHLIGHT);\r\n        self.prevHighlights.push(node);\r\n      }\r\n    });\r\n  };\r\n\r\n  self.removeSelected = function() {\r\n    for (var i = 0; i < self.selection.length; i++) {\r\n      self.removeNode(self.selection[i]);\r\n    }\r\n    self.selection = [];\r\n  };\r\n\r\n  self.getSelected = function() {\r\n    return self.selection;\r\n  };\r\n\r\n  self.getSelectedIds = function() {\r\n    return self.selection.map(n => n.id);\r\n  };\r\n};\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\n\r\nmodule.exports = function(self) {\r\n  /**\r\n   *  Update the position and color of the edges\r\n   */\r\n  self.updateEdges = function() {\r\n    self.edges.setDrawRange(0, self.drawCount + 6);\r\n    var total = self.drawCount + 6;\r\n    var positions = self.edges.attributes.position.array;\r\n    var colors = self.edges.attributes.color.array;\r\n    for (var i = 0; i < total; i += 2) {\r\n      if (self.lineIndices[i / 2]) {\r\n        if (self.lineIndices[i / 2].hide) {\r\n          var v1pos = self.lineObjects[i].renderData.draw_object.position;\r\n          var v2pos = self.lineObjects[i + 1].renderData.draw_object.position;\r\n          positions[i * 3] = v1pos.x;\r\n          positions[i * 3 + 1] = v1pos.y;\r\n          positions[i * 3 + 3] = v2pos.x;\r\n          positions[i * 3 + 4] = v2pos.y;\r\n          colors[i * 3] = 255;\r\n          colors[i * 3 + 1] = 255;\r\n          colors[i * 3 + 2] = 255;\r\n          colors[i * 3 + 3] = 255;\r\n          colors[i * 3 + 4] = 255;\r\n          colors[i * 3 + 5] = 255;\r\n        } else {\r\n          var v1pos = self.lineObjects[i].renderData.draw_object.position;\r\n          var v2pos = self.lineObjects[i + 1].renderData.draw_object.position;\r\n          var v1color = self.lineIndices[i / 2].linecolor;\r\n          var v2color = self.lineIndices[i / 2].linecolor;\r\n          positions[i * 3] = v1pos.x;\r\n          positions[i * 3 + 1] = v1pos.y;\r\n          positions[i * 3 + 3] = v2pos.x;\r\n          positions[i * 3 + 4] = v2pos.y;\r\n          colors[i * 3] = v1color.r;\r\n          colors[i * 3 + 1] = v1color.g;\r\n          colors[i * 3 + 2] = v1color.b;\r\n          colors[i * 3 + 3] = v2color.r;\r\n          colors[i * 3 + 4] = v2color.g;\r\n          colors[i * 3 + 5] = v2color.b;\r\n        }\r\n      }\r\n    }\r\n    self.edges.attributes.position.needsUpdate = true;\r\n    self.edges.attributes.color.needsUpdate = true;\r\n  };\r\n\r\n  /**\r\n   *  Update the position of the labels\r\n   */\r\n  self.updateLabels = function() {\r\n    var nodes = self.force.nodes();\r\n    for (var i = 0; i < nodes.length; i++) {\r\n      let thisNode = self.graph.getNode(nodes[i].id);\r\n      if (thisNode.renderData.textHolder != undefined) {\r\n        if (\r\n          //thisNode.renderData.textHolder.children[0].element.hideme != false &&\r\n          !thisNode.renderData.textHolder.children[0].element.override\r\n        ) {\r\n          thisNode.renderData.textHolder.children[0].element.hidden = true;\r\n        } else {\r\n          thisNode.renderData.textHolder.children[0].element.hidden = false;\r\n        }\r\n      }\r\n      thisNode.renderData.textHolder.position.x =\r\n        thisNode.renderData.size + thisNode.renderData.draw_object.position.x;\r\n      thisNode.renderData.textHolder.position.y =\r\n        thisNode.renderData.draw_object.position.y;\r\n    }\r\n  };\r\n\r\n  /**\r\n   *  Update the position and color of the edges\r\n   */\r\n  self.updateNodes = function() {\r\n    if (self.options.layout == \"ngraph\") {\r\n      self.graph.forEachNode(function(node) {\r\n        if (node.renderData) {\r\n          node.renderData.draw_object.position.x = self.force.getNodePosition(\r\n            node.id\r\n          ).x;\r\n          node.renderData.draw_object.position.y = self.force.getNodePosition(\r\n            node.id\r\n          ).y;\r\n        }\r\n      });\r\n      if (!self.paused) {\r\n        self.force.step();\r\n      }\r\n    } else if (self.options.layout == \"d3\") {\r\n      var nodes = self.force.nodes();\r\n      for (var i = 0; i < nodes.length; i++) {\r\n        nodes[i].x = Math.max(\r\n          -self.renderWidth,\r\n          Math.min(self.renderWidth, nodes[i].x)\r\n        );\r\n        nodes[i].y = Math.max(\r\n          -self.renderHeight,\r\n          Math.min(self.renderHeight, nodes[i].y)\r\n        );\r\n        let thisNode = self.graph.getNode(nodes[i].id);\r\n        if (thisNode && thisNode.renderData.draw_object) {\r\n          if (!thisNode.pinnedx) {\r\n            thisNode.fx = null;\r\n            thisNode.renderData.draw_object.children[1].visible = false;\r\n          } else {\r\n            thisNode.fx = thisNode.x;\r\n            thisNode.renderData.draw_object.children[1].visible = true;\r\n          }\r\n          if (!thisNode.pinnedy) {\r\n            thisNode.fy = null;\r\n          } else {\r\n            thisNode.fy = thisNode.y;\r\n          }\r\n          thisNode.renderData.draw_object.position.x = nodes[i].x;\r\n          thisNode.renderData.draw_object.position.y = nodes[i].y;\r\n        }\r\n      }\r\n\r\n      for (var i = 0; i < self.fakeNodes.length; i++) {\r\n        self.fakeNodes[i].fx =\r\n          self.neighborHost.x + self.neighborHost.data.size * 3;\r\n        self.fakeNodes[i].fy =\r\n          self.neighborHost.y - self.neighborHost.data.size * 3 * i;\r\n      }\r\n\r\n      if (!self.paused) {\r\n        self.force.tick();\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Restrict camera translation\r\n   */\r\n  self.updateCamera = function() {\r\n    self.controls.target.x -=\r\n      self.controls.object.position.x -\r\n      Math.max(\r\n        -self.renderWidth,\r\n        Math.min(self.renderWidth, self.controls.object.position.x)\r\n      );\r\n    self.controls.object.position.x -=\r\n      self.controls.object.position.x -\r\n      Math.max(\r\n        -self.renderWidth,\r\n        Math.min(self.renderWidth, self.controls.object.position.x)\r\n      );\r\n    self.controls.target.y -=\r\n      self.controls.object.position.y -\r\n      Math.max(\r\n        -self.renderHeight,\r\n        Math.min(self.renderHeight, self.controls.object.position.y)\r\n      );\r\n    self.controls.object.position.y -=\r\n      self.controls.object.position.y -\r\n      Math.max(\r\n        -self.renderHeight,\r\n        Math.min(self.renderHeight, self.controls.object.position.y)\r\n      );\r\n    self.setViewPortSize(self.ccamera);\r\n  };\r\n\r\n  /**\r\n   * Given an ngraph, update the current ngraph and add or remove inconsistent nodes\r\n   */\r\n  self.updateGraph = function(graph) {\r\n    var numNodesAdded = 0;\r\n    graph.forEachNode(function(node) {\r\n      var oldNode = self.graph.getNode(node.id);\r\n      if (!oldNode) {\r\n        if (!self.newNodeIds) {\r\n          self.newNodeIds = [];\r\n        }\r\n        self.newNodeIds.push(node.id);\r\n        self.addNode(node);\r\n        numNodesAdded += 1;\r\n        self.lastNode = self.graph.getNode(node.id);\r\n      } else {\r\n        self.updateNode(oldNode, node);\r\n      }\r\n    });\r\n    graph.forEachLink(function(link) {\r\n      if (!self.graph.getLink(link.fromId, link.toId)) {\r\n        self.addEdge(\r\n          self.graph.getNode(link.fromId),\r\n          self.graph.getNode(link.toId)\r\n        );\r\n      }\r\n    });\r\n\r\n    self.graph.forEachNode(function(node) {\r\n      var oldNode = graph.getNode(node.id);\r\n      if (!oldNode) {\r\n        self.removeNode(node);\r\n      }\r\n    });\r\n\r\n    self.force.alpha(1);\r\n    self.force.stop();\r\n\r\n    if (numNodesAdded > 10) {\r\n      // This seems unnecessary for now\r\n      // self.tickToStatic = true;\r\n      self.tickToStatic = false;\r\n    } else {\r\n      self.tickToStatic = false;\r\n    }\r\n    if (self.newNodeIds) {\r\n      self.highlightNodeIds(self.newNodeIds, true);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * update positions in the ngraph given a list of positions\r\n   */\r\n  self.updatePositions = function(positions) {\r\n    self.graph.forEachNode(function(node) {\r\n      var pos = positions[node.id];\r\n      if (pos) {\r\n        self.graph.getNode(node.id).x = pos[0];\r\n        self.graph.getNode(node.id).y = pos[1];\r\n        self.graph.getNode(node.id).pinnedx = node.pinnedx;\r\n        self.graph.getNode(node.id).pinnedy = node.pinnedy;\r\n        if (node.pinnedx) {\r\n          self.graph.getNode(node.id).fx = pos[0];\r\n        }\r\n        if (node.pinnedy) {\r\n          self.graph.getNode(node.id).fy = pos[1];\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Update a node given a new node\r\n   */\r\n  self.updateNode = function(node, newNode) {\r\n    if (newNode.data) {\r\n      if (node.data.color && newNode.data.color) {\r\n        node.data.color = newNode.data.color;\r\n        node.renderData.color = node.data.color;\r\n        node.renderData.draw_object.material.color.set(\r\n          new THREE.Color(node.data.color)\r\n        );\r\n      }\r\n      if (newNode.data.size && newNode.data.size > 0) {\r\n        node.data.size = newNode.data.size;\r\n        node.renderData.size = newNode.data.size;\r\n        node.renderData.draw_object.scale.set(\r\n          newNode.data.size,\r\n          newNode.data.size,\r\n          1\r\n        );\r\n        var hsize = 1 + def.HIGHLIGHT_SIZE / newNode.data.size;\r\n        node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\r\n      }\r\n      if (newNode.data.label) {\r\n        node.data.label = newNode.data.label;\r\n        node.renderData.label = node.data.label;\r\n        node.renderData.textHolder.children[0].element.childNodes[0].innerText =\r\n          node.data.label;\r\n      }\r\n      if (newNode.data.shape) {\r\n        node.data.shape = newNode.data.shape;\r\n        node.renderData.shape = node.data.shape;\r\n        self.setNodeShape(node, node.data.shape);\r\n      }\r\n    }\r\n  };\r\n};\r\n","var THREE = require(\"three\");\r\nwindow.THREE = THREE;\r\nrequire(\"../include/QuickHull\");\r\nrequire(\"../include/ConvexGeometry\");\r\nrequire(\"../include/CSS3DRenderer\");\r\nvar Edge = require(\"./structure/node\").Edge;\r\nvar Node = require(\"./structure/node\").Node;\r\nvar OrbitControls = require(\"../include/OrbitControls\")(THREE); //'three-orbit-controls')(THREE);\r\nTHREE.MeshLine = require(\"../include/THREE.MeshLine\").MeshLine;\r\nTHREE.MeshLineMaterial = require(\"../include/THREE.MeshLine\").MeshLineMaterial;\r\nvar d3 = require(\"d3\");\r\nvar ee = require(\"event-emitter\");\r\n\r\nexports.default = {\r\n  THREE: THREE,\r\n  Edge: Edge,\r\n  Node: Node,\r\n  OrbitControls: OrbitControls,\r\n  d3: d3,\r\n  ee: ee,\r\n  NODE_COLOR: 0x0055aa,\r\n  NODE_HIGHLIGHT: 0x3498db,\r\n  ADJACENT_HIGHLIGHT: 0x95a5a6,\r\n  SEARCH_HIGHLIGHT: 0xe67e22,\r\n  NODE_HTEXTURE: \"http://i.imgur.com/xzkxSIw.png\",\r\n  NODE_TEXTURE: \"http://i.imgur.com/reTXqiM.png\",\r\n  NODE_NO_HTEX: true,\r\n  NODE_NO_TEX: true,\r\n  NODE_NO_HCOLOR: false,\r\n  NODE_NO_COLOR: false,\r\n  NODE_NO_HIGHLIGHT: false,\r\n  NODE_NEIGHBOR_HIGHLIGHT: true,\r\n  NODE_SHAPE: \"square\",\r\n  NODE_HSHAPE: \"square\",\r\n  NODE_SIZE: 5,\r\n  HIGHLIGHT_SIZE: 1.0,\r\n  LAYOUT: \"d3\",\r\n  LINES: \"notfancy\",\r\n  MAP: true,\r\n  TEXT_SCALE: true,\r\n  TEXT_SIZE: 0.07,\r\n  TEXT_X_OFFSET: 0.52,\r\n  TEXT_Y_OFFSET: 0.35,\r\n  TEXT_BACK_COLOR: \"rgba(100, 100, 200, 0)\",\r\n  TEXT_OPACITY: \"1\",\r\n  TEXT_WIREFRAME: false,\r\n  PIN_COLOR: 0xffffff\r\n};\r\n","import * as scale from \"d3-scale\";\r\n\r\n// Argo-lite Graph Sharing backend Strapi Server:\r\nexport const BACKEND_URL = \"http://3.95.238.136\";\r\n\r\nexport const SCALE_LINEAR = \"Linear Scale\";\r\nexport const SCALE_LOG = \"Log Scale\";\r\n\r\nexport const scales = {\r\n  [SCALE_LINEAR]: scale.scaleLinear,\r\n  [SCALE_LOG]: scale.scaleLog\r\n};\r\n\r\nexport const LOAD_USER_CONFIG = \"load-user-config\";\r\nexport const LOADED_USER_CONFIG = \"loaded-user-config\";\r\nexport const SAVE_USER_CONFIG = \"save-user-config\";\r\nexport const SAVED_USER_CONFIG = \"saved-user-config\";\r\n\r\nexport const FETCH_WORKSPACE_PROJECTS = \"fetch-workspace-projects\";\r\nexport const FETCHED_WORKSPACE_PROJECTS = \"fetched-workspace-projects\";\r\nexport const MENU_NEW_PROJECT = \"menu-new-project\";\r\nexport const CREATE_NEW_PROJECT = \"create-new-project\";\r\nexport const CREATED_NEW_PROJECT = \"created-new-project\";\r\n\r\nexport const DELETE_FILE = \"delete-file\";\r\nexport const RENAME_FILE = \"rename-file\";\r\n\r\nexport const LOAD_GRAPH_JSON = \"load-graph-json\";\r\nexport const LOAD_GRAPH_SQLITE = \"load-graph-sqlite\";\r\nexport const LOADED_GRAPH_JSON = \"loaded-graph-json\";\r\nexport const LOAD_TOAST_KEY = \"load-toast-key\";\r\n\r\nexport const SAVE_GRAPH_JSON = \"save-graph-json\";\r\nexport const SAVE_GRAPH_SQLITE = \"save-graph-sqlite\";\r\nexport const SAVED_GRAPH_JSON = \"saved-graph-json\";\r\nexport const SAVE_TOAST_KEY = \"save-const-key\";\r\n\r\nexport const MENU_LOAD = \"menu-load\";\r\nexport const MENU_IMPORT_CSV = \"menu-import-csv\";\r\nexport const MENU_SAVE_GRAPH_STATE = \"menu-save-graph-state\";\r\nexport const MENU_SAVE_GRAPH_STATE_TO_PROJECT =\r\n  \"menu-save-graph-state-to-project\";\r\nexport const MENU_SAVE_GRAPH_SQLITE = \"menu-save-graph-sqlite\";\r\nexport const SAVE_GRAPH_STATE = \"save-graph-state\";\r\nexport const SAVED_GRAPH_STATE = \"saved-graph-state\";\r\nexport const SAVE_GRAPH_STATE_TO_PROJECT = \"save-graph-state-to-project\";\r\nexport const SAVED_GRAPH_STATE_TO_PROJECT = \"saved-graph-state-to-project\";\r\nexport const LOAD_GRAPH_STATE = \"load-graph-state\";\r\nexport const LOADED_GRAPH_STATE = \"loaded-graph-state\";\r\n\r\nexport const SHOW_ITEM_IN_FOLDER = \"show-item-in-folder\";\r\nexport const SHOW_WORKSPACE_FOLDER = 'show-workspace-folder';\r\nexport const CHANGE_WORKSPACE_FOLDER = 'change-workspace-folder';\r\nexport const CHANGED_WORKSPACE_FOLDER = 'changed-workspace-folder';\r\n\r\nexport const CHOOSE_EDGE_FILE = \"choose-edge-file\";\r\nexport const CHOSEN_EDGE_FILE = \"chosen-edge-file\";\r\nexport const CHOOSE_NODE_FILE = \"choose-node-file\";\r\nexport const PEAKED_NODE_FILE = \"peaked-node-file\";\r\nexport const CHOSEN_NODE_FILE = \"chosen-node-file\";\r\n\r\nexport const CHOOSE_GRAPH_FILE = \"choose-graph-file\";\r\nexport const CHOSEN_GRAPH_FILE = \"chosen-graph-file\";\r\nexport const CHOOSE_STATE_FILE = \"choose-state-file\";\r\nexport const CHOSEN_STATE_FILE = \"chosen-state-file\";\r\n\r\nexport const NODE_AND_EDGE_FILE = \"both nodes and edges file\";\r\nexport const ONLY_EDGE_FILE = \"only edges file\";\r\n\r\nexport const GRAPH_AND_STATE_FILE = \"both graph and snapshot file\";\r\nexport const ONLY_GRAPH_FILE = \"only graph file\";\r\nexport const IMPORT_GRAPH = \"import-graph\";\r\nexport const IMPORTED_GRAPH = \"imported-graph\";\r\nexport const OPEN_GRAPH = \"open-graph\";\r\nexport const OPENED_GRAPH = \"opened-graph\";\r\n\r\nexport const SEARCH_REQUEST = \"search-request\";\r\nexport const SEARCH_RESPONSE = \"search-response\";\r\n\r\nexport const ADD_NODES = \"add-nodes\";\r\nexport const ADD_SELECT_NODE = \"add-select-node\";\r\nexport const ADD_NODE = \"add-node\";\r\nexport const GET_NEIGHBORS = \"get-neighbors\";\r\n","import { Position, Toaster } from \"@blueprintjs/core\";\r\n\r\nexport const toaster = Toaster.create({\r\n  position: Position.TOP\r\n});\r\n\r\nexport default toaster;\r\n","import { runInAction, toJS } from 'mobx';\r\nimport { Intent } from '@blueprintjs/core';\r\nimport { demapify } from 'es6-mapify';\r\n\r\nimport appState from '../stores/index';\r\nimport {\r\n  ADD_NODE,\r\n  ADD_NODES,\r\n  ADD_SELECT_NODE,\r\n  CHOOSE_EDGE_FILE,\r\n  CHOOSE_GRAPH_FILE,\r\n  CHOOSE_NODE_FILE,\r\n  CHOOSE_STATE_FILE,\r\n  CHOSEN_EDGE_FILE,\r\n  CHOSEN_GRAPH_FILE,\r\n  CHOSEN_NODE_FILE,\r\n  CHOSEN_STATE_FILE,\r\n  GET_NEIGHBORS,\r\n  IMPORT_GRAPH,\r\n  IMPORTED_GRAPH,\r\n  LOAD_GRAPH_SQLITE,\r\n  LOADED_GRAPH_SQLITE,\r\n  LOADED_GRAPH_STATE,\r\n  MENU_IMPORT_CSV,\r\n  MENU_LOAD,\r\n  MENU_NEW_PROJECT,\r\n  MENU_SAVE_GRAPH_SQLITE,\r\n  MENU_SAVE_GRAPH_STATE,\r\n  CREATE_NEW_PROJECT,\r\n  CREATED_NEW_PROJECT,\r\n  OPEN_GRAPH,\r\n  OPENED_GRAPH,\r\n  FETCH_WORKSPACE_PROJECTS,\r\n  FETCHED_WORKSPACE_PROJECTS,\r\n  SAVE_GRAPH_SQLITE,\r\n  SAVE_GRAPH_STATE,\r\n  SAVED_GRAPH_JSON,\r\n  SAVED_GRAPH_STATE,\r\n  SEARCH_REQUEST,\r\n  SEARCH_RESPONSE,\r\n  SHOW_ITEM_IN_FOLDER,\r\n  SAVED_GRAPH_STATE_TO_PROJECT,\r\n  MENU_SAVE_GRAPH_STATE_TO_PROJECT,\r\n  SAVE_GRAPH_STATE_TO_PROJECT,\r\n  DELETE_FILE,\r\n  RENAME_FILE,\r\n  SHOW_WORKSPACE_FOLDER,\r\n  LOAD_USER_CONFIG,\r\n  LOADED_USER_CONFIG,\r\n  SAVED_USER_CONFIG,\r\n  SAVE_USER_CONFIG,\r\n  CHANGE_WORKSPACE_FOLDER,\r\n  CHANGED_WORKSPACE_FOLDER,\r\n} from '../constants/index';\r\nimport { toaster } from '../notifications/client';\r\n\r\nimport createGraph from 'ngraph.graph';\r\nimport pageRank from 'ngraph.pagerank';\r\nimport parse from \"csv-parse/lib/sync\";\r\n// import worker from './worker';\r\n\r\n// TODO: Register web worker used by Argo-lite.\r\n\r\n// Argo-lite replacement for electron ipc.\r\nconst ipcRenderer = {\r\n  send: (eventString) => {\r\n    console.log(`ipcRenderer.send(${eventString}, ...)`);\r\n  }\r\n}\r\n\r\nexport default function registerIPC() {\r\n  // ipcRenderer.on(LOADED_USER_CONFIG, (event, loadedObject) => {\r\n  //   // Overwrite PreferenceStore values according to user config values,\r\n  //   // if present.\r\n  //   if (loadedObject.darkMode) {\r\n  //     appState.preferences.darkMode = true;\r\n  //   }\r\n  //   if (loadedObject.workspace && loadedObject.workspace != '') {\r\n  //     appState.preferences.workspacePath = loadedObject.workspace;\r\n  //   }\r\n  // });\r\n\r\n  // ipcRenderer.on(SAVED_USER_CONFIG, (event) => {\r\n  //   toaster.show({\r\n  //     message: \"User configuration saved\",\r\n  //     intent: Intent.SUCCESS,\r\n  //     iconName: 'saved',\r\n  //   });\r\n  // });\r\n\r\n  // ipcRenderer.on(LOADED_GRAPH_SQLITE, (event, loadedObject) => {\r\n  //   runInAction('load saved graph', () => {\r\n  //     appState.graph.rawGraph = loadedObject.rawGraph;\r\n  //     appState.graph.metadata = loadedObject.metadata;\r\n  //   });\r\n  // });\r\n\r\n  // ipcRenderer.on(OPENED_GRAPH, (event, loadedObject) => {\r\n  //   runInAction('load saved graph and state', () => {\r\n  //     console.log(loadedObject);\r\n  //     appState.graph.rawGraph = loadedObject.rawGraph;\r\n  //     appState.graph.metadata = loadedObject.metadata;\r\n  //     if (loadedObject.state) {\r\n  //       appState.graph.loadImmediateStates(loadedObject.state);\r\n  //     }\r\n  //   });\r\n  // });\r\n\r\n  // ipcRenderer.on(LOADED_GRAPH_STATE, (event, loadedObject) => {\r\n  //   appState.graph.loadImmediateStates(loadedObject);\r\n  // });\r\n\r\n  // ipcRenderer.on(SAVED_GRAPH_STATE, (event, savedFilePath) => {\r\n  //   toaster.show({\r\n  //     message: `Saved graph snapshot file to ${savedFilePath}`,\r\n  //     intent: Intent.SUCCESS,\r\n  //     iconName: 'saved',\r\n  //     action: {\r\n  //       onClick: () => ipcRenderer.send(SHOW_ITEM_IN_FOLDER, savedFilePath),\r\n  //       text: 'Show in Folder',\r\n  //     },\r\n  //   });\r\n  // });\r\n\r\n  // ipcRenderer.on(SAVED_GRAPH_STATE_TO_PROJECT, (event, snapshotName) => {\r\n  //   toaster.show({\r\n  //     message: `Saved to snapshot ${snapshotName}`,\r\n  //     intent: Intent.SUCCESS,\r\n  //     iconName: 'saved',\r\n  //   });\r\n  // });\r\n\r\n  // ipcRenderer.on(SAVED_GRAPH_JSON, (event, savedFilePath) => {\r\n  //   toaster.show({\r\n  //     message: `Saved graph file to ${savedFilePath}`,\r\n  //     intent: Intent.SUCCESS,\r\n  //     iconName: 'saved',\r\n  //     action: {\r\n  //       onClick: () => ipcRenderer.send(SHOW_ITEM_IN_FOLDER, savedFilePath),\r\n  //       text: 'Show in Folder',\r\n  //     },\r\n  //   });\r\n  // });\r\n\r\n  // ipcRenderer.on(CHOSEN_NODE_FILE, (event, path) => {\r\n  //   appState.import.importConfig.nodeFile.path = path;\r\n  // });\r\n\r\n  // ipcRenderer.on(CHOSEN_EDGE_FILE, (event, path) => {\r\n  //   appState.import.importConfig.edgeFile.path = path;\r\n  // });\r\n\r\n  // ipcRenderer.on(CHOSEN_GRAPH_FILE, (event, path) => {\r\n  //   appState.import.graphFile = path;\r\n  // });\r\n\r\n  // ipcRenderer.on(CHOSEN_STATE_FILE, (event, path) => {\r\n  //   appState.import.stateFile = path;\r\n  // });\r\n\r\n  // ipcRenderer.on(IMPORTED_GRAPH, (event) => {\r\n  //   appState.import.loading = false;\r\n  //   appState.import.dialogOpen = false;\r\n  //   appState.project.isFetching = true;\r\n  //   fetchWorkspaceProjects();\r\n  // });\r\n\r\n  // ipcRenderer.on(ADD_NODES, (event, toAdd) => {\r\n  //   runInAction('add nodes and edges to graph', () => {\r\n  //     appState.graph.rawGraph.nodes = appState.graph.rawGraph.nodes.concat(\r\n  //       toAdd.nodes,\r\n  //     );\r\n  //     appState.graph.rawGraph.edges = appState.graph.rawGraph.edges.concat(\r\n  //       toAdd.edges,\r\n  //     );\r\n  //   });\r\n  // });\r\n\r\n  // ipcRenderer.on(ADD_SELECT_NODE, (event, toAdd) => {\r\n  //   runInAction('add nodes and edges to graph', () => {\r\n  //     appState.graph.rawGraph.nodes = appState.graph.rawGraph.nodes.concat(\r\n  //       toAdd.nodes,\r\n  //     );\r\n  //     appState.graph.rawGraph.edges = appState.graph.rawGraph.edges.concat(\r\n  //       toAdd.edges,\r\n  //     );\r\n  //   });\r\n\r\n  //   appState.graph.frame.setLastNode(toAdd.nodes[0].node_id);\r\n  //   appState.graph.frame.dragLastNode();\r\n  // });\r\n\r\n  // ipcRenderer.on(SEARCH_RESPONSE, (event, candidates) => {\r\n  //   var cands = JSON.parse(candidates);\r\n  //   var ckeys = cands.map(x => x.node_id);\r\n  //   appState.search.allCands = Object.values(cands);\r\n  //   appState.search.pageNum = 0;\r\n  //   appState.search.nPerPage = 10;\r\n  //   appState.search.numCandidates = appState.search.allCands.length;\r\n  //   appState.search.maxPage = parseInt(\r\n  //     appState.search.allCands.length / appState.search.nPerPage,\r\n  //   );\r\n  //   appState.search.pages = [...Array(appState.search.maxPage).keys()];\r\n  //   appState.search.candidates = appState.search.allCands.slice(0, 10);\r\n  //   appState.search.panelOpen = true;\r\n  //   if (appState.graph.frame) {\r\n  //     appState.graph.frame.highlightNodeIds(ckeys, true);\r\n  //   }\r\n  // });\r\n\r\n  // ipcRenderer.on(LOADED_GRAPH_STATE, (event, stateStr) => {\r\n  //   appState.graph.loadImmediateStates(stateStr);\r\n  // });\r\n\r\n  // ipcRenderer.on(CREATED_NEW_PROJECT, () => {\r\n  //   fetchWorkspaceProjects();\r\n  // });\r\n\r\n  // ipcRenderer.on(FETCHED_WORKSPACE_PROJECTS, (event, projects) => {\r\n  //   appState.project.isFetching = false;\r\n  //   appState.project.projects = projects;\r\n  //   // Update mobx state on projects, useful for updating the components after deleting/renaming etc.\r\n  //   if (appState.project.currentProject !== null) {\r\n  //     // There is a project currently selected (showing in a ProjectDetailDialog etc.)\r\n  //     // This fetch needs to update the dialog also\r\n  //     const temp = appState.project.projects.filter((project) => {\r\n  //       return project.projectPath === appState.project.currentProject.projectPath;\r\n  //     });\r\n  //     if (temp.length === 1) {\r\n  //       appState.project.currentProject = temp[0];\r\n  //     } else {\r\n  //       appState.project.currentProject = null;\r\n  //     }\r\n      \r\n  //   }\r\n  // });\r\n\r\n  // ipcRenderer.on(CHANGED_WORKSPACE_FOLDER, (events, newWorkspaceDirectory) => {\r\n  //   appState.preferences.workspacePath = newWorkspaceDirectory;\r\n  //   appState.preferences.saveUserConfig();\r\n  // });\r\n\r\n  // ipcRenderer.on(MENU_NEW_PROJECT, () => {\r\n  //   appState.project.isNewProjectDialogOpen = true;\r\n  // });\r\n\r\n  // ipcRenderer.on(MENU_LOAD, () => {\r\n  //   appState.preferences.openDialogOpen = true;\r\n  // });\r\n\r\n  // ipcRenderer.on(MENU_IMPORT_CSV, () => {\r\n  //   appState.import.dialogOpen = true;\r\n  // });\r\n\r\n  // ipcRenderer.on(MENU_SAVE_GRAPH_STATE, () => {\r\n  //   // Original implementation for opening a traditional system-level save file dialog\r\n  //   // ipcRenderer.send(SAVE_GRAPH_STATE, appState.graph.saveImmediateStates());\r\n    \r\n  //   // New implementation opening a dialog that saves snapshot to project\r\n  //   appState.project.isSaveSnapshotDialogOpen = true;\r\n  // });\r\n\r\n  // ipcRenderer.on(MENU_SAVE_GRAPH_STATE_TO_PROJECT, () => {\r\n  //   requestSaveSnapshot();\r\n  // });\r\n\r\n  // ipcRenderer.on(MENU_SAVE_GRAPH_SQLITE, requestSaveSQLite);\r\n}\r\n\r\nexport function requestLoadSQLite() {\r\n  ipcRenderer.send(LOAD_GRAPH_SQLITE);\r\n}\r\n\r\nexport function addNode(node_id) {\r\n  ipcRenderer.send(ADD_NODE, node_id);\r\n}\r\n\r\nexport function requestNeighbors(\r\n  node_id,\r\n  attr = 'degree',\r\n  num = '10',\r\n  order = 'desc',\r\n) {\r\n  ipcRenderer.send(GET_NEIGHBORS, node_id, attr, num, order);\r\n}\r\n\r\nfunction requestSaveSQLite() {\r\n  ipcRenderer.send(\r\n    SAVE_GRAPH_SQLITE,\r\n    JSON.stringify({\r\n      graph: toJS(appState.graph.rawGraph),\r\n      metadata: toJS(appState.graph.metadata),\r\n      nodes: toJS(appState.graph.nodes),\r\n      overrides: toJS(demapify(appState.graph.overrides)),\r\n      nodePositions: appState.graph.frame.getPositions(),\r\n    }),\r\n  );\r\n}\r\n\r\nexport function requestChooseNodeFile(hasHeader) {\r\n  ipcRenderer.send(CHOOSE_NODE_FILE, hasHeader);\r\n}\r\n\r\nexport function requestChooseEdgeFile(hasHeader) {\r\n  ipcRenderer.send(CHOOSE_EDGE_FILE, hasHeader);\r\n}\r\n\r\nexport function requestChooseGraphFile() {\r\n  ipcRenderer.send(CHOOSE_GRAPH_FILE);\r\n}\r\n\r\nexport function requestChooseStateFile() {\r\n  ipcRenderer.send(CHOOSE_STATE_FILE);\r\n}\r\n\r\nexport function requestOpen() {\r\n  ipcRenderer.send(\r\n    OPEN_GRAPH,\r\n    appState.import.graphFile,\r\n    appState.import.stateFile,\r\n  );\r\n}\r\n\r\n// Request to delete a file specified at filePath\r\nexport function requestDelete(filePath) {\r\n  ipcRenderer.send(DELETE_FILE, filePath);\r\n}\r\n\r\n/**\r\n * Request to rename a file specified at filePath\r\n * @param filePath where the file to be renamed is located\r\n * @param newName new file name with extension\r\n */\r\nexport function requestRename(filePath, newName) {\r\n  ipcRenderer.send(RENAME_FILE, filePath, newName);\r\n}\r\n\r\nexport function requestSaveSnapshot(snapshotName) {\r\n  if (!snapshotName) {\r\n    // Default: Use the currently opened snapshot name (if no snapshot opened, the default name in the ProjectStore will be used)\r\n    ipcRenderer.send(SAVE_GRAPH_STATE_TO_PROJECT, appState.graph.saveImmediateStates(), appState.project.currentProject.projectPath, appState.project.currentSnapshotName);\r\n  } else {\r\n    ipcRenderer.send(SAVE_GRAPH_STATE_TO_PROJECT, appState.graph.saveImmediateStates(), appState.project.currentProject.projectPath, snapshotName);\r\n  }\r\n}\r\n\r\nexport function requestImportGraphFromCSV(hasNodeFile, delimiter, newProjectName) {\r\n  if (!newProjectName) {\r\n    newProjectName = 'Test Project';\r\n  }\r\n  appState.import.loading = true;\r\n  const importConfig = {\r\n    hasNodeFile,\r\n    nodes: {\r\n      path: appState.import.importConfig.nodeFile.path,\r\n      hasColumns: appState.import.importConfig.nodeFile.hasColumns,\r\n      columns: toJS(appState.import.importConfig.nodeFile.columns),\r\n      mapping: toJS(appState.import.importConfig.nodeFile.mapping),\r\n    },\r\n    edges: {\r\n      path: appState.import.importConfig.edgeFile.path,\r\n      hasColumns: appState.import.importConfig.edgeFile.hasColumns,\r\n      columns: toJS(appState.import.importConfig.edgeFile.columns),\r\n      mapping: toJS(appState.import.importConfig.edgeFile.mapping),\r\n      createMissing: appState.import.importConfig.edgeFile.createMissing,\r\n    },\r\n    delimiter,\r\n    newProjectName\r\n  };\r\n  ipcRenderer.send(IMPORT_GRAPH, importConfig);\r\n\r\n  // TODO: Potentially separate this out to web worker.\r\n  importGraphFromCSV(importConfig).then(graph => {\r\n    runInAction('load imported graph', () => {\r\n      appState.graph.rawGraph = graph.rawGraph;\r\n      appState.graph.metadata = graph.metadata;\r\n    });\r\n    // Reinitialize global configs\r\n    appState.graph.nodes = appState.graph.initialGlobalConfig.nodes;\r\n    appState.graph.overrides = new Map();\r\n    appState.import.loading = false;\r\n    appState.import.dialogOpen = false;\r\n  });\r\n}\r\n\r\nasync function readCSV(fileObject, hasHeader, delimiter) {\r\n  const file = fileObject;\r\n  const reader = new FileReader();\r\n  reader.readAsText(file);\r\n  return new Promise((resolve, reject) => {\r\n    reader.onload = () => {\r\n      const content = reader.result;\r\n      if (hasHeader) {\r\n        resolve(parse(content, {\r\n          comment: \"#\",\r\n          trim: true,\r\n          auto_parse: true,\r\n          skip_empty_lines: true,\r\n          columns: hasHeader,\r\n          delimiter\r\n        }));\r\n      }\r\n      resolve(parse(content, {\r\n        comment: \"#\",\r\n        trim: true,\r\n        auto_parse: true,\r\n        skip_empty_lines: true,\r\n        columns: undefined,\r\n        delimiter\r\n      }));\r\n    }\r\n  });\r\n  \r\n}\r\n\r\nasync function importGraphFromCSV(config) {\r\n  let nodesArr = [];\r\n  const graph = createGraph();\r\n  const degreeDict = {};\r\n  if (config.hasNodeFile) {\r\n    nodesArr = await readCSV(appState.import.selectedNodeFileFromInput, config.nodes.hasColumns, config.delimiter);\r\n    nodesArr.forEach(node => graph.addNode(node[config.nodes.mapping.id].toString(),\r\n      { id: node[config.nodes.mapping.id].toString(), degree: 0, ...node }));\r\n    nodesArr =\r\n      nodesArr.map(\r\n        n => ({ ...n, id: n[config.nodes.mapping.id].toString(), degree: 0, pagerank: 0 }));\r\n    nodesArr.forEach(n => degreeDict[n.id] = 0);\r\n  }\r\n  const edges = await readCSV(appState.import.selectedEdgeFileFromInput, config.nodes.hasColumns, config.delimiter);\r\n  if (config.edges.createMissing) {\r\n    edges.forEach((it) => {\r\n      const from = it[config.edges.mapping.fromId].toString();\r\n      const to = it[config.edges.mapping.toId].toString();\r\n      if (!graph.hasNode(from)) {\r\n        graph.addNode(from, { id: from, degree: 0 });\r\n        nodesArr.push({ id: from, degree: 0, pagerank: 0 });\r\n        degreeDict[from] = 0;\r\n      }\r\n      if (!graph.hasNode(to)) {\r\n        graph.addNode(to, { id: to, degree: 0 });\r\n        nodesArr.push({ id: to, degree: 0, pagerank: 0 });\r\n        degreeDict[to] = 0;\r\n      }\r\n    });\r\n  }\r\n\r\n  const edgesSet = new Set();\r\n  \r\n  const edgesArr = [];\r\n\r\n  const addEdge = (from, to) => {\r\n    const edgeKey = `${from}👉${to}`;\r\n    if (edgesSet.has(edgeKey)) {\r\n      return;\r\n    }\r\n    edgesSet.add(edgeKey);\r\n    graph.addLink(from, to);\r\n    degreeDict[to] += 1;\r\n    edgesArr.push({\r\n      source_id: from,\r\n      target_id: to,\r\n    });\r\n  };\r\n  \r\n  edges.forEach(it => {\r\n    const from = it[config.edges.mapping.fromId].toString();\r\n    const to = it[config.edges.mapping.toId].toString();\r\n    // Argo currently works with undirected graph\r\n    addEdge(from, to);\r\n    addEdge(to, from);\r\n  });\r\n\r\n  const rank = pageRank(graph);\r\n  nodesArr = nodesArr.map(n => ({ ...n, node_id: n.id, pagerank: rank[n.id], degree: degreeDict[n.id] }));\r\n  return {\r\n    rawGraph: { nodes: nodesArr, edges: edgesArr },\r\n    metadata: {\r\n      snapshotName: 'Untitled Graph',\r\n      fullNodes: nodesArr.length,\r\n      fullEdges: Math.floor(edgesArr.length / 2), // Counting undirected edges\r\n      nodeProperties: Object.keys(nodesArr[0]),\r\n      nodeComputed: ['pagerank', 'degree'],\r\n      edgeProperties: ['source_id', 'target_id'],\r\n    },\r\n  }\r\n}\r\n\r\nexport function runSearch(searchStr) {\r\n  ipcRenderer.send(SEARCH_REQUEST, searchStr, appState.graph.searchOrder);\r\n}\r\n\r\nexport function fetchWorkspaceProjects() {\r\n  ipcRenderer.send(FETCH_WORKSPACE_PROJECTS);\r\n}\r\n\r\nexport function requestCreateNewProject(projectMetadata) {\r\n  ipcRenderer.send(CREATE_NEW_PROJECT, projectMetadata);\r\n}\r\n\r\nexport function requestOpenWorkspaceFolder() {\r\n  ipcRenderer.send(SHOW_WORKSPACE_FOLDER);\r\n}\r\n\r\nexport function requestLoadUserConfig() {\r\n  ipcRenderer.send(LOAD_USER_CONFIG);\r\n}\r\n\r\nexport function requestSaveUserConfig(userConfig) {\r\n  ipcRenderer.send(SAVE_USER_CONFIG, userConfig);\r\n}\r\n\r\nexport function requestChangeWorkspace() {\r\n  ipcRenderer.send(CHANGE_WORKSPACE_FOLDER);\r\n}","import { observable, action } from \"mobx\";\r\nimport { requestLoadUserConfig, requestSaveUserConfig } from \"../ipc/client\";\r\n\r\nexport default class PreferencesStore {\r\n  @observable dialogOpen = false;\r\n\r\n  @observable openDialogOpen = false;\r\n  @observable openSnapshotDialogOpen = false;\r\n  @observable shareDialogOpen = false;\r\n\r\n  // The following fields are asynchronously loaded.\r\n  // Any writes to these fields through saveUserConfig\r\n  // won't be active until the app exits and starts\r\n  // next time.\r\n\r\n  @observable darkMode = true;\r\n\r\n  @observable workspacePath = '';\r\n\r\n  // This is called at the beginning of the app.\r\n  loadUserConfig() {\r\n    requestLoadUserConfig();\r\n  }\r\n\r\n  saveUserConfig() {\r\n    const userConfig = {\r\n      darkMode: this.darkMode,\r\n      workspace: this.workspacePath,\r\n    }\r\n\r\n    requestSaveUserConfig(userConfig);\r\n  }\r\n}\r\n","import { observable, computed, action, autorun } from \"mobx\";\r\nimport createGraph from \"ngraph.graph\";\r\nimport { scales } from \"../constants/index\";\r\nimport appState from \".\";\r\nimport uniq from \"lodash/uniq\";\r\n\r\nexport default class GraphStore {\r\n\r\n  initialGlobalConfig = {\r\n    nodes: {\r\n      colorBy: \"pagerank\",\r\n      color: {\r\n        scale: \"Linear Scale\",\r\n        from: \"#448AFF\",\r\n        to: \"#E91E63\"\r\n      },\r\n      sizeBy: \"pagerank\",\r\n      size: {\r\n        min: 2,\r\n        max: 10,\r\n        scale: \"Linear Scale\"\r\n      },\r\n      labelBy: \"node_id\",\r\n      shape: \"circle\",\r\n      labelSize: 1,\r\n      labelLength: 10\r\n    },\r\n  }\r\n\r\n  @observable\r\n  nodes = this.initialGlobalConfig.nodes;\r\n\r\n  // Updated by frame event\r\n  @observable selectedNodes = [];\r\n  // Updated by frame event. Not being listened, only used to save label visibility.\r\n  nodesShowingLabels = [];\r\n  // Used by autorun during snapshot loading.\r\n  @observable initialNodesShowingLabels = [];\r\n\r\n  @observable\r\n  overrideConfig = {\r\n    color: \"#000\",\r\n    size: 5,\r\n    label: \"\",\r\n    shape: \"circle\"\r\n  };\r\n\r\n  @observable\r\n  rawGraph = {\r\n    nodes: [],\r\n    edges: []\r\n  };\r\n\r\n  @observable\r\n  metadata = {\r\n    fullNodes: 0,\r\n    fullEdges: 0,\r\n    nodeProperties: [],\r\n    nodeComputed: [\"pagerank\", \"degree\"],\r\n    edgeProperties: [],\r\n    snapshotName: \"loading...\" // Optional: for display in Argo-lite only\r\n  };\r\n\r\n  // used for listing all the properties, either original or computed\r\n  @computed\r\n  get allPropertiesKeyList() {\r\n    return uniq([\r\n      ...this.metadata.nodeProperties,\r\n      ...this.metadata.nodeComputed\r\n    ]).filter(k => k !== 'id'); // since node_id is already present\r\n  }\r\n\r\n  @observable.ref frame = null;\r\n  @observable.ref positions = null;\r\n\r\n  @observable overrides = new Map();\r\n  @observable searchOrder = \"degree\";\r\n\r\n  hasGraphLoaded = false;\r\n\r\n  @computed\r\n  get hasGraph() {\r\n    if (this.rawGraph.nodes.length > 0) {\r\n      this.hasGraphLoaded = true;\r\n    }\r\n    return this.hasGraphLoaded;\r\n  }\r\n\r\n  @computed\r\n  get minMax() {\r\n    const ret = {};\r\n    for (const p of [\r\n      ...this.metadata.nodeProperties,\r\n      ...this.metadata.nodeComputed\r\n    ]) {\r\n      let min = Number.MAX_VALUE;\r\n      let max = Number.MIN_VALUE;\r\n\r\n      for (const n of this.rawGraph.nodes) {\r\n        min = Math.max(Math.min(min, n[p]), 0.0000001);\r\n        max = Math.max(max, n[p]);\r\n      }\r\n\r\n      ret[p] = [min, max];\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  @computed\r\n  get nodeSizeScale() {\r\n    return scales[this.nodes.size.scale]()\r\n      .domain(this.minMax[this.nodes.sizeBy])\r\n      .range([this.nodes.size.min, this.nodes.size.max]);\r\n  }\r\n\r\n  @computed\r\n  get nodeColorScale() {\r\n    return scales[this.nodes.color.scale]()\r\n      .domain(this.minMax[this.nodes.colorBy])\r\n      .range([this.nodes.color.from, this.nodes.color.to]);\r\n  }\r\n\r\n  @computed\r\n  get computedGraph() {\r\n    const graph = createGraph();\r\n    this.rawGraph.nodes.forEach(n => {\r\n      const override = this.overrides.get(n.id.toString());\r\n      graph.addNode(n.id.toString(), {\r\n        label: (override && override.get(\"label\")) || n[this.nodes.labelBy],\r\n        size:\r\n          (override && override.get(\"size\")) ||\r\n          this.nodeSizeScale(n[this.nodes.sizeBy]),\r\n        color:\r\n          (override && override.get(\"color\")) ||\r\n          this.nodeColorScale(n[this.nodes.colorBy]),\r\n        shape: (override && override.get(\"shape\")) || n[this.nodes.shape],\r\n        ref: n\r\n      });\r\n    });\r\n\r\n    this.rawGraph.edges.forEach(e => {\r\n      graph.addLink(e.source_id.toString(), e.target_id.toString());\r\n    });\r\n\r\n    return graph;\r\n  }\r\n\r\n  removeNodes(nodeids) {\r\n    this.rawGraph.nodes = this.rawGraph.nodes.filter(\r\n      n => !nodeids.includes(n.id)\r\n    );\r\n    this.rawGraph.edges = this.rawGraph.edges.filter(\r\n      e => !nodeids.includes(e.source_id) && !nodeids.includes(e.target_id)\r\n    );\r\n    appState.graph.frame.removeSelected();\r\n  }\r\n\r\n  /**\r\n   * [Argo-lite] Saves graph snapshot as String\r\n   * \r\n   * Note that Argo-lite snapshot contains all graph data\r\n   * and metadata except nodes/edges deleted by users.\r\n   * This is different from Argo-electron snapshot.\r\n   */\r\n  saveImmediateStates(optionalConfig) {\r\n    const snapshot = {\r\n      rawGraph: this.rawGraph,\r\n      overrides: this.overrides,\r\n      nodesShowingLabels: this.nodesShowingLabels,\r\n      positions: this.frame.getPositions(),\r\n      metadata: this.metadata,\r\n      global: {\r\n        nodes: this.nodes,\r\n      },\r\n    };\r\n    // TODO: add corresponding options on frontend\r\n    // The optional options allows users to leave out\r\n    // certain app state when saving snapshot\r\n    if (optionalConfig) {\r\n      if (optionalConfig.noPosition) {\r\n        snapshot.positions = undefined;\r\n      }\r\n      if (optionalConfig.noGlobal) {\r\n        snapshot.global = undefined;\r\n      }\r\n      if (optionalConfig.noOverride) {\r\n        snapshot.overrides = undefined;\r\n      }\r\n    }\r\n    return JSON.stringify(snapshot);\r\n  }\r\n\r\n  @action\r\n  loadImmediateStates(savedStatesStr) {\r\n    const savedStates = JSON.parse(savedStatesStr);\r\n    if (!savedStates) {\r\n      return;\r\n    }\r\n    const savedOverrides = new Map(\r\n      Object.entries(savedStates.overrides).map(([k, v]) => [\r\n        k,\r\n        new Map(Object.entries(v))\r\n      ])\r\n    );\r\n    this.overrides.clear();\r\n    this.overrides.merge(savedOverrides);\r\n\r\n    if (savedStates.metadata) {\r\n      this.metadata = savedStates.metadata;\r\n    }\r\n    if (savedStates.global) {\r\n      this.nodes = savedStates.global.nodes;\r\n    }\r\n\r\n    // The following lines trigger autoruns.\r\n    this.rawGraph = savedStates.rawGraph;\r\n    if (savedStates.positions) {\r\n      this.positions = savedStates.positions;\r\n    }\r\n    if (savedStates.nodesShowingLabels) {\r\n      this.initialNodesShowingLabels = savedStates.nodesShowingLabels;\r\n    }\r\n  }\r\n}\r\n","import { observable } from \"mobx\";\r\n\r\nexport default class ImportStore {\r\n  @observable graphFile = \"\";\r\n  @observable stateFile = \"\";\r\n\r\n  @observable dialogOpen = false;\r\n\r\n  @observable loading = false;\r\n\r\n  // Argo-lite specific: File object selected via the file input.\r\n  @observable selectedEdgeFileFromInput = null;\r\n  @observable selectedNodeFileFromInput = null;\r\n\r\n  @observable\r\n  importConfig = {\r\n    nodeFile: {\r\n      path: \"\",\r\n      topN: [],\r\n      hasColumns: true,\r\n      ready: false, // whether the topN is ready to display\r\n      columns: [],\r\n      mapping: {\r\n        id: \"<UNK>\"\r\n      },\r\n      delimiter: \",\"\r\n    },\r\n    edgeFile: {\r\n      path: \"\",\r\n      ready: false,\r\n      hasColumns: true,\r\n      columns: [],\r\n      topN: [],\r\n      mapping: {\r\n        fromId: \"<UNK>\",\r\n        toId: \"<UNK>\"\r\n      },\r\n      createMissing: true,\r\n      delimiter: \",\"\r\n    }\r\n  };\r\n}\r\n","import { observable } from \"mobx\";\r\n\r\nexport default class ProjectStore {\r\n \r\n  @observable projects = [];\r\n\r\n  /*\r\n   * Active project and snapshot\r\n   */\r\n  @observable currentProject = null;\r\n  // @observable currentProjectName = null;\r\n  // @observable currentProjectPath = null;\r\n  @observable currentSnapshotName = \"Quick Save\"; // TODO: If not loaded from snapshot, use this, otherwise use the name of the loaded snapshot\r\n\r\n  // [Argo-lite] for displaying snapshot file in textarea to be copied\r\n  @observable stringCopyOfSnapshot = 'Loading';\r\n  \r\n  /*\r\n   * Dialogs and UI\r\n   */\r\n  @observable isNewProjectDialogOpen = false;\r\n  @observable isProjectDetailDialogOpen = false;\r\n  @observable isSaveSnapshotDialogOpen = false;\r\n  @observable isRenameSnapshotDialogOpen = false;\r\n  // when the ipc returns the projects data for the first time\r\n  // turn off `isFetching` so that the spinner of WorkspaceView will be turned off\r\n  // Also used when refreshing WorkspaceView\r\n  @observable isFetching = true;\r\n\r\n  /*\r\n   * New project creation and import\r\n   */\r\n  @observable newProjectName = '';\r\n}\r\n","import { observable } from \"mobx\";\r\n\r\nexport default class SearchStore {\r\n  @observable searchStr = \"\";\r\n  @observable candidates = [];\r\n  @observable numCandidates = 0;\r\n  @observable panelOpen = false;\r\n}\r\n","import { autorun, runInAction } from \"mobx\";\r\nimport { Intent } from \"@blueprintjs/core\";\r\n\r\nimport PreferencesStore from \"./PreferencesStore\";\r\nimport GraphStore from \"./GraphStore\";\r\nimport ImportStore from \"./ImportStore\";\r\nimport ProjectStore from \"./ProjectStore\";\r\n// import { peakCSV } from \"../services/CSVUtils\";\r\nimport parse from \"csv-parse/lib/sync\";\r\nimport SearchStore from \"./SearchStore\";\r\nimport { runSearch } from \"../ipc/client\";\r\n\r\nimport { BACKEND_URL } from \"../constants\";\r\nimport { toaster } from '../notifications/client';\r\n\r\nexport class AppState {\r\n  constructor() {\r\n    this.preferences = new PreferencesStore();\r\n    this.graph = new GraphStore();\r\n    this.import = new ImportStore();\r\n    this.search = new SearchStore();\r\n    this.project = new ProjectStore();\r\n  }\r\n}\r\n\r\nconst appState = new AppState();\r\n\r\nwindow.appState = appState;\r\n\r\nconst loadSnapshotFromURL = (url) => {\r\n  return fetch(url, {\r\n    method: 'GET',\r\n    mode: 'cors'\r\n  }).then(response => response.text());\r\n};\r\n\r\nconst loadSnapshotFromStrapi = (uuid) => {\r\n  const url = `${BACKEND_URL}/snapshots?uuid=${uuid}`;\r\n  return fetch(url, {\r\n    method: 'GET',\r\n    mode: 'cors'\r\n  }).then(response => response.json()).then(json => json[0].body).catch(error => {\r\n    // TODO: Show user an error dialog saying graph cannot be fetched.\r\n  });\r\n};\r\n\r\nconst loadAndDisplaySnapshotFromURL = (url) => {\r\n  loadSnapshotFromURL(url).then(snapshotString => {\r\n    // use filename/last segment of URL as title in Navbar\r\n    appState.graph.metadata.snapshotName = url.split('/').pop() || url.split('/').pop().pop();\r\n    appState.graph.loadImmediateStates(snapshotString);\r\n  });\r\n};\r\n\r\nconst loadAndDisplaySnapshotFromStrapi = (uuid) => {\r\n  loadSnapshotFromStrapi(uuid).then(snapshotString => {\r\n    // TODO: use more sensible snapshot name\r\n    appState.graph.metadata.snapshotName = 'Shared';\r\n    appState.graph.loadImmediateStates(snapshotString);\r\n  });\r\n};\r\n\r\nwindow.loadAndDisplaySnapshotFromURL = loadAndDisplaySnapshotFromURL;\r\n\r\nwindow.loadInitialSampleGraph = async () => {\r\n  // default fallback url\r\n  let url = \"https://argo-graph-lite.s3.amazonaws.com/lesmiserables.json\";\r\n\r\n  // check url hash\r\n  if (window.location.hash) {\r\n    const hash = window.location.hash.substring(1);\r\n    // If the hash component begins with http.\r\n    if (hash.length >= 4 && hash.startsWith('http')) {\r\n      try {\r\n        url = decodeURIComponent(hash);\r\n      } catch (e) {\r\n        console.error(e);\r\n        alert('Provided URL is not valid.');\r\n      }\r\n    } else {\r\n      // If the hash component does not begin with http\r\n      // treat it as a uuid in strapi.\r\n      loadAndDisplaySnapshotFromStrapi(hash);\r\n      return;\r\n    }\r\n    \r\n  }\r\n  loadAndDisplaySnapshotFromURL(url)\r\n};\r\n\r\nwindow.saveSnapshotToString = () => {\r\n  const snapshotString = appState.graph.saveImmediateStates();\r\n  return snapshotString;\r\n};\r\n\r\n// Load initial sample graph when Argo Lite is ready\r\nwindow.addEventListener('load', (event) => {\r\n  window.loadInitialSampleGraph();\r\n});\r\n\r\nconst updateTimeout = null;\r\n\r\n// Load graph on frontend once the rawGraph has been returned from IPC\r\n// Once a graph has been loaded and displayed, even if nodes are all deleted, still consider it \"hasGraph\"\r\nautorun(() => {\r\n  if (!appState.graph.hasGraph && appState.graph.rawGraph.nodes.length > 0) {\r\n    appState.graph.hasGraph = true;\r\n  }\r\n})\r\n\r\nautorun(() => {\r\n  if (appState.graph.frame) {\r\n    appState.graph.frame.updateGraph(appState.graph.computedGraph);\r\n    appState.graph.frame.setAllNodesShape(appState.graph.nodes.shape);\r\n    appState.graph.frame.setLabelRelativeSize(appState.graph.nodes.labelSize);\r\n    appState.graph.frame.setLabelLength(appState.graph.nodes.labelLength);\r\n  }\r\n});\r\n\r\nautorun(() => {\r\n  if (appState.graph.frame && appState.graph.positions) {\r\n    // If positions are saved in a snapshot, pause layout upon loading.\r\n    appState.graph.frame.paused = true;\r\n    appState.graph.frame.updatePositions(appState.graph.positions);\r\n    appState.graph.positions = null;\r\n    console.log('[autorun] Positions updated.');\r\n  }\r\n  if (appState.graph.frame && appState.graph.initialNodesShowingLabels) {\r\n    appState.graph.frame.showLabels(appState.graph.initialNodesShowingLabels);\r\n    appState.graph.initialNodesShowingLabels = null;\r\n  }\r\n});\r\n\r\nautorun(() => {\r\n  const searchStr = appState.search.searchStr;\r\n  if (searchStr.length >= 3) {\r\n    runSearch(searchStr);\r\n  } else {\r\n    appState.search.panelOpen = false;\r\n    appState.search.candidates.splice(0, appState.search.candidates.length);\r\n    if (appState.graph.frame) {\r\n      appState.graph.frame.highlightNodeIds([], true);\r\n    }\r\n  }\r\n});\r\n\r\n// Argo-lite specific: extract CSV from File object and update related fields.\r\nautorun(() => {\r\n  const file = appState.import.selectedEdgeFileFromInput;\r\n  const hasHeader = appState.import.importConfig.edgeFile.hasColumns;\r\n  const delimiter = appState.import.importConfig.edgeFile.delimiter;\r\n\r\n  if (!file) {\r\n    return;\r\n  }\r\n  const reader = new FileReader();\r\n  reader.readAsText(file);\r\n\r\n  reader.onload = () => {\r\n    // Read entire CSV into memory as string\r\n    const fileAsString = reader.result;\r\n    // Get top 20 lines. Or if there's less than 10 line, get all the lines.\r\n    const lines = fileAsString.split('\\n');\r\n    const lineNumber = lines.length;\r\n    const topLinesAsString = lines.map(l => l.trim()).filter((l, i) => i < 20).join('\\n');\r\n    console.log(topLinesAsString);\r\n\r\n    // Parse the top lines\r\n    try {\r\n      const it = hasHeader ? parse(topLinesAsString, {\r\n        comment: \"#\",\r\n        trim: true,\r\n        auto_parse: true,\r\n        skip_empty_lines: true,\r\n        columns: hasHeader,\r\n        delimiter\r\n      }) : parse(topLinesAsString, {\r\n        comment: \"#\",\r\n        trim: true,\r\n        auto_parse: true,\r\n        skip_empty_lines: true,\r\n        columns: undefined,\r\n        delimiter\r\n      });\r\n      runInAction(\"preview top N lines of edge file\", () => {\r\n        appState.import.importConfig.edgeFile.topN = it;\r\n        appState.import.importConfig.edgeFile.columns = Object.keys(it[0]);\r\n        appState.import.importConfig.edgeFile.mapping.fromId = appState.import.importConfig.edgeFile.columns[0];\r\n        appState.import.importConfig.edgeFile.mapping.toId = appState.import.importConfig.edgeFile.columns[0]\r\n        appState.import.importConfig.edgeFile.ready = true;\r\n      });\r\n    } catch {\r\n      toaster.show({\r\n        message: 'Error: Fails to parse file',\r\n        intent: Intent.DANGER,\r\n        timeout: -1\r\n      });\r\n    }\r\n  };\r\n\r\n  reader.onerror = () => {\r\n    console.error(reader.error);\r\n    toaster.show({\r\n      message: 'Error: Fails to open file',\r\n      intent: Intent.DANGER,\r\n      timeout: -1\r\n    });\r\n  };\r\n});\r\n\r\nautorun(() => {\r\n  const file = appState.import.selectedNodeFileFromInput;\r\n  const hasHeader = appState.import.importConfig.nodeFile.hasColumns;\r\n  const delimiter = appState.import.importConfig.nodeFile.delimiter;\r\n\r\n  if (!file) {\r\n    return;\r\n  }\r\n  const reader = new FileReader();\r\n  reader.readAsText(file);\r\n\r\n  reader.onload = () => {\r\n    // Read entire CSV into memory as string\r\n    const fileAsString = reader.result;\r\n    // Get top 20 lines. Or if there's less than 10 line, get all the lines.\r\n    const lines = fileAsString.split('\\n');\r\n    const lineNumber = lines.length;\r\n    const topLinesAsString = lines.map(l => l.trim()).filter((l, i) => i < 20).join('\\n');\r\n    console.log(topLinesAsString);\r\n\r\n    // Parse the top lines\r\n    try {\r\n      const it = hasHeader ? parse(topLinesAsString, {\r\n        comment: \"#\",\r\n        trim: true,\r\n        auto_parse: true,\r\n        skip_empty_lines: true,\r\n        columns: hasHeader,\r\n        delimiter\r\n      }) : parse(topLinesAsString, {\r\n        comment: \"#\",\r\n        trim: true,\r\n        auto_parse: true,\r\n        skip_empty_lines: true,\r\n        columns: undefined,\r\n        delimiter\r\n      });\r\n\r\n      runInAction(\"preview top N lines of edge file\", () => {\r\n        appState.import.importConfig.nodeFile.topN = it;\r\n        appState.import.importConfig.nodeFile.columns = Object.keys(it[0]);\r\n        appState.import.importConfig.nodeFile.mapping.fromId = appState.import.importConfig.nodeFile.columns[0];\r\n        appState.import.importConfig.nodeFile.mapping.toId = appState.import.importConfig.nodeFile.columns[0]\r\n        appState.import.importConfig.nodeFile.ready = true;\r\n      });\r\n    } catch {\r\n      toaster.show({\r\n        message: 'Error: Fails to open file',\r\n        intent: Intent.DANGER,\r\n        timeout: -1\r\n      });\r\n    }\r\n  };\r\n\r\n  reader.onerror = () => {\r\n    console.error(reader.error);\r\n    toaster.show({\r\n      message: 'Error: Fails to open file',\r\n      intent: Intent.DANGER,\r\n      timeout: -1\r\n    });\r\n  };\r\n});\r\n\r\nexport default appState;\r\n","import React from \"react\";\r\nimport { Button, Classes, Dialog, Intent, Switch } from \"@blueprintjs/core\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\nimport { requestChangeWorkspace } from \"../ipc/client\";\r\n\r\n@observer\r\nclass PreferencesDialog extends React.Component {\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        iconName=\"cog\"\r\n        className={classnames({\r\n          [Classes.DARK]: appState.preferences.darkMode\r\n        })}\r\n        isOpen={appState.preferences.dialogOpen}\r\n        onClose={() => {\r\n          appState.preferences.dialogOpen = false;\r\n        }}\r\n        title=\"Preferences\"\r\n      >\r\n        <div className=\"pt-dialog-body\">\r\n          <Switch\r\n            label=\"Dark Mode\"\r\n            checked={appState.preferences.darkMode}\r\n            onChange={() => {\r\n              appState.preferences.darkMode = !appState.preferences.darkMode;\r\n              appState.preferences.saveUserConfig();\r\n              if (appState.graph.frame) {\r\n                appState.graph.frame.toggleDark();\r\n              }\r\n            }}\r\n          />\r\n          \r\n          <p>Choose a different workspace directory (need to relaunch Argo)</p>\r\n          <div className={classnames(Classes.CONTROL_GROUP)}>\r\n            <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\r\n              <input\r\n                type=\"text\"\r\n                className={classnames(Classes.DISABLED, Classes.INPUT)}\r\n                placeholder=\"Select workspace directory\"\r\n                readOnly\r\n                value={appState.preferences.workspacePath}\r\n              />\r\n            </div>\r\n            <Button\r\n              intent={Intent.PRIMARY}\r\n              onClick={() => {\r\n                requestChangeWorkspace();\r\n              }}\r\n            >\r\n              Choose Directory\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"pt-dialog-footer\">\r\n          <div className=\"pt-dialog-footer-actions\">\r\n            <Button\r\n              intent={Intent.PRIMARY}\r\n              onClick={() => {\r\n                appState.preferences.dialogOpen = false;\r\n              }}\r\n              text=\"Done\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PreferencesDialog;","import React from \"react\";\r\nimport { Button, Classes, Collapse } from \"@blueprintjs/core\";\r\nimport classnames from \"classnames\";\r\n\r\nexport default ({ name, isOpen, onToggle, children }) => (\r\n  <div>\r\n    <Button\r\n      className={classnames(Classes.FILL, Classes.MINIMAL, \"text-align-left\")}\r\n      rightIconName={isOpen ? \"chevron-up\" : \"chevron-down\"}\r\n      onClick={onToggle}\r\n    >\r\n      {name}\r\n    </Button>\r\n    <Collapse isOpen={isOpen}>{children}</Collapse>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { Classes, MenuItem } from \"@blueprintjs/core\";\r\n\r\nexport default ({ handleClick, item, isActive }) => (\r\n  <MenuItem\r\n    className={isActive ? Classes.ACTIVE : \"\"}\r\n    key={item}\r\n    onClick={handleClick}\r\n    text={item}\r\n  />\r\n);\r\n","import React from \"react\";\r\nimport { Button, Classes } from \"@blueprintjs/core\";\r\nimport { Select } from \"@blueprintjs/labs\";\r\nimport CommonItemRenderer from \"./CommonItemRenderer\";\r\n\r\nexport default ({ items, onSelect, value, fill = false }) => (\r\n  <Select\r\n    items={items}\r\n    itemRenderer={CommonItemRenderer}\r\n    filterable={false}\r\n    onItemSelect={onSelect}\r\n  >\r\n    <Button className={fill ? Classes.FILL : null} text={value} />\r\n  </Select>\r\n);\r\n","/* eslint-disable jsx-a11y/label-has-for */\r\nimport React from \"react\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  Dialog,\r\n  Intent,\r\n  Spinner,\r\n  Switch\r\n} from \"@blueprintjs/core\";\r\nimport { Cell, Column, Table } from \"@blueprintjs/table\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\nimport {\r\n  requestChooseEdgeFile,\r\n  requestChooseNodeFile,\r\n  requestImportGraphFromCSV,\r\n  requestCreateNewProject\r\n} from \"../ipc/client\";\r\nimport Collapsable from \"./utils/Collapsable\";\r\nimport SimpleSelect from \"./utils/SimpleSelect\";\r\nimport { NODE_AND_EDGE_FILE, ONLY_EDGE_FILE } from \"../constants/index\";\r\n\r\n@observer\r\nclass PreviewTable extends React.Component {\r\n  render() {\r\n    const file = this.props.file;\r\n    return (\r\n      <Table\r\n        className=\"import-preview-table\"\r\n        numRows={file.topN.length}\r\n        selectedRegions={Object.values(file.mapping)\r\n          .map(it => file.columns.indexOf(it))\r\n          .map(it => ({ rows: null, cols: [it, it] }))}\r\n      >\r\n        {file.columns.map(it => (\r\n          <Column\r\n            key={it}\r\n            name={it}\r\n            renderCell={i => <Cell>{file.topN[i][it]}</Cell>}\r\n          />\r\n        ))}\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n\r\n@observer\r\nclass ImportDialog extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      available: ONLY_EDGE_FILE,\r\n      nodesOpen: true,\r\n      edgesOpen: true,\r\n      delimiter: ','\r\n    };\r\n  }\r\n\r\n  changeAvailable = targetValue => {\r\n    if (targetValue === ONLY_EDGE_FILE) {\r\n      appState.import.importConfig.edgeFile.createMissing = true;\r\n    }\r\n    this.setState({ available: targetValue });\r\n  };\r\n\r\n  canImport = () => {\r\n    if (this.state.available === NODE_AND_EDGE_FILE) {\r\n      return (\r\n        appState.import.importConfig.edgeFile.ready &&\r\n        appState.import.importConfig.nodeFile.ready\r\n      );\r\n    } else if (this.state.available === ONLY_EDGE_FILE) {\r\n      return appState.import.importConfig.edgeFile.ready;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  renderNodesSelection = () => {\r\n    const nodeFile = appState.import.importConfig.nodeFile;\r\n    if (this.state.available === ONLY_EDGE_FILE) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Collapsable\r\n        name=\"Nodes\"\r\n        isOpen={this.state.nodesOpen}\r\n        onToggle={() => this.setState({ nodesOpen: !this.state.nodesOpen })}\r\n      >\r\n        <div className={classnames(Classes.CONTROL_GROUP)}>\r\n          <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\r\n            <input\r\n              type=\"file\"\r\n              className={classnames(Classes.DISABLED)}\r\n              onChange={(event) => {\r\n                if (event.target.files.length < 1) {\r\n                  return;\r\n                }\r\n                appState.import.selectedNodeFileFromInput = event.target.files[0];\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Switch\r\n          label=\"Has Headers\"\r\n          checked={nodeFile.hasColumns}\r\n          onChange={() => (nodeFile.hasColumns = !nodeFile.hasColumns)}\r\n        />\r\n        {nodeFile.ready && (\r\n          <div className=\"column-selection\">\r\n            <PreviewTable file={nodeFile} />\r\n            Column for Node ID:\r\n            <SimpleSelect\r\n              items={nodeFile.columns}\r\n              value={nodeFile.mapping.id}\r\n              onSelect={it => (nodeFile.mapping.id = it)}\r\n            />\r\n          </div>\r\n        )}\r\n      </Collapsable>\r\n    );\r\n  };\r\n\r\n  renderEdgesSelection = () => {\r\n    const edgeFile = appState.import.importConfig.edgeFile;\r\n    return (\r\n      <Collapsable\r\n        name=\"Edges\"\r\n        isOpen={this.state.edgesOpen}\r\n        onToggle={() => this.setState({ edgesOpen: !this.state.edgesOpen })}\r\n      >\r\n        <div className={classnames(Classes.CONTROL_GROUP)}>\r\n          <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\r\n            <input\r\n              type=\"file\"\r\n              className={classnames(Classes.DISABLED)}\r\n              onChange={(event) => {\r\n                if (event.target.files.length < 1) {\r\n                  return;\r\n                }\r\n                appState.import.selectedEdgeFileFromInput = event.target.files[0];\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Switch\r\n          label=\"Has Headers\"\r\n          checked={edgeFile.hasColumns}\r\n          onChange={() => (edgeFile.hasColumns = !edgeFile.hasColumns)}\r\n        />\r\n        <Switch\r\n          label=\"Create Missing Nodes\"\r\n          checked={edgeFile.createMissing}\r\n          disabled={this.state.available === ONLY_EDGE_FILE}\r\n          onChange={() => (edgeFile.createMissing = !edgeFile.createMissing)}\r\n        />\r\n        {edgeFile.ready && (\r\n          <div className=\"column-selection\">\r\n            <PreviewTable file={edgeFile} />\r\n            Column for Source ID:\r\n            <SimpleSelect\r\n              items={edgeFile.columns}\r\n              value={edgeFile.mapping.fromId}\r\n              onSelect={it => (edgeFile.mapping.fromId = it)}\r\n            />{\" \"}\r\n            <br />\r\n            Column for Target ID:\r\n            <SimpleSelect\r\n              items={edgeFile.columns}\r\n              value={edgeFile.mapping.toId}\r\n              onSelect={it => (edgeFile.mapping.toId = it)}\r\n            />\r\n          </div>\r\n        )}\r\n      </Collapsable>\r\n    );\r\n  };\r\n\r\n  updateDelimiter (newDelimiter) {\r\n    this.setState({delimiter: newDelimiter});\r\n\r\n    if (newDelimiter == \"\\\\t\") {\r\n      newDelimiter = \"\\t\"\r\n    }\r\n\r\n    appState.import.importConfig.edgeFile.delimiter = newDelimiter\r\n    appState.import.importConfig.nodeFile.delimiter = newDelimiter\r\n  }\r\n\r\n  renderDelimiterSelection() {\r\n    return (\r\n      <div className=\"column-selection\">\r\n        Selected Delimiter\r\n        <SimpleSelect\r\n          items={[\",\", \"\\\\t\", \";\"]}\r\n          value={this.state.delimiter}\r\n          onSelect={it => { this.updateDelimiter(it) }}\r\n        />{\" \"}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        iconName=\"import\"\r\n        className={classnames({\r\n          [Classes.DARK]: appState.preferences.darkMode\r\n        })}\r\n        isOpen={appState.import.dialogOpen}\r\n        onClose={() => {\r\n          appState.import.dialogOpen = false;\r\n        }}\r\n        title=\"Import CSV\"\r\n      >\r\n        {appState.import.loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <div>\r\n            <div className={classnames(Classes.DIALOG_BODY, \"import-dialog\")}>\r\n              I have:\r\n              <SimpleSelect\r\n                items={[ONLY_EDGE_FILE, NODE_AND_EDGE_FILE]}\r\n                value={this.state.available}\r\n                onSelect={this.changeAvailable}\r\n              />\r\n              {this.renderNodesSelection()}\r\n              {this.renderEdgesSelection()}\r\n              {this.renderDelimiterSelection()}\r\n            </div>\r\n            <div className={Classes.DIALOG_FOOTER}>\r\n              <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n                <Button\r\n                  className={classnames({\r\n                    [Classes.DISABLED]: !this.canImport()\r\n                  })}\r\n                  intent={Intent.PRIMARY}\r\n                  onClick={() => {\r\n                    // TODO: this might be unsafe, check if there's racing condition\r\n                    requestCreateNewProject({\r\n                      name: appState.project.newProjectName,\r\n                      createdDate: new Date().toLocaleString(),\r\n                    });\r\n                    requestImportGraphFromCSV( //edgefile.delimiter and nodefile.delimiter are the same\r\n                      this.state.available === NODE_AND_EDGE_FILE, appState.import.importConfig.edgeFile.delimiter, appState.project.newProjectName\r\n                    );\r\n                  }}\r\n                  text=\"Import\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImportDialog;","/* eslint-disable jsx-a11y/label-has-for */\r\n\r\n/**\r\n * [Deprecated] This dialog is only used to open SQlite-based\r\n * graph file and optionally along with a snapshot file.\r\n * \r\n * For Argo-lite, which only has the JSON snapshot file,\r\n * use OpenSnapshotDialog.\r\n */\r\nimport React from \"react\";\r\nimport { Button, Classes, Dialog, Intent, Spinner } from \"@blueprintjs/core\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\nimport {\r\n  requestChooseGraphFile,\r\n  requestChooseStateFile,\r\n  requestOpen\r\n} from \"../ipc/client\";\r\nimport SimpleSelect from \"./utils/SimpleSelect\";\r\nimport {\r\n  GRAPH_AND_STATE_FILE,\r\n  ONLY_EDGE_FILE,\r\n  ONLY_GRAPH_FILE\r\n} from \"../constants\";\r\n\r\n@observer\r\nclass OpenDialog extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      available: ONLY_GRAPH_FILE,\r\n      selectedGraph: null,\r\n      selectedState: null\r\n    };\r\n  }\r\n\r\n  canImport = () => {\r\n    if (this.state.available === GRAPH_AND_STATE_FILE) {\r\n      return appState.import.stateFile && appState.import.graphFile;\r\n    } else {\r\n      return appState.import.graphFile;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  changeAvailable = targetValue => {\r\n    if (targetValue === ONLY_EDGE_FILE) {\r\n      appState.import.importConfig.edgeFile.createMissing = true;\r\n    }\r\n    this.setState({ available: targetValue });\r\n  };\r\n\r\n  renderSelectGraph = () => {\r\n    return (\r\n      <div className={classnames(Classes.CONTROL_GROUP)}>\r\n        <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\r\n          <input\r\n            type=\"text\"\r\n            className={classnames(Classes.DISABLED, Classes.INPUT)}\r\n            placeholder=\"Select graph file\"\r\n            readOnly\r\n            value={appState.import.graphFile}\r\n          />\r\n        </div>\r\n        <Button intent={Intent.PRIMARY} onClick={requestChooseGraphFile}>\r\n          Choose File\r\n        </Button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderSelectState = () => {\r\n    return (\r\n      <div className={classnames(Classes.CONTROL_GROUP)}>\r\n        <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\r\n          <input\r\n            type=\"text\"\r\n            className={classnames(Classes.DISABLED, Classes.INPUT)}\r\n            placeholder=\"Select snapshot file\"\r\n            readOnly\r\n            value={appState.import.stateFile}\r\n          />\r\n        </div>\r\n        <Button intent={Intent.PRIMARY} onClick={requestChooseStateFile}>\r\n          Choose File\r\n        </Button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        iconName=\"import\"\r\n        className={classnames({\r\n          [Classes.DARK]: appState.preferences.darkMode\r\n        })}\r\n        isOpen={appState.preferences.openDialogOpen}\r\n        onClose={() => {\r\n          appState.preferences.openDialogOpen = false;\r\n        }}\r\n        title=\"Open File\"\r\n      >\r\n        {appState.import.loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <div>\r\n            <div className={classnames(Classes.DIALOG_BODY, \"import-dialog\")}>\r\n              I have:\r\n              <SimpleSelect\r\n                items={[GRAPH_AND_STATE_FILE, ONLY_GRAPH_FILE]}\r\n                value={this.state.available}\r\n                onSelect={this.changeAvailable}\r\n              />\r\n              {this.renderSelectGraph()}\r\n              {this.state.available === GRAPH_AND_STATE_FILE &&\r\n                this.renderSelectState()}\r\n            </div>\r\n            <div className={Classes.DIALOG_FOOTER}>\r\n              <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n                <Button\r\n                  className={classnames({\r\n                    [Classes.DISABLED]: !this.canImport()\r\n                  })}\r\n                  intent={Intent.PRIMARY}\r\n                  onClick={() => {\r\n                    appState.preferences.openDialogOpen = false;\r\n                    requestOpen();\r\n                  }}\r\n                  text=\"Open\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpenDialog;","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  Dialog,\r\n  Intent,\r\n  Spinner,\r\n  Switch\r\n} from \"@blueprintjs/core\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\n\r\n@observer\r\nclass NewProjectDialog extends React.Component {\r\n  \r\n  render() {\r\n    const isNewProjectNameDuplicate = appState.project.projects.some(p => p.name === appState.project.newProjectName);\r\n    const isNewProjectNameEmpty = appState.project.newProjectName.trim() === '';\r\n    const isValidated = !(isNewProjectNameDuplicate || isNewProjectNameEmpty);\r\n  \r\n    return (\r\n      <Dialog\r\n        iconName=\"projects\"\r\n        isOpen={appState.project.isNewProjectDialogOpen}\r\n        onClose={() => {\r\n          appState.project.isNewProjectDialogOpen = false;\r\n        }}\r\n        title=\"Create New Project\"\r\n      >\r\n        <div className={Classes.DIALOG_BODY}>\r\n          <label className=\"pt-label .modifier\">\r\n            Project Name\r\n            <span className=\"pt-text-muted\"> (required){isNewProjectNameDuplicate && ' (This name has already been taken!)'}</span>\r\n            <input\r\n              className=\"pt-input\"\r\n              type=\"text\"\r\n              placeholder=\"New Project\"\r\n              dir=\"auto\"\r\n              value={appState.project.newProjectName}\r\n              onChange={event => {\r\n                appState.project.newProjectName = event.target.value;\r\n              }}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={Classes.DIALOG_FOOTER}>\r\n          <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n            <Button\r\n              className={classnames({\r\n                [Classes.DISABLED]: !isValidated\r\n              })}\r\n              intent={Intent.PRIMARY}\r\n              onClick={() => {\r\n                if (isValidated) {\r\n                  appState.project.isNewProjectDialogOpen = false;\r\n                  appState.import.dialogOpen = true;\r\n                }\r\n              }}\r\n              text=\"Next\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewProjectDialog;","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  Card,\r\n  Icon,\r\n  Dialog,\r\n  Intent,\r\n  Spinner\r\n} from \"@blueprintjs/core\";\r\nimport { requestOpen, requestDelete } from \"../ipc/client\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\n\r\n@observer\r\nclass ProjectDetailDialog extends React.Component {\r\n  render() {\r\n    return (\r\n      appState.project.currentProject && (\r\n        <Dialog\r\n          iconName=\"projects\"\r\n          isOpen={appState.project.isProjectDetailDialogOpen}\r\n          onClose={() => {\r\n            appState.project.isProjectDetailDialogOpen = false;\r\n          }}\r\n          title={`Load ${appState.project.currentProject.name} Project`}\r\n        >\r\n          {appState.project.currentProject.hasGraphData ? (\r\n            <div className={Classes.DIALOG_BODY}>\r\n              <Card\r\n                interactive={true}\r\n                elevation={Card.ELEVATION_TWO}\r\n                onClick={() => {\r\n                  appState.import.graphFile =\r\n                    appState.project.currentProject.graphDataPath;\r\n                  appState.project.isProjectDetailDialogOpen = false;\r\n                  requestOpen();\r\n                }}\r\n              >\r\n                <Icon iconName=\"graph\" /> Start fresh from original graph\r\n              </Card>\r\n              <hr />\r\n              <div className=\"argo-menu-list-header\">Load recent snapshots</div>\r\n              <div>\r\n                {appState.project.currentProject.snapshotPaths.map(\r\n                  snapshotPath => {\r\n                    return (\r\n                      <div key={snapshotPath}>\r\n                        <Card\r\n                          interactive={false}\r\n                          elevation={Card.ELEVATION_TWO}\r\n                        >\r\n                          {/* <Icon iconName=\"layout\" /> */}\r\n                          <h5>\r\n                            {snapshotPath\r\n                              .replace(/^.*[\\\\\\/]/, \"\")\r\n                              .replace(/\\.[^/.]+$/, \"\")}\r\n                          </h5>\r\n                          <Button\r\n                            className={classnames([\r\n                              Classes.BUTTON,\r\n                              Classes.INTENT_PRIMARY\r\n                            ])}\r\n                            onClick={() => {\r\n                              appState.import.graphFile =\r\n                                appState.project.currentProject.graphDataPath;\r\n                              appState.import.stateFile = snapshotPath;\r\n                              appState.project.currentSnapshotName = snapshotPath\r\n                                .replace(/^.*[\\\\\\/]/, \"\")\r\n                                .replace(/\\.[^/.]+$/, \"\");\r\n                              appState.project.isProjectDetailDialogOpen = false;\r\n                              requestOpen();\r\n                            }}\r\n                          >\r\n                            Load Snapshot\r\n                          </Button>\r\n                          <Button\r\n                            className={classnames([Classes.BUTTON])}\r\n                            onClick={() => {\r\n                              // TODO: Open a confirmation dialog\r\n                              requestDelete(snapshotPath);\r\n                              appState.project.currentProject.snapshotPaths = appState.project.currentProject.snapshotPaths.filter(\r\n                                path => path !== snapshotPath\r\n                              );\r\n                            }}\r\n                          >\r\n                            Delete\r\n                          </Button>\r\n                        </Card>\r\n                      </div>\r\n                    );\r\n                  }\r\n                )}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              Error: Cannot find .argograph file in this project directory.\r\n            </div>\r\n          )}\r\n        </Dialog>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectDetailDialog;","/**\r\n * [Argo-lite Modified]\r\n * In electron Argo, snapshots are saved to the active project folder.\r\n * In Argo-lite, snapshots are saved as a file download.\r\n * Sometimes, it's tricky to let browser download something without a backend\r\n * hosting the file. Thus we also allow user to copy paste from\r\n * a text area containing our snapshot JSON.\r\n * \r\n * Remember to change appState.project.stringCopyOfSnapshot\r\n * before showing the dialog.\r\n */\r\nimport React from \"react\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  Card,\r\n  Icon,\r\n  Dialog,\r\n  Intent,\r\n  Spinner\r\n} from \"@blueprintjs/core\";\r\nimport { requestSaveSnapshot } from \"../ipc/client\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\n\r\n@observer\r\nclass SaveSnapshotDialog extends React.Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     name: \"Quick Save\",\r\n  //   };\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n        <Dialog\r\n          iconName=\"projects\"\r\n          isOpen={appState.project.isSaveSnapshotDialogOpen}\r\n          onClose={() => {\r\n            appState.project.isSaveSnapshotDialogOpen = false;\r\n          }}\r\n          title={`Save Snapshot`}\r\n        >\r\n          <div className={classnames(Classes.DIALOG_BODY)}>\r\n            {/* <label className=\"pt-label .modifier\">\r\n              Snapshot Name\r\n              <span className=\"pt-text-muted\"> (required)</span>\r\n              <input\r\n                className=\"pt-input\"\r\n                type=\"text\"\r\n                placeholder=\"My Snapshot\"\r\n                dir=\"auto\"\r\n                value={this.state.name}\r\n                onChange={event => this.setState({ name: event.target.value })}\r\n              />\r\n            </label> */}\r\n            <p>If your browser doesn't start downloading the file, you can manually copy the content below and save to a plain text file.</p>\r\n            <input id=\"snapshot-textarea\" type=\"textarea\" value={appState.project.stringCopyOfSnapshot} readOnly />\r\n            <button\r\n              onClick={() => {\r\n                document.getElementById('snapshot-textarea').select();\r\n                document.execCommand(\"copy\");\r\n              }}\r\n            >\r\n              Copy to Clipboard\r\n            </button>\r\n          </div>\r\n\r\n          <div className={Classes.DIALOG_FOOTER}>\r\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n              <Button\r\n                // className={classnames({\r\n                //   [Classes.DISABLED]: !this.state.name\r\n                // })}\r\n                intent={Intent.PRIMARY}\r\n                onClick={() => {\r\n                  appState.project.isSaveSnapshotDialogOpen = false;\r\n                }}\r\n                text=\"Done\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SaveSnapshotDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Card,\n  Icon,\n  Dialog,\n  Intent,\n  Spinner\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\n\n@observer\nclass SaveSnapshotDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n    };\n  }\n\n  render() {\n    return (\n        <Dialog\n          iconName=\"projects\"\n          isOpen={appState.project.isRenameSnapshotDialogOpen}\n          onClose={() => {\n            appState.project.isRenameSnapshotDialogOpen = false;\n          }}\n          title={`Rename Snapshot`}\n        >\n          <div className={classnames(Classes.DIALOG_BODY)}>\n            <label className=\"pt-label .modifier\">\n              Snapshot Name\n              <span className=\"pt-text-muted\"> (required)</span>\n              <input\n                className=\"pt-input\"\n                type=\"text\"\n                placeholder=\"My Snapshot\"\n                dir=\"auto\"\n                value={this.state.name}\n                onChange={event => this.setState({ name: event.target.value })}\n              />\n            </label>\n          </div>\n\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                className={classnames({\n                  [Classes.DISABLED]: !this.state.name\n                })}\n                intent={Intent.PRIMARY}\n                onClick={() => {\n                  appState.graph.metadata.snapshotName = this.state.name;\n                  appState.project.isRenameSnapshotDialogOpen = false;\n                }}\n                text=\"Done\"\n              />\n            </div>\n          </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default SaveSnapshotDialog;","/**\n * [Argo-lite] Open the Argo-lite JSON graph snapshot file\n */\nimport React from \"react\";\nimport { Button, Classes, Dialog, Intent } from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport SimpleSelect from \"./utils/SimpleSelect\";\nimport { toaster } from '../notifications/client';\n\n@observer\nclass OpenSnapshotDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        selectedFile: null\n    };\n  }\n\n  render() {\n    return (\n      <Dialog\n        iconName=\"import\"\n        className={classnames({\n          [Classes.DARK]: appState.preferences.darkMode\n        })}\n        isOpen={appState.preferences.openSnapshotDialogOpen}\n        onClose={() => {\n          appState.preferences.openSnapshotDialogOpen = false;\n        }}\n        title=\"Open File\"\n      >\n        <div>\n            <div className={classnames(Classes.DIALOG_BODY)}>\n                <div className={classnames(Classes.CONTROL_GROUP)}>\n                    <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\n                        <input\n                            type=\"file\"\n                            className={classnames(Classes.DISABLED)}\n                            onChange={(event) => {\n                                if (event.target.files.length < 1) {\n                                    return;\n                                }\n                                this.setState({\n                                    selectedFile: event.target.files[0]\n                                });\n                            }}\n                        />\n                    </div>\n                </div>\n            </div>\n            <div className={Classes.DIALOG_FOOTER}>\n              <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n                <Button\n                  className={classnames({\n                    [Classes.DISABLED]: !this.state.selectedFile\n                  })}\n                  intent={Intent.PRIMARY}\n                  onClick={() => {\n                    // This dialog is closed when user is done selecting file\n                    appState.preferences.openSnapshotDialogOpen = false;\n\n                    // Show user a notification\n                    toaster.show({\n                        message: 'Loading Graph Snapshot. Please wait...',\n                        intent: Intent.NONE,\n                        timeout: 2000\n                    });\n                    \n                    // Read the file and load snapshot\n                    const reader = new FileReader();\n                    reader.readAsText(this.state.selectedFile);\n\n                    reader.onload = () => {\n                        const fileAsString = reader.result;\n                        appState.graph.loadImmediateStates(fileAsString);\n                    }\n                  }}\n                  text=\"Open\"\n                />\n              </div>\n            </div>\n          </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default OpenSnapshotDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Card,\n  Icon,\n  Dialog,\n  Intent,\n  Spinner\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport { toaster } from '../notifications/client';\n\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport { BACKEND_URL } from \"../constants\";\n\nconst uuidv4 = require('uuid/v4');\n\n@observer\nclass ShareDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShared: false,\n      isFetching: false,\n      sharedURL: 'Error: Sharing failed'\n    };\n\n    this.handleRequest = this.handleRequest.bind(this);\n  }\n\n  async handleRequest(uuid) {\n    // return await new Promise(resolve => setTimeout(resolve, 2000));\n    const backendURL = `${BACKEND_URL}/snapshots`;\n    // TODO: add better error handling\n    return await fetch(backendURL, {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        referrer: 'no-referrer',\n        body: JSON.stringify({\n            uuid,\n            body: window.saveSnapshotToString()\n        }),\n    }).then(response => response.ok).catch(error => {\n        toaster.show({\n            message: 'Failed to publish to sharing server. Please try again later.',\n            intent: Intent.DANGER,\n            timeout: -1\n        });\n    });\n  }\n\n  render() {\n    return (\n        <Dialog\n            iconName=\"projects\"\n            isOpen={appState.preferences.shareDialogOpen}\n            onClose={() => {\n            appState.preferences.shareDialogOpen = false;\n            }}\n            title={`Share Graph`}\n        >\n            <div className={classnames(Classes.DIALOG_BODY)}>\n            {\n                !this.state.isShared && (\n                    <p>You can share the current state of your graph to a public URL that you can share with your friends! (*this will make your graph public)</p>\n                )\n            }\n            {\n                this.state.isFetching && (\n                    <p><b>Sharing in progress. Please wait...</b></p>\n                )\n            }\n            {\n                this.state.isShared && (\n                    <div>\n                        Your graph has been shared to <code>{this.state.sharedURL}</code>\n                    </div>\n                )\n            }\n            </div>\n\n            <div className={Classes.DIALOG_FOOTER}>\n                <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n                    <Button\n                    className={classnames({\n                        [Classes.DISABLED]: this.state.isFetching || this.state.isShared\n                    })}\n                    intent={Intent.PRIMARY}\n                    onClick={async () => {\n                        this.setState({ isFetching: true })\n                        // Generate a random UUID\n                        const uuid = uuidv4();\n                        // Generate URL corresponding to the UUID\n                        const sharedURL = `https://poloclub.github.io/argo-graph-lite/#${uuid}`;\n\n                        // Wait for backend response\n                        const requestSuccess = await this.handleRequest(uuid);\n                        // Update local state\n                        if (requestSuccess) {\n                            this.setState({ isFetching: false, isShared: true, sharedURL });\n                        } else {\n                            // request fails, toast fired\n                            this.setState({ isFetching: false, isShared: false });\n                        }\n                        \n                    }}\n                    text=\"Share\"\n                    />\n                </div>\n            </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default ShareDialog;","import React from \"react\";\r\nimport PreferencesDialog from \"./PreferencesDialog\";\r\nimport ImportDialog from \"./ImportDialog\";\r\nimport OpenDialog from \"./OpenDialog\";\r\nimport NewProjectDialog from \"./NewProjectDialog\";\r\nimport ProjectDetailDialog from \"./ProjectDetailDialog\";\r\nimport SaveSnapshotDialog from \"./SaveSnapshotDialog\";\r\nimport RenameSnapshotDialog from \"./RenameSnapshotDialog\";\r\nimport OpenSnapshotDialog from \"./OpenSnapshotDialog\";\r\nimport ShareDialog from './ShareDialog';\r\n\r\nexport default class Dialogs extends React.Component {\r\n  render() {\r\n    return (\r\n      <div style={{ display: \"none\" }}>\r\n        <PreferencesDialog />\r\n        <ImportDialog />\r\n        <OpenDialog />\r\n        <OpenSnapshotDialog />\r\n        <NewProjectDialog />\r\n        <ProjectDetailDialog />\r\n        <SaveSnapshotDialog />\r\n        <RenameSnapshotDialog />\r\n        <ShareDialog />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  InputGroup,\r\n  Intent,\r\n  Position,\r\n  Tooltip,\r\n  Popover,\r\n  Menu,\r\n  MenuItem,\r\n  MenuDivider\r\n} from \"@blueprintjs/core\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport appState from \"../stores/index\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\n\r\n@observer\r\nclass Navbar extends React.Component {\r\n  render() {\r\n    return (\r\n      <nav className={classnames([Classes.NAVBAR])}>\r\n        <div className={classnames([Classes.NAVBAR_GROUP, Classes.ALIGN_LEFT])}>\r\n          <div className={classnames([Classes.NAVBAR_HEADING])}>ARGO <small>Lite</small></div>\r\n          {/* <a\r\n            href=\"https://poloclub.github.io/argo-graph/\"\r\n            target='_blank'\r\n            style={{\r\n              padding: '6px 10px 6px 10px',\r\n              backgroundColor: 'pink',\r\n              color: 'white',\r\n              borderRadius: '4px',\r\n              textDecoration: 'none'\r\n            }}\r\n          >\r\n            Learn more about Argo\r\n          </a> */}\r\n          <Popover\r\n            content={\r\n              <Menu>\r\n                <MenuItem text=\"Load Sample\" iconName=\"graph\">\r\n                  <MenuItem\r\n                    iconName=\"graph\"\r\n                    text=\"Les Miserables\"\r\n                    onClick={() => {\r\n                      window.loadAndDisplaySnapshotFromURL(\"https://argo-graph-lite.s3.amazonaws.com/lesmiserables.json\");\r\n                    }}\r\n                  />\r\n                </MenuItem>\r\n                <MenuDivider />\r\n                <MenuItem\r\n                  iconName=\"import\"\r\n                  text=\"Import from CSV...\"\r\n                  onClick={() => (appState.import.dialogOpen = true)}\r\n                />\r\n                <MenuItem\r\n                  iconName=\"pt-icon-document-open\"\r\n                  text=\"Open Snapshot\"\r\n                  onClick={() => {appState.preferences.openSnapshotDialogOpen = true}}\r\n                />\r\n                <MenuDivider />\r\n                <MenuItem\r\n                  iconName=\"download\"\r\n                  text=\"Save Snapshot\"\r\n                  onClick={() => {\r\n                    appState.project.stringCopyOfSnapshot = appState.graph.saveImmediateStates();\r\n                    appState.project.isSaveSnapshotDialogOpen = true\r\n                  }}\r\n                />\r\n                <MenuItem\r\n                  iconName=\"pt-icon-document-share\"\r\n                  text=\"Publish and Share Snapshot\"\r\n                  onClick={() => {appState.preferences.shareDialogOpen = true}}\r\n                />\r\n              </Menu>\r\n            }\r\n            position={Position.BOTTOM}\r\n          >\r\n            <Button\r\n              className={classnames([Classes.BUTTON, Classes.MINIMAL])}\r\n              iconName=\"document\"\r\n            >\r\n              Graph\r\n            </Button>\r\n          </Popover>\r\n        </div>\r\n        <div className={classnames([Classes.NAVBAR_GROUP, Classes.ALIGN_LEFT])}>\r\n        <span className={Classes.NAVBAR_DIVIDER} />\r\n        {appState.graph.hasGraph && appState.graph.frame && (\r\n            <div style={{ display: \"inline\" }}>\r\n              <Tooltip\r\n                content={appState.graph.frame.paused ? \"Resume Layout Algorithm\" : \"Pause Layout Algorithm\"}\r\n                position={Position.BOTTOM}\r\n              >\r\n                <Button\r\n                  className={classnames([Classes.BUTTON, Classes.MINIMAL])}\r\n                  iconName={appState.graph.frame.paused ? \"play\" : \"pause\"}\r\n                  text={appState.graph.frame.paused ? \"Resume Layout\" : \"Pause Layout\"}\r\n                  onClick={() => {\r\n                    if (appState.graph.frame.paused) {\r\n                      appState.graph.frame.resumeLayout();\r\n                      this.forceUpdate();\r\n                    } else {\r\n                      appState.graph.frame.pauseLayout();\r\n                      this.forceUpdate();\r\n                    }\r\n                  }}\r\n                />\r\n              </Tooltip>\r\n\r\n              {// This menu only shows when there are nodes selected\r\n              appState.graph.selectedNodes.length > 0 && (\r\n                <div style={{ display: \"inline\" }}>\r\n                  {/* <span className={Classes.NAVBAR_DIVIDER} /> */}\r\n                  <Tooltip\r\n                    content=\"Pin Selected Nodes\"\r\n                    position={Position.BOTTOM}\r\n                  >\r\n                    <Button\r\n                      className={classnames([\r\n                        Classes.BUTTON,\r\n                        Classes.MINIMAL\r\n                      ])}\r\n                      iconName=\"pin\"\r\n                      text=\"Pin\"\r\n                      intent={Intent.PRIMARY}\r\n                      onClick={() => {\r\n                        appState.graph.frame.pinSelectedNodes();\r\n                        this.forceUpdate();\r\n                      }}\r\n                    />\r\n                  </Tooltip>\r\n                  <Tooltip\r\n                    content=\"Unpin Selected Nodes\"\r\n                    position={Position.BOTTOM}\r\n                  >\r\n                    <Button\r\n                      className={classnames([\r\n                        Classes.BUTTON,\r\n                        Classes.MINIMAL\r\n                      ])}\r\n                      iconName=\"unpin\"\r\n                      text=\"Unpin\"\r\n                      intent={Intent.WARNING}\r\n                      onClick={() => {\r\n                        appState.graph.frame.unpinSelectedNodes();\r\n                        this.forceUpdate();\r\n                      }}\r\n                    />\r\n                  </Tooltip>\r\n                  <Tooltip\r\n                    content=\"Delete Selected Nodes\"\r\n                    position={Position.BOTTOM}\r\n                  >\r\n                    <Button\r\n                      className={classnames([\r\n                        Classes.BUTTON,\r\n                        Classes.MINIMAL\r\n                      ])}\r\n                      iconName=\"delete\"\r\n                      text=\"Delete\"\r\n                      intent={Intent.DANGER}\r\n                      onClick={() => {\r\n                        appState.graph.removeNodes(\r\n                          appState.graph.frame.getSelectedIds()\r\n                        );\r\n                        this.forceUpdate();\r\n                      }}\r\n                    />\r\n                  </Tooltip>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div\r\n          className={classnames([Classes.NAVBAR_GROUP, Classes.ALIGN_RIGHT])}\r\n        >\r\n          <Button\r\n            className={classnames([Classes.BUTTON, Classes.MINIMAL])}\r\n            iconName=\"graph\"\r\n            onClick={() => {\r\n              appState.project.isRenameSnapshotDialogOpen = true;\r\n            }}\r\n          >\r\n            {appState.graph.metadata.snapshotName || \"Untitled Graph\"}\r\n            {\r\n              (appState.graph.metadata.fullNodes && appState.graph.metadata.fullEdges) ? (\r\n                ` (Nodes: ${appState.graph.metadata.fullNodes} Edges: ${appState.graph.metadata.fullEdges} )`\r\n              ) : null\r\n            }\r\n          </Button>\r\n          <span className={Classes.NAVBAR_DIVIDER} />\r\n          <Button\r\n            className={classnames([Classes.BUTTON, Classes.MINIMAL])}\r\n            iconName=\"cog\"\r\n            onClick={() => {\r\n              appState.preferences.dialogOpen = true;\r\n            }}\r\n          />\r\n          <span className={Classes.NAVBAR_DIVIDER} />\r\n          <a\r\n            href=\"https://poloclub.github.io/argo-graph/\"\r\n            target='_blank'\r\n            style={{\r\n              color: appState.preferences.darkMode ? 'white' : 'black',\r\n              fontSize: '120%',\r\n              textDecoration: 'none'\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faGithub} />\r\n          </a>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  Card,\r\n  Classes,\r\n  Spinner,\r\n  NonIdealState,\r\n  FocusStyleManager\r\n} from \"@blueprintjs/core\";\r\nimport appState from \"../stores/index\";\r\nimport { requestOpenWorkspaceFolder } from \"../ipc/client\";\r\n\r\n// Argo-lite: In lite, home screen is replaced by a loading screen\r\n// since there will always be a default graph showing.\r\n@observer\r\nclass WorkspaceView extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"workspace\">\r\n        {/* <Card\r\n          interactive={true}\r\n          elevation={Card.ELEVATION_TWO}\r\n          onClick={() => {\r\n            appState.project.isNewProjectDialogOpen = true;\r\n          }}\r\n        >\r\n          <Icon iconName=\"plus\" /> Create New Project\r\n        </Card>\r\n        <Card\r\n          interactive={true}\r\n          elevation={Card.ELEVATION_TWO}\r\n          onClick={() => {\r\n            requestOpenWorkspaceFolder();\r\n          }}\r\n        >\r\n          <Icon iconName=\"cog\" /> Manage Workspace\r\n        </Card>\r\n        <hr />\r\n        <div className=\"argo-menu-list-header\">My Projects</div>\r\n        <div style={{ paddingBottom: '100px' }}>\r\n          {appState.project.isFetching ? (\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <Spinner />\r\n            </div>\r\n          ) : appState.project.projects.length > 0 ? (\r\n            appState.project.projects.map(project => {\r\n              return (\r\n                <div key={project.name}>\r\n                  <Card\r\n                    interactive={true}\r\n                    elevation={Card.ELEVATION_TWO}\r\n                    onClick={() => {\r\n                      appState.project.currentProject = project;\r\n                      appState.project.isProjectDetailDialogOpen = true;\r\n                    }}\r\n                  >\r\n                    <h5>{project.name}</h5>\r\n                    <p>Created: {project.createdDate || 'Unknown'}</p>\r\n                  </Card>\r\n                </div>\r\n              );\r\n            })\r\n          ) : (\r\n            <div style={{ textAlign: \"center\" }}>\r\n              Workspace is empty. Start by creating a new project.\r\n            </div>\r\n          )}\r\n        </div> */}\r\n        <div style={{ textAlign: \"center\", height: \"100vh\" }}>\r\n          <Spinner />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WorkspaceView;","import React from \"react\";\r\nimport { Frame } from \"../graph-frontend\";\r\nimport { ContextMenu, MenuFactory, MenuItemFactory } from \"@blueprintjs/core\";\r\nimport appState from \"../stores\";\r\nimport { requestNeighbors } from \"../ipc/client\";\r\n\r\nexport default class ThreeJSVis extends React.Component {\r\n  componentDidMount() {\r\n    console.log(\"!!!!!\");\r\n    const graphFrame = new Frame(appState.graph.computedGraph);\r\n    graphFrame.init();\r\n    graphFrame.display();\r\n    appState.graph.frame = graphFrame;\r\n    graphFrame.ee.on(\"select-nodes\", nodes => {\r\n      appState.graph.selectedNodes = nodes;\r\n    });\r\n    graphFrame.ee.on(\"show-node-label\", nodes => {\r\n      appState.graph.nodesShowingLabels = nodes;\r\n    });\r\n    graphFrame.ee.on(\"right-click\", data => {\r\n      const menu = MenuFactory({\r\n        children: [\r\n          MenuItemFactory({\r\n            onClick: () => {\r\n              appState.graph.frame.toggleSelectedLabels();\r\n            },\r\n            text: `Toggle Labels`\r\n          }),\r\n          MenuItemFactory({\r\n            onClick: () => {\r\n              appState.graph.frame.unpinSelectedNodes();\r\n            },\r\n            text: `Unpin Selected`\r\n          }),\r\n          // MenuItemFactory({\r\n          //   onClick: () => {\r\n          //     requestNeighbors(\r\n          //       appState.graph.frame.rightClickedNode.id,\r\n          //       \"degree\",\r\n          //       \"10\"\r\n          //     );\r\n          //   },\r\n          //   text: `Add 10 Neighbors by Degree`\r\n          // }),\r\n          // MenuItemFactory({\r\n          //   onClick: () => {\r\n          //     requestNeighbors(\r\n          //       appState.graph.frame.rightClickedNode.id,\r\n          //       \"pagerank\",\r\n          //       \"10\"\r\n          //     );\r\n          //   },\r\n          //   text: `Add 10 Neighbors by Pagerank`\r\n          // })\r\n        ]\r\n      });\r\n      ContextMenu.show(menu, { left: data.pageX, top: data.pageY }, () => {\r\n        // onMenuClose\r\n        console.log(\"ContextMenu closed\");\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        id=\"graph-container\"\r\n        style={{\r\n          width: \"100vw\",\r\n          height: \"90vh\",\r\n          flex: \"1\",\r\n          position: \"absolute\"\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Button, Classes, RangeSlider } from \"@blueprintjs/core\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { Popover2, Select } from \"@blueprintjs/labs\";\r\nimport classnames from \"classnames\";\r\nimport { runInAction } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\nimport pluralize from \"pluralize\";\r\nimport appState from \"../../stores\";\r\nimport { scales } from \"../../constants/index\";\r\nimport Collapsable from \"../utils/Collapsable\";\r\nimport SimpleSelect from \"../utils/SimpleSelect\";\r\nimport CommonItemRenderer from \"../utils/CommonItemRenderer\";\r\n\r\n@observer\r\nclass GlobalPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      timeOutRef: null,\r\n      sizeOptionOpen: false,\r\n      colorOptionOpen: false,\r\n      shapeOptionOpen: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Collapsable\r\n          name=\"Color\"\r\n          isOpen={this.state.colorOptionOpen}\r\n          onToggle={() =>\r\n            this.setState({\r\n              colorOptionOpen: !this.state.colorOptionOpen\r\n            })\r\n          }\r\n        >\r\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n            Color by:\r\n            <SimpleSelect\r\n              items={appState.graph.allPropertiesKeyList}\r\n              onSelect={it => (appState.graph.nodes.colorBy = it)}\r\n              value={appState.graph.nodes.colorBy}\r\n            />\r\n            <br />\r\n            With scale:\r\n            <SimpleSelect\r\n              items={Object.keys(scales)}\r\n              onSelect={it => (appState.graph.nodes.color.scale = it)}\r\n              value={appState.graph.nodes.color.scale}\r\n            />\r\n            <br />\r\n            Using Gradient from\r\n            <Popover2>\r\n              <Button\r\n                text=\"  \"\r\n                style={{\r\n                  backgroundImage: \"inherit\",\r\n                  backgroundColor: appState.graph.nodes.color.from\r\n                }}\r\n              />\r\n              <SketchPicker\r\n                color={appState.graph.nodes.color.from}\r\n                onChange={it => (appState.graph.nodes.color.from = it.hex)}\r\n              />\r\n            </Popover2>\r\n            to\r\n            <Popover2>\r\n              <Button\r\n                text=\"  \"\r\n                style={{\r\n                  backgroundImage: \"inherit\",\r\n                  backgroundColor: appState.graph.nodes.color.to\r\n                }}\r\n              />\r\n              <SketchPicker\r\n                color={appState.graph.nodes.color.to}\r\n                onChange={it => (appState.graph.nodes.color.to = it.hex)}\r\n              />\r\n            </Popover2>\r\n            :\r\n            <br />\r\n            <svg width=\"220\" height=\"30\" className=\"gradient-preview\">\r\n              <defs>\r\n                <linearGradient\r\n                  x1=\"0%\"\r\n                  y1=\"50%\"\r\n                  x2=\"100%\"\r\n                  y2=\"50%\"\r\n                  id=\"theGradient\"\r\n                >\r\n                  <stop\r\n                    stopColor={appState.graph.nodes.color.from}\r\n                    stopOpacity=\"1\"\r\n                    offset=\"0%\"\r\n                  />\r\n                  <stop\r\n                    stopColor={appState.graph.nodes.color.to}\r\n                    stopOpacity=\"1\"\r\n                    offset=\"100%\"\r\n                  />\r\n                </linearGradient>\r\n              </defs>\r\n              <rect\r\n                x=\"0\"\r\n                y=\"0\"\r\n                width=\"220\"\r\n                height=\"50\"\r\n                fill=\"url(#theGradient)\"\r\n              />\r\n            </svg>\r\n          </div>\r\n        </Collapsable>\r\n\r\n        <Collapsable\r\n          name=\"Size\"\r\n          isOpen={this.state.sizeOptionOpen}\r\n          onToggle={() =>\r\n            this.setState({\r\n              sizeOptionOpen: !this.state.sizeOptionOpen\r\n            })\r\n          }\r\n        >\r\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n            Scale by:\r\n            <Select\r\n              items={appState.graph.allPropertiesKeyList}\r\n              itemRenderer={CommonItemRenderer}\r\n              filterable={false}\r\n              onItemSelect={it => (appState.graph.nodes.sizeBy = it)}\r\n            >\r\n              <Button text={appState.graph.nodes.sizeBy} />\r\n            </Select>\r\n            <br />\r\n            With scale:\r\n            <Select\r\n              items={Object.keys(scales)}\r\n              itemRenderer={CommonItemRenderer}\r\n              filterable={false}\r\n              onItemSelect={it => (appState.graph.nodes.size.scale = it)}\r\n            >\r\n              <Button text={appState.graph.nodes.size.scale} />\r\n            </Select>\r\n            <br />\r\n            Size Range:\r\n            <br />\r\n            <RangeSlider\r\n              min={1}\r\n              max={20}\r\n              stepSize={0.1}\r\n              labelStepSize={5}\r\n              onChange={([a, b]) => {\r\n                runInAction(\"update scale\", () => {\r\n                  appState.graph.nodes.size.min = a;\r\n                  appState.graph.nodes.size.max = b;\r\n                });\r\n              }}\r\n              value={[\r\n                appState.graph.nodes.size.min,\r\n                appState.graph.nodes.size.max\r\n              ]}\r\n            />\r\n          </div>\r\n        </Collapsable>\r\n\r\n        <Collapsable\r\n          name=\"Shape\"\r\n          isOpen={this.state.shapeOptionOpen}\r\n          onToggle={() =>\r\n            this.setState({\r\n              shapeOptionOpen: !this.state.shapeOptionOpen\r\n            })\r\n          }\r\n        >\r\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n            Node Shape:\r\n            <Select\r\n              items={[\r\n                \"circle\",\r\n                \"square\",\r\n                \"triangle\",\r\n                \"pentagon\",\r\n                \"hexagon\",\r\n                \"octagon\"\r\n              ]}\r\n              itemRenderer={CommonItemRenderer}\r\n              filterable={false}\r\n              onItemSelect={it => (appState.graph.nodes.shape = it)}\r\n            >\r\n              <Button text={appState.graph.nodes.shape} />\r\n            </Select>\r\n          </div>\r\n        </Collapsable>\r\n        <small>\r\n          {pluralize(\"node\", appState.graph.overrides.size, true)}<span> </span>\r\n          have override styles.\r\n          <a onClick={() => (appState.graph.overrides = new Map())}>Clear.</a>\r\n        </small>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GlobalPanel;","import React from \"react\";\r\nimport { Classes, Collapse, Switch } from \"@blueprintjs/core\";\r\n\r\nexport default ({ name, isOpen, onToggle, children }) => (\r\n  <div>\r\n    <Switch\r\n      label={name}\r\n      checked={isOpen}\r\n      onChange={onToggle}\r\n      className={Classes.ALIGN_RIGHT}\r\n    />\r\n    <Collapse isOpen={isOpen}>{children}</Collapse>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { Button, Classes, Slider } from \"@blueprintjs/core\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { Popover2, Select } from \"@blueprintjs/labs\";\r\nimport classnames from \"classnames\";\r\nimport { runInAction } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\nimport appState from \"../../stores\";\r\nimport SwitchCollapsable from \"../utils/SwitchCollapsable\";\r\nimport CommonItemRenderer from \"../utils/CommonItemRenderer\";\r\n\r\n@observer\r\nclass SelectionPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shapeOptionOpen: false,\r\n      sizeOptionOpen: false,\r\n      colorOptionOpen: false,\r\n      labelOptionOpen: false\r\n    };\r\n  }\r\n\r\n  twoLayerUpdate = (nodeId, key, value) => {\r\n    if (!appState.graph.overrides.has(nodeId)) {\r\n      appState.graph.overrides.set(nodeId, new Map());\r\n    }\r\n    const nodeAttrs = appState.graph.overrides.get(nodeId);\r\n    if (value !== null) {\r\n      nodeAttrs.set(key, value);\r\n    } else {\r\n      nodeAttrs.delete(key);\r\n      if (nodeAttrs.size === 0) {\r\n        appState.graph.overrides.delete(nodeId);\r\n      }\r\n    }\r\n  };\r\n\r\n  batchTwoLayerUpdate = (nodes, key, value) => {\r\n    runInAction(\"update entire selection\", () => {\r\n      nodes.forEach(n => this.twoLayerUpdate(n.data.ref.id, key, value));\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SwitchCollapsable\r\n          name=\"Override Size\"\r\n          isOpen={this.state.sizeOptionOpen}\r\n          onToggle={() => {\r\n            if (this.state.sizeOptionOpen) {\r\n              this.setState(\r\n                {\r\n                  sizeOptionOpen: false\r\n                },\r\n                () =>\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"size\",\r\n                    null\r\n                  )\r\n              );\r\n            } else {\r\n              this.setState(\r\n                {\r\n                  sizeOptionOpen: true\r\n                },\r\n                () =>\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"size\",\r\n                    appState.graph.overrideConfig.size\r\n                  )\r\n              );\r\n            }\r\n          }}\r\n        >\r\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n            <Slider\r\n              min={1}\r\n              max={20}\r\n              stepSize={0.1}\r\n              labelStepSize={5}\r\n              onChange={it => {\r\n                appState.graph.overrideConfig.size = it;\r\n                this.batchTwoLayerUpdate(\r\n                  appState.graph.selectedNodes,\r\n                  \"size\",\r\n                  it\r\n                );\r\n              }}\r\n              value={appState.graph.overrideConfig.size}\r\n            />\r\n          </div>\r\n        </SwitchCollapsable>\r\n        <SwitchCollapsable\r\n          name=\"Override Color\"\r\n          isOpen={this.state.colorOptionOpen}\r\n          onToggle={() => {\r\n            if (this.state.colorOptionOpen) {\r\n              this.setState(\r\n                {\r\n                  colorOptionOpen: false\r\n                },\r\n                () =>\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"color\",\r\n                    null\r\n                  )\r\n              );\r\n            } else {\r\n              this.setState(\r\n                {\r\n                  colorOptionOpen: true\r\n                },\r\n                () =>\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"color\",\r\n                    appState.graph.overrideConfig.color\r\n                  )\r\n              );\r\n            }\r\n          }}\r\n        >\r\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n            Choose Color:\r\n            <Popover2>\r\n              <Button\r\n                text=\"  \"\r\n                style={{\r\n                  backgroundImage: \"inherit\",\r\n                  backgroundColor: appState.graph.overrideConfig.color\r\n                }}\r\n              />\r\n              <SketchPicker\r\n                color={appState.graph.overrideConfig.color}\r\n                onChange={it => {\r\n                  appState.graph.overrideConfig.color = it.hex;\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"color\",\r\n                    it.hex\r\n                  );\r\n                }}\r\n              />\r\n            </Popover2>\r\n          </div>\r\n        </SwitchCollapsable>\r\n        <SwitchCollapsable\r\n          name=\"Override Label\"\r\n          isOpen={this.state.labelOptionOpen}\r\n          onToggle={() => {\r\n            if (this.state.labelOptionOpen) {\r\n              this.setState(\r\n                {\r\n                  labelOptionOpen: false\r\n                },\r\n                () =>\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"label\",\r\n                    null\r\n                  )\r\n              );\r\n            } else {\r\n              this.setState(\r\n                {\r\n                  labelOptionOpen: true\r\n                },\r\n                () =>\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"label\",\r\n                    appState.graph.overrideConfig.label\r\n                  )\r\n              );\r\n            }\r\n          }}\r\n        >\r\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n            Custom Label:\r\n            <input\r\n              value={appState.graph.overrideConfig.label}\r\n              onChange={it => {\r\n                appState.graph.overrideConfig.label = it.target.value;\r\n                this.batchTwoLayerUpdate(\r\n                  appState.graph.selectedNodes,\r\n                  \"label\",\r\n                  it.target.value\r\n                );\r\n              }}\r\n            />\r\n          </div>\r\n        </SwitchCollapsable>\r\n        <SwitchCollapsable\r\n          name=\"Override Shape\"\r\n          isOpen={this.state.shapeOptionOpen}\r\n          onToggle={() => {\r\n            if (this.state.shapeOptionOpen) {\r\n              this.setState(\r\n                {\r\n                  shapeOptionOpen: false\r\n                },\r\n                () =>\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"shape\",\r\n                    null\r\n                  )\r\n              );\r\n            } else {\r\n              this.setState(\r\n                {\r\n                  shapeOptionOpen: true\r\n                },\r\n                () =>\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"shape\",\r\n                    appState.graph.overrideConfig.shape\r\n                  )\r\n              );\r\n            }\r\n          }}\r\n        >\r\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n            Node Shape:\r\n            <Select\r\n              items={[\r\n                \"circle\",\r\n                \"square\",\r\n                \"triangle\",\r\n                \"pentagon\",\r\n                \"hexagon\",\r\n                \"octagon\"\r\n              ]}\r\n              itemRenderer={CommonItemRenderer}\r\n              filterable={false}\r\n              onItemSelect={it => {\r\n                appState.graph.overrideConfig.shape = it;\r\n                this.batchTwoLayerUpdate(\r\n                  appState.graph.selectedNodes,\r\n                  \"shape\",\r\n                  it\r\n                );\r\n              }}\r\n            >\r\n              <Button text={appState.graph.overrideConfig.shape} />\r\n            </Select>\r\n          </div>\r\n        </SwitchCollapsable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectionPanel;","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport pluralize from \"pluralize\";\r\nimport appState from \"../../stores\";\r\nimport GlobalPanel from \"./GlobalPanel\";\r\nimport SelectionPanel from \"./SelectionPanel\";\r\n\r\n@observer\r\nclass NodesPanel extends React.Component {\r\n  getRenderedNodes = () => {\r\n    if (appState.graph.selectedNodes.length === 0) {\r\n      return (\r\n        <div>\r\n          <p>Modifying All Nodes</p>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <p>{`Modifying ${pluralize(\r\n        \"Node\",\r\n        appState.graph.selectedNodes.length,\r\n        true\r\n      )}`}</p>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.getRenderedNodes()}\r\n        {appState.graph.selectedNodes.length === 0 ? (\r\n          <GlobalPanel />\r\n        ) : (\r\n          <SelectionPanel />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NodesPanel;","import React from \"react\";\r\nimport { Button, Classes, Slider } from \"@blueprintjs/core\";\r\nimport { Select } from \"@blueprintjs/labs\";\r\nimport { observer } from \"mobx-react\";\r\nimport appState from \"../../stores\";\r\nimport CommonItemRenderer from \"../utils/CommonItemRenderer\";\r\n\r\n@observer\r\nclass LabelsPanel extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button\r\n          iconName=\"eye-off\"\r\n          className={Classes.FILL}\r\n          onClick={() => appState.graph.frame.showAllLabels()}\r\n        >\r\n          Show All Labels\r\n        </Button>\r\n        <Button\r\n          iconName=\"eye-off\"\r\n          className={Classes.FILL}\r\n          onClick={() => appState.graph.frame.hideAllLabels()}\r\n        >\r\n          Hide All Labels\r\n        </Button>\r\n        <Button\r\n          iconName=\"eye-off\"\r\n          className={Classes.FILL}\r\n          onClick={() => appState.graph.frame.hideSelectedLabels()}\r\n        >\r\n          Hide Labels of Selected Nodes\r\n        </Button>\r\n        <Button\r\n          iconName=\"eye-on\"\r\n          className={Classes.FILL}\r\n          onClick={() => appState.graph.frame.showSelectedLabels()}\r\n        >\r\n          Show Labels of Selected Nodes\r\n        </Button>\r\n        <div style={{height: '30px'}} />\r\n        <h6>Label Size</h6>\r\n        <Slider\r\n          min={0.5}\r\n          max={3}\r\n          stepSize={0.1}\r\n          onChange={value => {\r\n            appState.graph.nodes.labelSize = value;\r\n          }}\r\n          value={appState.graph.nodes.labelSize}\r\n        />\r\n        <div style={{height: '30px'}} />\r\n        <h6>Label Length</h6>\r\n        <Slider\r\n          min={1}\r\n          max={32}\r\n          stepSize={0.1}\r\n          labelStepSize={5}\r\n          onChange={value => {\r\n            appState.graph.nodes.labelLength = value;\r\n          }}\r\n          value={appState.graph.nodes.labelLength}\r\n        />\r\n        <h6>Label By</h6>\r\n        <Select\r\n          items={appState.graph.allPropertiesKeyList}\r\n          itemRenderer={CommonItemRenderer}\r\n          filterable={false}\r\n          onItemSelect={it => (appState.graph.nodes.labelBy = it)}\r\n        >\r\n          <Button text={appState.graph.nodes.labelBy} />\r\n        </Select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LabelsPanel;","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport uniq from \"lodash/uniq\";\r\nimport { Classes } from \"@blueprintjs/core\";\r\nimport appState from \"../../stores\";\r\nimport { observer } from \"mobx-react/index\";\r\n\r\n@observer\r\nclass NodeDetail extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={classnames(\r\n          // 'overlay-card',\r\n          \"right-overlay-card\",\r\n          \"transparent-frame\"\r\n        )}\r\n      >\r\n        <div className={classnames(Classes.CARD, \"node-details-table\")}>\r\n          <table\r\n            className={classnames(Classes.TABLE, Classes.TABLE_STRIPED)}\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>Property</th>\r\n                <th>Value</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {appState.graph.allPropertiesKeyList.map((it, i) => (\r\n                <tr key={`${it}-${i}`}>\r\n                  <td>{it}</td>\r\n                  <td>{this.props.node[it]}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NodeDetail;","import React from \"react\";\r\n\r\nimport { format } from \"d3-format\";\r\nimport { LegendLinear, LegendSize } from \"@vx/vx\";\r\nimport appState from \"../stores\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nfunction Legends() {\r\n  return (\r\n    <div className=\"legends\">\r\n      <LegendSize\r\n        className=\"scale-legend\"\r\n        direction=\"row\"\r\n        itemDirection=\"column\"\r\n        itemMargin=\"0\"\r\n        shapeMargin=\"5px 0\"\r\n        labelFormat={format(\".4f\")}\r\n        scale={appState.graph.nodeSizeScale}\r\n        shape={props => {\r\n          const { size } = props;\r\n          return (\r\n            <svg width={size} height={size}>\r\n              <circle {...props} r={size / 2} cx={size / 2} cy={size / 2} />\r\n            </svg>\r\n          );\r\n        }}\r\n      />\r\n      <LegendLinear\r\n        direction=\"row\"\r\n        itemDirection=\"column\"\r\n        shape=\"circle\"\r\n        scale={appState.graph.nodeColorScale}\r\n        labelFormat={format(\".4f\")}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Legends);\r\n","import React from \"react\";\r\nimport { Classes, Tab2, Tabs2 } from \"@blueprintjs/core\";\r\nimport classnames from \"classnames\";\r\nimport { observer } from \"mobx-react\";\r\nimport appState from \"../stores\";\r\nimport SimpleSelect from \"./utils/SimpleSelect\";\r\nimport { addNode } from \"../ipc/client\";\r\nimport NodesPanel from \"./panels/NodesPanel\";\r\nimport LabelsPanel from \"./panels/LabelsPanel\";\r\nimport NodeDetail from \"./panels/NodeDetailPanel\";\r\nimport Legends from \"./Legends\";\r\n\r\n// TODO: migrate to simple select\r\n\r\n@observer\r\nclass RenderOptionsCard extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4>Graph Options</h4>\r\n        <Tabs2 animate id=\"graph-options\">\r\n          <Tab2 id=\"nodes\" title=\"Nodes\" panel={<NodesPanel />} />\r\n          <Tab2 id=\"labels\" title=\"Labels\" panel={<LabelsPanel />} />\r\n          {/* <Tab2 id=\"layout\" title=\"Layout\" panel={<LayoutPanel />} /> */}\r\n          <Tabs2.Expander />\r\n        </Tabs2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//\r\n\r\n@observer\r\nclass FloatingCards extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"floating-overlay\">\r\n        <div className=\"left-cards\">\r\n          {appState.search.panelOpen && (\r\n            <div\r\n              className={classnames(\r\n                Classes.CARD,\r\n                Classes.ELEVATION_2,\r\n                \"overlay-card\",\r\n                \"left-overlay-card\"\r\n              )}\r\n            >\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"left\",\r\n                  alignItems: \"left\"\r\n                }}\r\n              >\r\n                <h4 style={{ width: 140 }}>\r\n                  {appState.search.numCandidates} results\r\n                </h4>\r\n                <div style={{ width: 20 }} />\r\n                <h4>Order</h4>\r\n                <div style={{ width: 5 }} />\r\n                <SimpleSelect\r\n                  style={{ \"margin-bottom\": 10 }}\r\n                  items={[...appState.graph.metadata.nodeComputed, \"node_id\"]}\r\n                  onSelect={it => (appState.graph.searchOrder = it)}\r\n                  value={appState.graph.searchOrder}\r\n                />\r\n              </div>\r\n              <table\r\n                className={classnames(\r\n                  Classes.TABLE,\r\n                  Classes.TABLE_STRIPED,\r\n                  Classes.INTERACTIVE\r\n                )}\r\n                style={{\r\n                  width: \"100%\",\r\n                  userSelect: \"none\"\r\n                }}\r\n              >\r\n                <tbody>\r\n                  {appState.search.candidates.map((node, i) => (\r\n                    <tr\r\n                      key={i}\r\n                      onMouseOver={() =>\r\n                        appState.graph.frame.highlightNodeIds(\r\n                          [node.node_id],\r\n                          true\r\n                        )\r\n                      }\r\n                      onMouseDown={() => addNode(node.node_id)}\r\n                      onMouseLeave={() =>\r\n                        appState.graph.frame.highlightNodeIds(\r\n                          [node.node_id],\r\n                          false\r\n                        )\r\n                      }\r\n                    >\r\n                      <td>{node[appState.graph.nodes.labelBy]}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n              <center>\r\n                <a\r\n                  onMouseDown={() => {\r\n                    if (appState.search.pageNum > 0) {\r\n                      appState.search.pageNum -= 1;\r\n                      appState.search.candidates = appState.search.allCands.slice(\r\n                        appState.search.pageNum * appState.search.nPerPage,\r\n                        (appState.search.pageNum + 1) * appState.search.nPerPage\r\n                      );\r\n                    }\r\n                  }}\r\n                >\r\n                  Prev&nbsp;\r\n                </a>\r\n                &nbsp;\r\n                {appState.search.pageNum !== 0 ? (\r\n                  <a\r\n                    onMouseDown={() => {\r\n                      appState.search.pageNum = 0;\r\n                      appState.search.candidates = appState.search.allCands.slice(\r\n                        appState.search.pageNum * appState.search.nPerPage,\r\n                        (appState.search.pageNum + 1) * appState.search.nPerPage\r\n                      );\r\n                    }}\r\n                  >\r\n                    1&nbsp;\r\n                  </a>\r\n                ) : (\r\n                  <a\r\n                    style={{\r\n                      color: \"#111111\",\r\n                      pointerEvents: \"none\",\r\n                      cursor: \"default\"\r\n                    }}\r\n                  >\r\n                    {appState.search.pageNum + 1}&nbsp;\r\n                  </a>\r\n                )}\r\n                ...<b>&nbsp;</b>\r\n                {appState.search.pages.map(i => {\r\n                  if (\r\n                    i != 0 &&\r\n                    i != appState.search.maxPage &&\r\n                    i == appState.search.pageNum\r\n                  ) {\r\n                    return (\r\n                      <a\r\n                        key={i}\r\n                        style={{\r\n                          color: \"#111111\",\r\n                          pointerEvents: \"none\",\r\n                          cursor: \"default\"\r\n                        }}\r\n                      >\r\n                        {appState.search.pageNum + 1}&nbsp;\r\n                      </a>\r\n                    );\r\n                  } else if (\r\n                    i != 0 &&\r\n                    i != appState.search.maxPage &&\r\n                    ((i > appState.search.pageNum - 4 &&\r\n                      i < appState.search.pageNum + 4) ||\r\n                      (appState.search.pageNum < 4 && i < 8) ||\r\n                      (appState.search.pageNum > appState.search.maxPage - 4 &&\r\n                        i > appState.search.maxPage - 8))\r\n                  ) {\r\n                    return (\r\n                      <a\r\n                        key={i}\r\n                        onMouseDown={() => {\r\n                          appState.search.pageNum = i;\r\n                          appState.search.candidates = appState.search.allCands.slice(\r\n                            appState.search.pageNum * appState.search.nPerPage,\r\n                            (appState.search.pageNum + 1) *\r\n                              appState.search.nPerPage\r\n                          );\r\n                        }}\r\n                      >\r\n                        {i + 1}&nbsp;\r\n                      </a>\r\n                    );\r\n                  }\r\n                })}\r\n                ...&nbsp;\r\n                {appState.search.pageNum !== appState.search.maxPage ? (\r\n                  <a\r\n                    onMouseDown={() => {\r\n                      appState.search.pageNum = appState.search.maxPage;\r\n                      appState.search.candidates = appState.search.allCands.slice(\r\n                        appState.search.pageNum * appState.search.nPerPage,\r\n                        (appState.search.pageNum + 1) * appState.search.nPerPage\r\n                      );\r\n                    }}\r\n                  >\r\n                    {appState.search.maxPage + 1}&nbsp;\r\n                  </a>\r\n                ) : (\r\n                  <a\r\n                    style={{\r\n                      color: \"#111111\",\r\n                      pointerEvents: \"none\",\r\n                      cursor: \"default\"\r\n                    }}\r\n                  >\r\n                    {appState.search.pageNum + 1}\r\n                  </a>\r\n                )}\r\n                &nbsp;\r\n                <a\r\n                  onMouseDown={() => {\r\n                    if (appState.search.pageNum < appState.search.maxPage) {\r\n                      appState.search.pageNum += 1;\r\n                      appState.search.candidates = appState.search.allCands.slice(\r\n                        appState.search.pageNum * appState.search.nPerPage,\r\n                        (appState.search.pageNum + 1) * appState.search.nPerPage\r\n                      );\r\n                    }\r\n                  }}\r\n                >\r\n                  Next\r\n                </a>\r\n                <br />\r\n                <br />\r\n                <h5>Page {appState.search.pageNum + 1}</h5>\r\n              </center>\r\n            </div>\r\n          )}\r\n          <div\r\n            className={classnames(\r\n              Classes.CARD,\r\n              Classes.ELEVATION_2,\r\n              \"overlay-card\",\r\n              \"left-overlay-card\",\r\n              \"transparent-frame\"\r\n            )}\r\n          >\r\n            <RenderOptionsCard />\r\n          </div>\r\n        </div>\r\n        {appState.graph.selectedNodes.length === 1 && (\r\n          <NodeDetail node={appState.graph.selectedNodes[0].data.ref} />\r\n        )}\r\n        <Legends />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default FloatingCards;","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  FocusStyleManager,\r\n  NonIdealState\r\n} from \"@blueprintjs/core\";\r\nimport Dialogs from \"./components/Dialogs\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport WorkspaceView from \"./components/WorkspaceView\";\r\nimport appState from \"./stores/index\";\r\nimport ThreeJSVis from \"./visualizers/ThreeJSVis\";\r\nimport FloatingCards from \"./components/FloatingCards\";\r\nimport registerIPC from \"./ipc/client\";\r\nimport { fetchWorkspaceProjects } from \"./ipc/client\";\r\n\r\nimport keydown, { Keys } from \"react-keydown\";\r\n\r\nregisterIPC();\r\nFocusStyleManager.onlyShowFocusOnTabs();\r\n\r\nfetchWorkspaceProjects();\r\n\r\nappState.preferences.loadUserConfig();\r\n\r\nconst { DELETE, BACKSPACE, P, U } = Keys;\r\n\r\n@keydown\r\n@observer\r\nclass App extends React.Component {\r\n  componentWillReceiveProps({ keydown }) {\r\n    if (keydown.event) {\r\n      if (keydown.event.which === DELETE || keydown.event.which === BACKSPACE) {\r\n        if (appState && appState.graph && appState.graph.frame) {\r\n          appState.graph.removeNodes(appState.graph.frame.getSelectedIds());\r\n          this.forceUpdate();\r\n        }\r\n      } else if (keydown.event.which === P) {\r\n        if (appState && appState.graph && appState.graph.frame) {\r\n          appState.graph.frame.pinSelectedNodes();\r\n        }\r\n      } else if (keydown.event.which === U) {\r\n        if (appState && appState.graph && appState.graph.frame) {\r\n          appState.graph.frame.unpinSelectedNodes();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        className={classnames({\r\n          \"app-wrapper\": true,\r\n          [Classes.DARK]: appState.preferences.darkMode\r\n        })}\r\n      >\r\n        <Navbar />\r\n        <main className=\"main\">\r\n          {appState.graph.hasGraph ? (\r\n            <ThreeJSVis />\r\n          ) : (\r\n            <WorkspaceView />\r\n          )}\r\n        </main>\r\n        {appState.graph.hasGraph && <FloatingCards />}\r\n        <Dialogs />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\nimport 'normalize.css/normalize.css';\nimport '@blueprintjs/core/dist/blueprint.css';\nimport '@blueprintjs/table/dist/table.css';\nimport './styles/index.css';\n\nconst render = () => {\n    ReactDOM.render(<App/>, document.getElementById('root'));\n};\n\nrender();"],"sourceRoot":""}