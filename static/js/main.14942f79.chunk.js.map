{"version":3,"sources":["constants/index.js","notifications/client.js","ipc/client.js","stores/PreferencesStore.js","services/AlgorithmUtils.js","stores/GraphStore.js","stores/ImportStore.js","stores/ProjectStore.js","stores/SearchStore.js","stores/index.js","components/PreferencesDialog.jsx","components/utils/Collapsable.jsx","components/utils/CommonItemRenderer.jsx","components/utils/SimpleSelect.jsx","components/ImportDialog.jsx","components/OpenDialog.jsx","components/NewProjectDialog.jsx","components/ProjectDetailDialog.jsx","components/SaveSnapshotDialog.jsx","components/RenameSnapshotDialog.jsx","components/OpenSnapshotDialog.jsx","components/ShareDialog.jsx","components/StatisticsDialog.jsx","components/Dialogs.jsx","components/Navbar.jsx","components/WorkspaceView.jsx","visualizers/ThreeJSVis.jsx","components/panels/GlobalPanel.jsx","components/utils/SwitchCollapsable.jsx","components/panels/SelectionPanel.jsx","components/panels/NodesPanel.jsx","components/panels/LabelsPanel.jsx","components/panels/NodeDetailPanel.jsx","components/Legends.jsx","components/StatusBar.jsx","components/FloatingCards.jsx","app.jsx","index.js","graph-frontend/src/structure/node.js","graph-frontend/include/THREE.MeshLine.js","graph-frontend/index.js","graph-frontend/src/imports.js","graph-frontend/src/process.js","graph-frontend/include/QuickHull.js","graph-frontend/include/ConvexGeometry.js","graph-frontend/include/CSS3DRenderer.js","graph-frontend/include/OrbitControls.js","graph-frontend/src/utils/utils.js","graph-frontend/src/setup.js","graph-frontend/src/addremove.js","graph-frontend/src/highlighting.js","graph-frontend/src/select.js","graph-frontend/src/mouse.js","graph-frontend/src/modify.js","graph-frontend/src/draw.js","graph-frontend/src/api.js","graph-frontend/src/update.js"],"names":["scales","scale","LOAD_USER_CONFIG","SAVE_USER_CONFIG","FETCH_WORKSPACE_PROJECTS","CREATE_NEW_PROJECT","DELETE_FILE","CHANGE_WORKSPACE_FOLDER","CHOOSE_GRAPH_FILE","CHOOSE_STATE_FILE","NODE_AND_EDGE_FILE","ONLY_EDGE_FILE","GRAPH_AND_STATE_FILE","ONLY_GRAPH_FILE","IMPORT_GRAPH","OPEN_GRAPH","SEARCH_REQUEST","ADD_NODE","toaster","Toaster","create","position","Position","TOP","ipcRenderer","send","eventString","console","log","requestChooseGraphFile","requestChooseStateFile","requestOpen","appState","import","graphFile","stateFile","requestImportGraphFromCSV","hasNodeFile","delimiter","newProjectName","loading","importConfig","nodes","path","nodeFile","hasColumns","columns","toJS","mapping","edges","edgeFile","createMissing","importGraphFromCSV","then","graph","runInAction","rawGraph","metadata","initialGlobalConfig","overrides","Map","dialogOpen","readCSV","fileObject","hasHeader","a","file","reader","FileReader","readAsText","Promise","resolve","reject","onload","content","result","parse","comment","trim","auto_parse","skip_empty_lines","undefined","config","fromId","parseInt","toId","nodesArr","createGraph","degreeDict","selectedNodeFileFromInput","forEach","node","addNode","id","toString","degree","map","n","pagerank","selectedEdgeFileFromInput","it","from","to","hasNode","push","edgesSet","Set","edgesArr","addEdge","edgeKey","has","add","addLink","source_id","target_id","rank","pageRank","node_id","snapshotName","fullNodes","length","fullEdges","Math","floor","nodeProperties","Object","keys","nodeComputed","edgeProperties","PreferencesStore","userConfig","requestSaveUserConfig","darkMode","this","workspace","workspacePath","observable","jsnx","require","jsgraphs","averageClusteringCoefficient","snapshot","jsnxGraph","Graph","addNodesFrom","addEdgesFrom","e","convertToJsnx","averageClustering","connectedComponents","i","idDict","g","ConnectedComponents","convertToJSGraph","componentCount","GraphStore","ref","colorBy","color","sizeBy","size","min","max","labelBy","shape","labelSize","labelLength","nodesShowingLabels","hasGraphLoaded","nodeids","filter","includes","frame","removeSelected","positions","getPositions","global","optionalConfig","getSnapshot","noPosition","noGlobal","noOverride","JSON","stringify","savedStatesStr","savedStates","savedOverrides","entries","k","v","clear","merge","initialNodesShowingLabels","uniq","ret","p","Number","MAX_VALUE","MIN_VALUE","domain","minMax","range","override","get","label","nodeSizeScale","nodeColorScale","computed","action","ImportStore","topN","ready","ProjectStore","SearchStore","preferences","search","project","window","loadAndDisplaySnapshotFromURL","url","fetch","method","mode","response","text","loadSnapshotFromURL","snapshotString","split","pop","loadImmediateStates","loadAndDisplaySnapshotFromStrapi","uuid","json","body","catch","error","loadSnapshotFromStrapi","loadInitialSampleGraph","location","hash","substring","startsWith","decodeURIComponent","alert","saveSnapshotToString","saveImmediateStates","addEventListener","event","autorun","hasGraph","updateGraph","computedGraph","setAllNodesShape","setLabelRelativeSize","setLabelLength","paused","updatePositions","showLabels","searchStr","searchOrder","runSearch","panelOpen","candidates","splice","highlightNodeIds","lines","topLinesAsString","l","join","key","show","message","intent","Intent","DANGER","timeout","onerror","PreferencesDialog","observer","iconName","className","classnames","Classes","DARK","isOpen","onClose","title","checked","onChange","saveUserConfig","toggleDark","CONTROL_GROUP","INPUT_GROUP","FILL","type","DISABLED","INPUT","placeholder","readOnly","value","PRIMARY","onClick","React","Component","name","onToggle","children","MINIMAL","rightIconName","handleClick","item","isActive","ACTIVE","items","onSelect","fill","itemRenderer","CommonItemRenderer","filterable","onItemSelect","PreviewTable","props","numRows","selectedRegions","values","indexOf","rows","cols","renderCell","ImportDialog","changeAvailable","targetValue","setState","available","canImport","state","renderNodesSelection","Collapsable","nodesOpen","target","files","SimpleSelect","renderEdgesSelection","edgesOpen","disabled","newDelimiter","updateDelimiter","DIALOG_BODY","renderDelimiterSelection","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","projectMetadata","createdDate","Date","toLocaleString","OpenDialog","renderSelectGraph","renderSelectState","selectedGraph","selectedState","openDialogOpen","NewProjectDialog","isNewProjectNameDuplicate","projects","some","isNewProjectNameEmpty","isValidated","isNewProjectDialogOpen","dir","ProjectDetailDialog","currentProject","isProjectDetailDialogOpen","hasGraphData","interactive","elevation","Card","ELEVATION_TWO","graphDataPath","snapshotPaths","snapshotPath","replace","BUTTON","INTENT_PRIMARY","currentSnapshotName","filePath","SaveSnapshotDialog","isSaveSnapshotDialogOpen","stringCopyOfSnapshot","document","getElementById","select","execCommand","isRenameSnapshotDialogOpen","OpenSnapshotDialog","selectedFile","openSnapshotDialogOpen","NONE","fileAsString","uuidv4","ShareDialog","isShared","isFetching","sharedURL","handleRequest","bind","backendURL","cache","headers","referrer","ok","shareDialogOpen","StatisticsDialog","statisticsDialogOpen","TABLE","style","width","components","Dialogs","display","RenameSnapshotDialog","Navbar","NAVBAR","NAVBAR_GROUP","ALIGN_LEFT","NAVBAR_HEADING","BOTTOM","NAVBAR_DIVIDER","resumeLayout","forceUpdate","pauseLayout","selectedNodes","pinSelectedNodes","WARNING","unpinSelectedNodes","removeNodes","getSelectedIds","ALIGN_RIGHT","href","fontSize","textDecoration","icon","faGithub","WorkspaceView","textAlign","height","ThreeJSVis","graphFrame","Frame","init","ee","on","data","menu","MenuFactory","MenuItemFactory","toggleSelectedLabels","ContextMenu","left","pageX","top","pageY","flex","GlobalPanel","timeOutRef","sizeOptionOpen","colorOptionOpen","shapeOptionOpen","CARD","allPropertiesKeyList","backgroundImage","backgroundColor","hex","x1","y1","x2","y2","stopColor","stopOpacity","offset","x","y","stepSize","labelStepSize","b","pluralize","SelectionPanel","twoLayerUpdate","nodeId","set","nodeAttrs","delete","batchTwoLayerUpdate","labelOptionOpen","SwitchCollapsable","overrideConfig","NodesPanel","getRenderedNodes","LabelsPanel","showAllLabels","hideAllLabels","hideSelectedLabels","showSelectedLabels","NodeDetail","TABLE_STRIPED","direction","itemDirection","itemMargin","shapeMargin","labelFormat","format","r","cx","cy","StatusBar","RenderOptionsCard","animate","panel","Expander","FloatingCards","ELEVATION_2","justifyContent","alignItems","numCandidates","INTERACTIVE","userSelect","onMouseOver","onMouseDown","onMouseLeave","pageNum","allCands","slice","nPerPage","pointerEvents","cursor","pages","maxPage","FocusStyleManager","onlyShowFocusOnTabs","loadUserConfig","DELETE","Keys","BACKSPACE","P","U","App","keydown","which","ReactDOM","render","$","Node","index","in","out","renderData","domainData","vx","vy","connectedTo","outNodeIds","outNode","inArray","prototype","connectNode","exports","Edge","source","THREE","memcpy","src","srcOffset","dst","dstOffset","subarray","buffer","MeshLine","previous","next","side","indices_array","uvs","counters","geometry","BufferGeometry","widthCallback","setGeometry","c","Geometry","j","vertices","z","Float32Array","Array","process","compareV3","aa","ab","copyV3","w","attributes","copyArray","needsUpdate","uv","Uint16Array","BufferAttribute","addAttribute","setIndex","advance","array","MeshLineMaterial","parameters","check","d","Material","call","lineWidth","useMap","Color","opacity","resolution","Vector2","sizeAttenuation","near","far","dashArray","useDash","visibility","alphaTest","material","RawShaderMaterial","uniforms","vertexShader","fragmentShader","setValues","constructor","copy","balancedBinTree","Argo","OrbitControls","d3","default","NODE_COLOR","NODE_HIGHLIGHT","ADJACENT_HIGHLIGHT","SEARCH_HIGHLIGHT","NODE_HTEXTURE","NODE_TEXTURE","NODE_NO_HTEX","NODE_NO_TEX","NODE_NO_HCOLOR","NODE_NO_COLOR","NODE_NO_HIGHLIGHT","NODE_NEIGHBOR_HIGHLIGHT","NODE_SHAPE","NODE_HSHAPE","NODE_SIZE","HIGHLIGHT_SIZE","LAYOUT","LINES","MAP","TEXT_SCALE","TEXT_SIZE","TEXT_X_OFFSET","TEXT_Y_OFFSET","TEXT_BACK_COLOR","TEXT_OPACITY","TEXT_WIREFRAME","PIN_COLOR","def","spawn","options","self","inGraph","layout","layout_options","graphLayout","lineObjects","lineIndices","MAX_LINES","textureLoader","TextureLoader","crossOrigin","oldIntersect","selection","fov","mouseStart","Vector3","mouseEnd","dragging","showBox","renderWidth","renderHeight","maxZoom","mouseDown","layoutInit","relativeFontSize","mapShowing","lastNode","fakeNodes","rightClickedNode","doHighlightNeighbors","prevHighlights","neighborHost","hull","now","requestAnimationFrame","controls","update","renderer","WebGLRenderer","alpha","antialias","setDisplayParams","setRendererParams","setupCamera","setupMinimap","setupGeometry","setupSelect","element","appendChild","domElement","cssRenderer","canvas","querySelector","setupLayout","setupGraph","preventDefault","onWindowResize","clientRect","getBoundingClientRect","minimap","aspect","ccamera","updateProjectionMatrix","setSize","stage","updateCamera","updateNodes","updateLabels","updateEdges","forEachNode","force","forceLink","restart","stop","tickToStatic","ceil","alphaMin","alphaDecay","tick","setViewport","setScissor","setScissorTest","scene","camera","Visible","QuickHull","tolerance","faces","newFaces","assigned","VertexList","unassigned","Face","normal","midpoint","area","constant","outside","mark","edge","HalfEdge","vertex","face","prev","twin","VertexNode","point","head","tail","assign","setFromPoints","points","isArray","makeEmpty","compute","setFromObject","object","updateMatrixWorld","traverse","isGeometry","clone","applyMatrix4","matrixWorld","isBufferGeometry","attribute","count","fromBufferAttribute","addVertexToFace","append","insertBefore","removeVertexFromFace","remove","removeAllVerticesFromFace","start","end","removeSubList","deleteFaceVertices","absorbingFace","faceVertices","appendChain","nextVertex","distanceToPoint","resolveUnassignedPoints","isEmpty","first","maxDistance","maxFace","distance","computeExtremes","minVertices","maxVertices","getComponent","setComponent","EPSILON","abs","computeInitialHull","line3","plane","closestPoint","Line3","Plane","v0","v1","v2","v3","extremes","closestPointToPoint","distanceToSquared","setFromCoplanarPoints","getEdge","setTwin","reindexFaces","activeFaces","nextVertexToAdd","eyeVertex","eyeFace","computeHorizon","eyePoint","crossEdge","horizon","twinEdge","oppositeFace","addAdjoiningFace","horizonEdge","addNewFaces","firstSideEdge","previousSideEdge","sideEdge","addVertexToHull","cleanup","e0","e1","e2","triangle","Triangle","dot","distanceTo","lengthSquared","last","insertAfter","ConvexGeometry","fromBufferGeometry","ConvexBufferGeometry","mergeVertices","normals","Float32BufferAttribute","CSS3DObject","Object3D","parentNode","removeChild","CSS3DSprite","CSS3DRenderer","_width","_height","REVISION","matrix","Matrix4","objects","createElement","overflow","WebkitTransformStyle","MozTransformStyle","oTransformStyle","transformStyle","cameraElement","epsilon","getObjectCSSMatrix","elements","setClearColor","getSize","tan","degToRad","getEffectiveFOV","WebkitPerspective","MozPerspective","oPerspective","perspective","parent","matrixWorldInverse","getInverse","getCameraCSSMatrix","WebkitTransform","MozTransform","oTransform","transform","renderObject","transpose","copyPosition","cachedStyle","module","enabled","minDistance","Infinity","minZoom","minPolarAngle","maxPolarAngle","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","LEFT","UP","RIGHT","SPACE","mouseButtons","ORBIT","MOUSE","ZOOM","MIDDLE","PAN","target0","position0","zoom0","zoom","spacePan","bothPan","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","reset","scope","dispatchEvent","changeEvent","STATE","quat","Quaternion","setFromUnitVectors","up","quatInverse","inverse","lastPosition","lastQuaternion","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","makeSafe","radius","panOffset","setFromSpherical","lookAt","zoomChanged","EPS","quaternion","dispose","removeEventListener","onContextMenu","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","onKeyDown","startEvent","endEvent","ROTATE","DOLLY","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","Spherical","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","objectMatrix","setFromMatrixColumn","multiplyScalar","panUp","pan","deltaX","deltaY","PerspectiveCamera","targetDistance","clientHeight","OrthographicCamera","right","clientWidth","bottom","warn","dollyIn","dollyScale","dollyOut","handleMouseDownPan","clientX","clientY","button","handleMouseDownRotate","handleMouseDownDolly","subVectors","handleMouseMoveRotate","handleMouseMoveDolly","spacePanStart","handleMouseMovePan","stopPropagation","handleMouseWheel","keyCode","handleKeyDown","touches","handleTouchStartRotate","dx","dy","sqrt","handleTouchStartDolly","handleTouchStartPan","handleTouchMoveRotate","handleTouchMoveDolly","handleTouchMovePan","handleKeyUp","EventDispatcher","defineProperties","center","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","relMouseCoords","currentElement","totalOffsetX","totalOffsetY","offsetLeft","scrollLeft","offsetTop","scrollTop","offsetParent","prepNode","nodeToAdd","hcolor","linecolor","numYeast","random","tsize","make1x1Rect","rectShape","Shape","moveTo","lineTo","ShapeGeometry","make2x2Rect","volToRadius","volume","createNGraph","setupNgraphLayout","setupD3Layout","forceSimulation","forceManyBody","strength","forceY","forceX","velocityDecay","setPixelRatio","devicePixelRatio","oldCoords","panToMousePosition","coordX","coordY","coefficient","Scene","Group","setupFancyEdges","setUpSimpleEdges","rect","setupSelectionBox","setupBoundaries","setupViewPort","edgeCount","LineBasicMaterial","linewidth","vertexColors","VertexColors","shading","FlatShading","line","LineSegments","frustumCulled","colors","drawCount","selectBox","Line","visible","boundaries","setBoundarySize","viewPort","setViewPortSize","computeBoundingSphere","nodeCount","setupMouseHandlers","callback","coords","mouseX","mouseY","mousePosition","unproject","normalize","isMouseCoordinatesOnMinimap","raycaster","Raycaster","pos","onRightClick","getAttribute","focus","onRightClickCoords","callMouseHandler","intersects","intersectObjects","nodeIndex","getNode","ctrlKey","mouseHandler","graphNode","fx","fy","pinnedx","pinnedy","drawNode","links","removeNode","removeGraphEdges","undrawEdges","draw_object","undrawNode","nodeLinks","getLinks","removeLink","textHolder","hidden","killed","drawEdge","addNeighbors","neighbors","newNode","addNeighbors2","removeFakes","extend","highlightNode","toggle","setHex","highlightEdges","froms","tos","highlightNeighbors","colorNodeOpacity","colorNodeEdge","linkObjs","dc","op","selectNode","isSelected","updateSelection","clearSelection","hideme","diffx","diffy","checkSelection","npos","getNodePosition","insideBox","posx","posy","ctrl","leftMouseDown","onHover","lastHover","startTime","endTime","newNodeIds","emit","setUniformNodeSize","s","hsize","setNodeDataSize","dataValue","dataVal","setUniformNodeColor","hsvDegree","setNodeDataColor","mapNodeAttributes","val","mod","attr","changeLabelFontSize","changeLabelLength","changeNodes","changeNode","numChars","relativeSize","createHighlightMesh","texture","hshape","hgeometry","CircleGeometry","createHighlightDrawObject","getNodeSize","hmaterial","MeshBasicMaterial","transparent","highlight","Mesh","createNodeMesh","createNodeDrawObject","createPinMesh","pinMesh","createNodeLabel","wireframe","wireframeLinewidth","DoubleSide","PlaneGeometry","textMesh","createAndSetupLabelTextMesh","createAndSetupLabelDiv","createAndSetupTextHolder","bbox","Box3","createLabelDiv","createLabelDivElement","createTextNode","textElement","createLabelTextElement","textOverflow","whiteSpace","setupNodeDrawObject","htexture","onTextureLoad","load","himage","image","hide","updateColorsAndPositions","setTimeout","v1pos","v2pos","v1color","v2color","setMouseMode","mouseMode","isMouseModeMove","pause","mapSelectedNodes","mapAllNodes","setLabelFontSize","toggleMap","updateNodesShowingLabels","toggleLabels","hideLabels","setCanvasSize","setNodeShape","getNumSelected","getNodesCount","updateViewPortEdgeColor","getGraph","getNodeList","poses","getPinPositions","alias","toggleAlias","setLastNode","dragLastNode","lowerRes","getNeighbors","toggleNeighborHighlight","getSelected","setDrawRange","total","thisNode","step","oldNode","updateNode","forEachLink","link","getLink","childNodes","innerText"],"mappings":"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AM,KACNK,MAAO,IAAI4Q,EAAMqD,QAAQxe,KAAK4e,UAAU,GAAI5e,KAAK4e,UAAU,KAE7DC,QAAS,CAAE3U,KAAM,IAAKK,MAAOvK,KAAK6e,SAClCC,WAAY,CAAE5U,KAAM,IAAKK,MAAOvK,KAAK8e,YACrCC,UAAW,CAAE7U,KAAM,IAAKK,MAAOvK,KAAK+e,YAEtCI,aA9JuB,CACvB,yBACA,GACA,2BACA,2BACA,uBACA,wBACA,yBACA,qBACA,4BACA,GACA,iCACA,gCACA,2BACA,2BACA,sBACA,yBACA,sBACA,qBACA,iCACA,GACA,oBACA,uBACA,0BACA,2BACA,GACA,qCACA,GACA,6BACA,uBACA,2BACA,kBACA,GACA,IACA,GACA,gBACA,GACA,kDACA,2EACA,GACA,uCACA,gBACA,GACA,mDACA,sDACA,gDACA,4CACA,GACA,oDACA,2CACA,2CACA,GACA,2DACA,sDACA,GACA,oCACA,uCACA,QACA,GACA,gBACA,mEACA,wEACA,aACA,qDACA,qDACA,0CACA,GACA,+CACA,8CACA,6EACA,GACA,QACA,GACA,2EACA,2CACA,0BACA,wBACA,GACA,qDACA,qCACA,GACA,iEACA,mCACA,GACA,KA0EiC3W,KAAK,QACtC4W,eAxEyB,CACzB,kDACA,2BACA,GACA,yBACA,wBACA,yBACA,0BACA,4BACA,2BACA,GACA,oBACA,uBACA,0BACA,2BACA,GACA,gBACA,GACA,uBACA,oCACA,qDACA,0BACA,SACA,OACA,wBACA,mDACA,KA8CqC5W,KAAK,UAoB5C,cAjBOsV,EAAWK,iBACXL,EAAWngB,WACXmgB,EAAWM,cACXN,EAAWpc,aACXoc,EAAWQ,eACXR,EAAWS,kBACXT,EAAWW,uBACXX,EAAWY,YACXZ,EAAWa,WACXb,EAAWc,iBACXd,EAAWgB,kBACXhB,EAAWiB,UAElBC,EAAS9U,KAAO,mBAEhB8U,EAASK,UAAUvB,GAEZkB,GAGT7D,EAAM0C,iBAAiB/C,UAAYtb,OAAOzG,OAAOoiB,EAAM8C,SAASnD,WAChEK,EAAM0C,iBAAiB/C,UAAUwE,YAAcnE,EAAM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","file":"static/js/main.14942f79.chunk.js","sourcesContent":["import * as scale from \"d3-scale\";\r\n\r\n// Argo-lite Graph Sharing backend Strapi Server:\r\nexport const BACKEND_URL = \"https://argo-share.herokuapp.com\"; // for production\r\n// export const BACKEND_URL = \"https://sleepy-brushlands-57948.herokuapp.com\"; // for free heroku\r\n// export const BACKEND_URL = \"http://localhost:1337\"; // for local strapi development\r\n\r\nexport const SCALE_LINEAR = \"Linear Scale\";\r\nexport const SCALE_LOG = \"Log Scale\";\r\n\r\nexport const scales = {\r\n  [SCALE_LINEAR]: scale.scaleLinear,\r\n  [SCALE_LOG]: scale.scaleLog\r\n};\r\n\r\nexport const LOAD_USER_CONFIG = \"load-user-config\";\r\nexport const LOADED_USER_CONFIG = \"loaded-user-config\";\r\nexport const SAVE_USER_CONFIG = \"save-user-config\";\r\nexport const SAVED_USER_CONFIG = \"saved-user-config\";\r\n\r\nexport const FETCH_WORKSPACE_PROJECTS = \"fetch-workspace-projects\";\r\nexport const FETCHED_WORKSPACE_PROJECTS = \"fetched-workspace-projects\";\r\nexport const MENU_NEW_PROJECT = \"menu-new-project\";\r\nexport const CREATE_NEW_PROJECT = \"create-new-project\";\r\nexport const CREATED_NEW_PROJECT = \"created-new-project\";\r\n\r\nexport const DELETE_FILE = \"delete-file\";\r\nexport const RENAME_FILE = \"rename-file\";\r\n\r\nexport const LOAD_GRAPH_JSON = \"load-graph-json\";\r\nexport const LOAD_GRAPH_SQLITE = \"load-graph-sqlite\";\r\nexport const LOADED_GRAPH_JSON = \"loaded-graph-json\";\r\nexport const LOAD_TOAST_KEY = \"load-toast-key\";\r\n\r\nexport const SAVE_GRAPH_JSON = \"save-graph-json\";\r\nexport const SAVE_GRAPH_SQLITE = \"save-graph-sqlite\";\r\nexport const SAVED_GRAPH_JSON = \"saved-graph-json\";\r\nexport const SAVE_TOAST_KEY = \"save-const-key\";\r\n\r\nexport const MENU_LOAD = \"menu-load\";\r\nexport const MENU_IMPORT_CSV = \"menu-import-csv\";\r\nexport const MENU_SAVE_GRAPH_STATE = \"menu-save-graph-state\";\r\nexport const MENU_SAVE_GRAPH_STATE_TO_PROJECT =\r\n  \"menu-save-graph-state-to-project\";\r\nexport const MENU_SAVE_GRAPH_SQLITE = \"menu-save-graph-sqlite\";\r\nexport const SAVE_GRAPH_STATE = \"save-graph-state\";\r\nexport const SAVED_GRAPH_STATE = \"saved-graph-state\";\r\nexport const SAVE_GRAPH_STATE_TO_PROJECT = \"save-graph-state-to-project\";\r\nexport const SAVED_GRAPH_STATE_TO_PROJECT = \"saved-graph-state-to-project\";\r\nexport const LOAD_GRAPH_STATE = \"load-graph-state\";\r\nexport const LOADED_GRAPH_STATE = \"loaded-graph-state\";\r\n\r\nexport const SHOW_ITEM_IN_FOLDER = \"show-item-in-folder\";\r\nexport const SHOW_WORKSPACE_FOLDER = 'show-workspace-folder';\r\nexport const CHANGE_WORKSPACE_FOLDER = 'change-workspace-folder';\r\nexport const CHANGED_WORKSPACE_FOLDER = 'changed-workspace-folder';\r\n\r\nexport const CHOOSE_EDGE_FILE = \"choose-edge-file\";\r\nexport const CHOSEN_EDGE_FILE = \"chosen-edge-file\";\r\nexport const CHOOSE_NODE_FILE = \"choose-node-file\";\r\nexport const PEAKED_NODE_FILE = \"peaked-node-file\";\r\nexport const CHOSEN_NODE_FILE = \"chosen-node-file\";\r\n\r\nexport const CHOOSE_GRAPH_FILE = \"choose-graph-file\";\r\nexport const CHOSEN_GRAPH_FILE = \"chosen-graph-file\";\r\nexport const CHOOSE_STATE_FILE = \"choose-state-file\";\r\nexport const CHOSEN_STATE_FILE = \"chosen-state-file\";\r\n\r\nexport const NODE_AND_EDGE_FILE = \"both nodes and edges file\";\r\nexport const ONLY_EDGE_FILE = \"only edges file\";\r\n\r\nexport const GRAPH_AND_STATE_FILE = \"both graph and snapshot file\";\r\nexport const ONLY_GRAPH_FILE = \"only graph file\";\r\nexport const IMPORT_GRAPH = \"import-graph\";\r\nexport const IMPORTED_GRAPH = \"imported-graph\";\r\nexport const OPEN_GRAPH = \"open-graph\";\r\nexport const OPENED_GRAPH = \"opened-graph\";\r\n\r\nexport const SEARCH_REQUEST = \"search-request\";\r\nexport const SEARCH_RESPONSE = \"search-response\";\r\n\r\nexport const ADD_NODES = \"add-nodes\";\r\nexport const ADD_SELECT_NODE = \"add-select-node\";\r\nexport const ADD_NODE = \"add-node\";\r\nexport const GET_NEIGHBORS = \"get-neighbors\";\r\n","import { Position, Toaster } from \"@blueprintjs/core\";\r\n\r\nexport const toaster = Toaster.create({\r\n  position: Position.TOP\r\n});\r\n\r\nexport default toaster;\r\n","import { runInAction, toJS } from 'mobx';\r\nimport { Intent } from '@blueprintjs/core';\r\nimport { demapify } from 'es6-mapify';\r\n\r\nimport appState from '../stores/index';\r\nimport {\r\n  ADD_NODE,\r\n  ADD_NODES,\r\n  ADD_SELECT_NODE,\r\n  CHOOSE_EDGE_FILE,\r\n  CHOOSE_GRAPH_FILE,\r\n  CHOOSE_NODE_FILE,\r\n  CHOOSE_STATE_FILE,\r\n  CHOSEN_EDGE_FILE,\r\n  CHOSEN_GRAPH_FILE,\r\n  CHOSEN_NODE_FILE,\r\n  CHOSEN_STATE_FILE,\r\n  GET_NEIGHBORS,\r\n  IMPORT_GRAPH,\r\n  IMPORTED_GRAPH,\r\n  LOAD_GRAPH_SQLITE,\r\n  LOADED_GRAPH_SQLITE,\r\n  LOADED_GRAPH_STATE,\r\n  MENU_IMPORT_CSV,\r\n  MENU_LOAD,\r\n  MENU_NEW_PROJECT,\r\n  MENU_SAVE_GRAPH_SQLITE,\r\n  MENU_SAVE_GRAPH_STATE,\r\n  CREATE_NEW_PROJECT,\r\n  CREATED_NEW_PROJECT,\r\n  OPEN_GRAPH,\r\n  OPENED_GRAPH,\r\n  FETCH_WORKSPACE_PROJECTS,\r\n  FETCHED_WORKSPACE_PROJECTS,\r\n  SAVE_GRAPH_SQLITE,\r\n  SAVE_GRAPH_STATE,\r\n  SAVED_GRAPH_JSON,\r\n  SAVED_GRAPH_STATE,\r\n  SEARCH_REQUEST,\r\n  SEARCH_RESPONSE,\r\n  SHOW_ITEM_IN_FOLDER,\r\n  SAVED_GRAPH_STATE_TO_PROJECT,\r\n  MENU_SAVE_GRAPH_STATE_TO_PROJECT,\r\n  SAVE_GRAPH_STATE_TO_PROJECT,\r\n  DELETE_FILE,\r\n  RENAME_FILE,\r\n  SHOW_WORKSPACE_FOLDER,\r\n  LOAD_USER_CONFIG,\r\n  LOADED_USER_CONFIG,\r\n  SAVED_USER_CONFIG,\r\n  SAVE_USER_CONFIG,\r\n  CHANGE_WORKSPACE_FOLDER,\r\n  CHANGED_WORKSPACE_FOLDER,\r\n} from '../constants/index';\r\nimport { toaster } from '../notifications/client';\r\n\r\nimport createGraph from 'ngraph.graph';\r\nimport pageRank from 'ngraph.pagerank';\r\nimport parse from \"csv-parse/lib/sync\";\r\n// import worker from './worker';\r\n\r\n// TODO: Register web worker used by Argo-lite.\r\n\r\n// Argo-lite replacement for electron ipc.\r\nconst ipcRenderer = {\r\n  send: (eventString) => {\r\n    console.log(`ipcRenderer.send(${eventString}, ...)`);\r\n  }\r\n}\r\n\r\nexport default function registerIPC() {\r\n  // ipcRenderer.on(LOADED_USER_CONFIG, (event, loadedObject) => {\r\n  //   // Overwrite PreferenceStore values according to user config values,\r\n  //   // if present.\r\n  //   if (loadedObject.darkMode) {\r\n  //     appState.preferences.darkMode = true;\r\n  //   }\r\n  //   if (loadedObject.workspace && loadedObject.workspace != '') {\r\n  //     appState.preferences.workspacePath = loadedObject.workspace;\r\n  //   }\r\n  // });\r\n\r\n  // ipcRenderer.on(SAVED_USER_CONFIG, (event) => {\r\n  //   toaster.show({\r\n  //     message: \"User configuration saved\",\r\n  //     intent: Intent.SUCCESS,\r\n  //     iconName: 'saved',\r\n  //   });\r\n  // });\r\n\r\n  // ipcRenderer.on(LOADED_GRAPH_SQLITE, (event, loadedObject) => {\r\n  //   runInAction('load saved graph', () => {\r\n  //     appState.graph.rawGraph = loadedObject.rawGraph;\r\n  //     appState.graph.metadata = loadedObject.metadata;\r\n  //   });\r\n  // });\r\n\r\n  // ipcRenderer.on(OPENED_GRAPH, (event, loadedObject) => {\r\n  //   runInAction('load saved graph and state', () => {\r\n  //     console.log(loadedObject);\r\n  //     appState.graph.rawGraph = loadedObject.rawGraph;\r\n  //     appState.graph.metadata = loadedObject.metadata;\r\n  //     if (loadedObject.state) {\r\n  //       appState.graph.loadImmediateStates(loadedObject.state);\r\n  //     }\r\n  //   });\r\n  // });\r\n\r\n  // ipcRenderer.on(LOADED_GRAPH_STATE, (event, loadedObject) => {\r\n  //   appState.graph.loadImmediateStates(loadedObject);\r\n  // });\r\n\r\n  // ipcRenderer.on(SAVED_GRAPH_STATE, (event, savedFilePath) => {\r\n  //   toaster.show({\r\n  //     message: `Saved graph snapshot file to ${savedFilePath}`,\r\n  //     intent: Intent.SUCCESS,\r\n  //     iconName: 'saved',\r\n  //     action: {\r\n  //       onClick: () => ipcRenderer.send(SHOW_ITEM_IN_FOLDER, savedFilePath),\r\n  //       text: 'Show in Folder',\r\n  //     },\r\n  //   });\r\n  // });\r\n\r\n  // ipcRenderer.on(SAVED_GRAPH_STATE_TO_PROJECT, (event, snapshotName) => {\r\n  //   toaster.show({\r\n  //     message: `Saved to snapshot ${snapshotName}`,\r\n  //     intent: Intent.SUCCESS,\r\n  //     iconName: 'saved',\r\n  //   });\r\n  // });\r\n\r\n  // ipcRenderer.on(SAVED_GRAPH_JSON, (event, savedFilePath) => {\r\n  //   toaster.show({\r\n  //     message: `Saved graph file to ${savedFilePath}`,\r\n  //     intent: Intent.SUCCESS,\r\n  //     iconName: 'saved',\r\n  //     action: {\r\n  //       onClick: () => ipcRenderer.send(SHOW_ITEM_IN_FOLDER, savedFilePath),\r\n  //       text: 'Show in Folder',\r\n  //     },\r\n  //   });\r\n  // });\r\n\r\n  // ipcRenderer.on(CHOSEN_NODE_FILE, (event, path) => {\r\n  //   appState.import.importConfig.nodeFile.path = path;\r\n  // });\r\n\r\n  // ipcRenderer.on(CHOSEN_EDGE_FILE, (event, path) => {\r\n  //   appState.import.importConfig.edgeFile.path = path;\r\n  // });\r\n\r\n  // ipcRenderer.on(CHOSEN_GRAPH_FILE, (event, path) => {\r\n  //   appState.import.graphFile = path;\r\n  // });\r\n\r\n  // ipcRenderer.on(CHOSEN_STATE_FILE, (event, path) => {\r\n  //   appState.import.stateFile = path;\r\n  // });\r\n\r\n  // ipcRenderer.on(IMPORTED_GRAPH, (event) => {\r\n  //   appState.import.loading = false;\r\n  //   appState.import.dialogOpen = false;\r\n  //   appState.project.isFetching = true;\r\n  //   fetchWorkspaceProjects();\r\n  // });\r\n\r\n  // ipcRenderer.on(ADD_NODES, (event, toAdd) => {\r\n  //   runInAction('add nodes and edges to graph', () => {\r\n  //     appState.graph.rawGraph.nodes = appState.graph.rawGraph.nodes.concat(\r\n  //       toAdd.nodes,\r\n  //     );\r\n  //     appState.graph.rawGraph.edges = appState.graph.rawGraph.edges.concat(\r\n  //       toAdd.edges,\r\n  //     );\r\n  //   });\r\n  // });\r\n\r\n  // ipcRenderer.on(ADD_SELECT_NODE, (event, toAdd) => {\r\n  //   runInAction('add nodes and edges to graph', () => {\r\n  //     appState.graph.rawGraph.nodes = appState.graph.rawGraph.nodes.concat(\r\n  //       toAdd.nodes,\r\n  //     );\r\n  //     appState.graph.rawGraph.edges = appState.graph.rawGraph.edges.concat(\r\n  //       toAdd.edges,\r\n  //     );\r\n  //   });\r\n\r\n  //   appState.graph.frame.setLastNode(toAdd.nodes[0].node_id);\r\n  //   appState.graph.frame.dragLastNode();\r\n  // });\r\n\r\n  // ipcRenderer.on(SEARCH_RESPONSE, (event, candidates) => {\r\n  //   var cands = JSON.parse(candidates);\r\n  //   var ckeys = cands.map(x => x.node_id);\r\n  //   appState.search.allCands = Object.values(cands);\r\n  //   appState.search.pageNum = 0;\r\n  //   appState.search.nPerPage = 10;\r\n  //   appState.search.numCandidates = appState.search.allCands.length;\r\n  //   appState.search.maxPage = parseInt(\r\n  //     appState.search.allCands.length / appState.search.nPerPage,\r\n  //   );\r\n  //   appState.search.pages = [...Array(appState.search.maxPage).keys()];\r\n  //   appState.search.candidates = appState.search.allCands.slice(0, 10);\r\n  //   appState.search.panelOpen = true;\r\n  //   if (appState.graph.frame) {\r\n  //     appState.graph.frame.highlightNodeIds(ckeys, true);\r\n  //   }\r\n  // });\r\n\r\n  // ipcRenderer.on(LOADED_GRAPH_STATE, (event, stateStr) => {\r\n  //   appState.graph.loadImmediateStates(stateStr);\r\n  // });\r\n\r\n  // ipcRenderer.on(CREATED_NEW_PROJECT, () => {\r\n  //   fetchWorkspaceProjects();\r\n  // });\r\n\r\n  // ipcRenderer.on(FETCHED_WORKSPACE_PROJECTS, (event, projects) => {\r\n  //   appState.project.isFetching = false;\r\n  //   appState.project.projects = projects;\r\n  //   // Update mobx state on projects, useful for updating the components after deleting/renaming etc.\r\n  //   if (appState.project.currentProject !== null) {\r\n  //     // There is a project currently selected (showing in a ProjectDetailDialog etc.)\r\n  //     // This fetch needs to update the dialog also\r\n  //     const temp = appState.project.projects.filter((project) => {\r\n  //       return project.projectPath === appState.project.currentProject.projectPath;\r\n  //     });\r\n  //     if (temp.length === 1) {\r\n  //       appState.project.currentProject = temp[0];\r\n  //     } else {\r\n  //       appState.project.currentProject = null;\r\n  //     }\r\n      \r\n  //   }\r\n  // });\r\n\r\n  // ipcRenderer.on(CHANGED_WORKSPACE_FOLDER, (events, newWorkspaceDirectory) => {\r\n  //   appState.preferences.workspacePath = newWorkspaceDirectory;\r\n  //   appState.preferences.saveUserConfig();\r\n  // });\r\n\r\n  // ipcRenderer.on(MENU_NEW_PROJECT, () => {\r\n  //   appState.project.isNewProjectDialogOpen = true;\r\n  // });\r\n\r\n  // ipcRenderer.on(MENU_LOAD, () => {\r\n  //   appState.preferences.openDialogOpen = true;\r\n  // });\r\n\r\n  // ipcRenderer.on(MENU_IMPORT_CSV, () => {\r\n  //   appState.import.dialogOpen = true;\r\n  // });\r\n\r\n  // ipcRenderer.on(MENU_SAVE_GRAPH_STATE, () => {\r\n  //   // Original implementation for opening a traditional system-level save file dialog\r\n  //   // ipcRenderer.send(SAVE_GRAPH_STATE, appState.graph.saveImmediateStates());\r\n    \r\n  //   // New implementation opening a dialog that saves snapshot to project\r\n  //   appState.project.isSaveSnapshotDialogOpen = true;\r\n  // });\r\n\r\n  // ipcRenderer.on(MENU_SAVE_GRAPH_STATE_TO_PROJECT, () => {\r\n  //   requestSaveSnapshot();\r\n  // });\r\n\r\n  // ipcRenderer.on(MENU_SAVE_GRAPH_SQLITE, requestSaveSQLite);\r\n}\r\n\r\nexport function requestLoadSQLite() {\r\n  ipcRenderer.send(LOAD_GRAPH_SQLITE);\r\n}\r\n\r\nexport function addNode(node_id) {\r\n  ipcRenderer.send(ADD_NODE, node_id);\r\n}\r\n\r\nexport function requestNeighbors(\r\n  node_id,\r\n  attr = 'degree',\r\n  num = '10',\r\n  order = 'desc',\r\n) {\r\n  ipcRenderer.send(GET_NEIGHBORS, node_id, attr, num, order);\r\n}\r\n\r\nfunction requestSaveSQLite() {\r\n  ipcRenderer.send(\r\n    SAVE_GRAPH_SQLITE,\r\n    JSON.stringify({\r\n      graph: toJS(appState.graph.rawGraph),\r\n      metadata: toJS(appState.graph.metadata),\r\n      nodes: toJS(appState.graph.nodes),\r\n      overrides: toJS(demapify(appState.graph.overrides)),\r\n      nodePositions: appState.graph.frame.getPositions(),\r\n    }),\r\n  );\r\n}\r\n\r\nexport function requestChooseNodeFile(hasHeader) {\r\n  ipcRenderer.send(CHOOSE_NODE_FILE, hasHeader);\r\n}\r\n\r\nexport function requestChooseEdgeFile(hasHeader) {\r\n  ipcRenderer.send(CHOOSE_EDGE_FILE, hasHeader);\r\n}\r\n\r\nexport function requestChooseGraphFile() {\r\n  ipcRenderer.send(CHOOSE_GRAPH_FILE);\r\n}\r\n\r\nexport function requestChooseStateFile() {\r\n  ipcRenderer.send(CHOOSE_STATE_FILE);\r\n}\r\n\r\nexport function requestOpen() {\r\n  ipcRenderer.send(\r\n    OPEN_GRAPH,\r\n    appState.import.graphFile,\r\n    appState.import.stateFile,\r\n  );\r\n}\r\n\r\n// Request to delete a file specified at filePath\r\nexport function requestDelete(filePath) {\r\n  ipcRenderer.send(DELETE_FILE, filePath);\r\n}\r\n\r\n/**\r\n * Request to rename a file specified at filePath\r\n * @param filePath where the file to be renamed is located\r\n * @param newName new file name with extension\r\n */\r\nexport function requestRename(filePath, newName) {\r\n  ipcRenderer.send(RENAME_FILE, filePath, newName);\r\n}\r\n\r\nexport function requestSaveSnapshot(snapshotName) {\r\n  if (!snapshotName) {\r\n    // Default: Use the currently opened snapshot name (if no snapshot opened, the default name in the ProjectStore will be used)\r\n    ipcRenderer.send(SAVE_GRAPH_STATE_TO_PROJECT, appState.graph.saveImmediateStates(), appState.project.currentProject.projectPath, appState.project.currentSnapshotName);\r\n  } else {\r\n    ipcRenderer.send(SAVE_GRAPH_STATE_TO_PROJECT, appState.graph.saveImmediateStates(), appState.project.currentProject.projectPath, snapshotName);\r\n  }\r\n}\r\n\r\nexport function requestImportGraphFromCSV(hasNodeFile, delimiter, newProjectName) {\r\n  if (!newProjectName) {\r\n    newProjectName = 'Test Project';\r\n  }\r\n  appState.import.loading = true;\r\n  const importConfig = {\r\n    hasNodeFile,\r\n    nodes: {\r\n      path: appState.import.importConfig.nodeFile.path,\r\n      hasColumns: appState.import.importConfig.nodeFile.hasColumns,\r\n      columns: toJS(appState.import.importConfig.nodeFile.columns),\r\n      mapping: toJS(appState.import.importConfig.nodeFile.mapping),\r\n    },\r\n    edges: {\r\n      path: appState.import.importConfig.edgeFile.path,\r\n      hasColumns: appState.import.importConfig.edgeFile.hasColumns,\r\n      columns: toJS(appState.import.importConfig.edgeFile.columns),\r\n      mapping: toJS(appState.import.importConfig.edgeFile.mapping),\r\n      createMissing: appState.import.importConfig.edgeFile.createMissing,\r\n    },\r\n    delimiter,\r\n    newProjectName\r\n  };\r\n  ipcRenderer.send(IMPORT_GRAPH, importConfig);\r\n\r\n  // TODO: Potentially separate this out to web worker.\r\n  importGraphFromCSV(importConfig).then(graph => {\r\n    runInAction('load imported graph', () => {\r\n      appState.graph.rawGraph = graph.rawGraph;\r\n      appState.graph.metadata = graph.metadata;\r\n    });\r\n    // Reinitialize global configs\r\n    appState.graph.nodes = appState.graph.initialGlobalConfig.nodes;\r\n    appState.graph.overrides = new Map();\r\n    appState.import.loading = false;\r\n    appState.import.dialogOpen = false;\r\n  });\r\n}\r\n\r\nasync function readCSV(fileObject, hasHeader, delimiter) {\r\n  const file = fileObject;\r\n  const reader = new FileReader();\r\n  reader.readAsText(file);\r\n  return new Promise((resolve, reject) => {\r\n    reader.onload = () => {\r\n      const content = reader.result;\r\n      if (hasHeader) {\r\n        resolve(parse(content, {\r\n          comment: \"#\",\r\n          trim: true,\r\n          auto_parse: true,\r\n          skip_empty_lines: true,\r\n          columns: hasHeader,\r\n          delimiter\r\n        }));\r\n      }\r\n      resolve(parse(content, {\r\n        comment: \"#\",\r\n        trim: true,\r\n        auto_parse: true,\r\n        skip_empty_lines: true,\r\n        columns: undefined,\r\n        delimiter\r\n      }));\r\n    }\r\n  });\r\n  \r\n}\r\n\r\nasync function importGraphFromCSV(config) {\r\n  // Since the CSV lib we use uses int index when there's not header/column names specified\r\n  // but the frontend selector always convert int to string values, we need to\r\n  // manually convert the user-selected fromId and toId values back to int.\r\n  // Note that this should only be done when there's no header provided on the CSV (hasColumns == false).\r\n  const fromId = config.nodes.hasColumns ? config.edges.mapping.fromId : parseInt(config.edges.mapping.fromId);\r\n  const toId = config.nodes.hasColumns ? config.edges.mapping.toId : parseInt(config.edges.mapping.toId);\r\n\r\n  // Create temporary data structures.\r\n  let nodesArr = [];\r\n  const graph = createGraph();\r\n  const degreeDict = {};\r\n  if (config.hasNodeFile) {\r\n    nodesArr = await readCSV(appState.import.selectedNodeFileFromInput, config.nodes.hasColumns, config.delimiter);\r\n    nodesArr.forEach(node => graph.addNode(node[config.nodes.mapping.id].toString(),\r\n      { id: node[config.nodes.mapping.id].toString(), degree: 0, ...node }));\r\n    nodesArr =\r\n      nodesArr.map(\r\n        n => ({ ...n, id: n[config.nodes.mapping.id].toString(), degree: 0, pagerank: 0 }));\r\n    nodesArr.forEach(n => degreeDict[n.id] = 0);\r\n  }\r\n  const edges = await readCSV(appState.import.selectedEdgeFileFromInput, config.edges.hasColumns, config.delimiter);\r\n  if (config.edges.createMissing) {\r\n    edges.forEach((it) => {\r\n      const from = it[fromId].toString();\r\n      const to = it[toId].toString();\r\n      if (!graph.hasNode(from)) {\r\n        graph.addNode(from, { id: from, degree: 0 });\r\n        nodesArr.push({ id: from, degree: 0, pagerank: 0 });\r\n        degreeDict[from] = 0;\r\n      }\r\n      if (!graph.hasNode(to)) {\r\n        graph.addNode(to, { id: to, degree: 0 });\r\n        nodesArr.push({ id: to, degree: 0, pagerank: 0 });\r\n        degreeDict[to] = 0;\r\n      }\r\n    });\r\n  }\r\n\r\n  const edgesSet = new Set();\r\n  \r\n  const edgesArr = [];\r\n\r\n  const addEdge = (from, to) => {\r\n    const edgeKey = `${from}👉${to}`;\r\n    if (edgesSet.has(edgeKey)) {\r\n      return;\r\n    }\r\n    edgesSet.add(edgeKey);\r\n    graph.addLink(from, to);\r\n    degreeDict[to] += 1;\r\n    edgesArr.push({\r\n      source_id: from,\r\n      target_id: to,\r\n    });\r\n  };\r\n  \r\n  edges.forEach(it => {\r\n    const from = it[fromId].toString();\r\n    const to = it[toId].toString();\r\n    // Argo currently works with undirected graph\r\n    addEdge(from, to);\r\n    addEdge(to, from);\r\n  });\r\n\r\n  const rank = pageRank(graph);\r\n  nodesArr = nodesArr.map(n => ({ ...n, node_id: n.id, pagerank: rank[n.id], degree: degreeDict[n.id] }));\r\n  return {\r\n    rawGraph: { nodes: nodesArr, edges: edgesArr },\r\n    metadata: {\r\n      snapshotName: 'Untitled Graph',\r\n      fullNodes: nodesArr.length,\r\n      fullEdges: Math.floor(edgesArr.length / 2), // Counting undirected edges\r\n      nodeProperties: Object.keys(nodesArr[0]),\r\n      nodeComputed: ['pagerank', 'degree'],\r\n      edgeProperties: ['source_id', 'target_id'],\r\n    },\r\n  }\r\n}\r\n\r\nexport function runSearch(searchStr) {\r\n  ipcRenderer.send(SEARCH_REQUEST, searchStr, appState.graph.searchOrder);\r\n}\r\n\r\nexport function fetchWorkspaceProjects() {\r\n  ipcRenderer.send(FETCH_WORKSPACE_PROJECTS);\r\n}\r\n\r\nexport function requestCreateNewProject(projectMetadata) {\r\n  ipcRenderer.send(CREATE_NEW_PROJECT, projectMetadata);\r\n}\r\n\r\nexport function requestOpenWorkspaceFolder() {\r\n  ipcRenderer.send(SHOW_WORKSPACE_FOLDER);\r\n}\r\n\r\nexport function requestLoadUserConfig() {\r\n  ipcRenderer.send(LOAD_USER_CONFIG);\r\n}\r\n\r\nexport function requestSaveUserConfig(userConfig) {\r\n  ipcRenderer.send(SAVE_USER_CONFIG, userConfig);\r\n}\r\n\r\nexport function requestChangeWorkspace() {\r\n  ipcRenderer.send(CHANGE_WORKSPACE_FOLDER);\r\n}","import { observable, action } from \"mobx\";\r\nimport { requestLoadUserConfig, requestSaveUserConfig } from \"../ipc/client\";\r\n\r\nexport default class PreferencesStore {\r\n  @observable dialogOpen = false;\r\n\r\n  @observable openDialogOpen = false;\r\n  @observable openSnapshotDialogOpen = false;\r\n  @observable shareDialogOpen = false;\r\n  @observable statisticsDialogOpen = false;\r\n\r\n  // The following fields are asynchronously loaded.\r\n  // Any writes to these fields through saveUserConfig\r\n  // won't be active until the app exits and starts\r\n  // next time.\r\n\r\n  @observable darkMode = true;\r\n\r\n  @observable workspacePath = '';\r\n\r\n  // This is called at the beginning of the app.\r\n  loadUserConfig() {\r\n    requestLoadUserConfig();\r\n  }\r\n\r\n  saveUserConfig() {\r\n    const userConfig = {\r\n      darkMode: this.darkMode,\r\n      workspace: this.workspacePath,\r\n    }\r\n\r\n    requestSaveUserConfig(userConfig);\r\n  }\r\n}\r\n","const jsnx = require('jsnetworkx');\r\nconst jsgraphs = require('js-graph-algorithms');\r\n\r\n/**\r\n * Convert Argo-lite snapshot for use in the JSNetworkX library.\r\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\r\n */\r\nexport function convertToJsnx(snapshot) {\r\n    const jsnxGraph = new jsnx.Graph();\r\n    jsnxGraph.addNodesFrom(snapshot.rawGraph.nodes.map(n => [n.id, n]));\r\n    jsnxGraph.addEdgesFrom(snapshot.rawGraph.edges.map(e => [e.source_id, e.target_id]));\r\n    return jsnxGraph;\r\n}\r\n\r\n/**\r\n * Convert Argo-lite snapshot for use in the ngraph library.\r\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\r\n */\r\nexport function convertToNGraph(snapshot) {\r\n    return null;\r\n}\r\n\r\n/**\r\n * Convert Argo-lite snapshot for use in the js-graph-algorithms library.\r\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\r\n */\r\nexport function convertToJSGraph(snapshot) {\r\n    var idDict = {};\r\n    var i;\r\n    for (i = 0; i < snapshot.rawGraph.nodes.length; i++) {\r\n        idDict[snapshot.rawGraph.nodes[i].id] = i;\r\n    }\r\n    var g = new jsgraphs.Graph(snapshot.rawGraph.nodes.length);\r\n    snapshot.rawGraph.edges.forEach(e => {\r\n        g.addEdge(idDict[e.source_id], idDict[e.target_id]);\r\n    });\r\n    return new jsgraphs.ConnectedComponents(g);\r\n}\r\n\r\n/**\r\n * Convert Argo-lite snapshot to the GEXF format.\r\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\r\n */\r\nexport function convertToGexf(snapshot) {\r\n    return null;\r\n}\r\n\r\n/**\r\n * Calculate the average clustering coefficient of the (undirected unweighted) graph.\r\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\r\n */\r\nexport function averageClusteringCoefficient(snapshot) {\r\n    const jsnxGraph = convertToJsnx(snapshot);\r\n    const result = jsnx.averageClustering(jsnxGraph);\r\n    console.log('Computing Clustering Coefficient');\r\n    return result;\r\n}\r\n\r\n/**\r\n * Calculate the number of connected components in a graph\r\n * @param {*} rawGraph the rawGraph inside appState\r\n */\r\nexport function connectedComponents(snapshot) {\r\n    var cc = convertToJSGraph(snapshot);\r\n    return cc.componentCount();\r\n}\r\n ","import { observable, computed, action, autorun } from \"mobx\";\r\nimport createGraph from \"ngraph.graph\";\r\nimport { scales } from \"../constants/index\";\r\nimport appState from \".\";\r\nimport uniq from \"lodash/uniq\";\r\nimport { averageClusteringCoefficient, connectedComponents} from \"../services/AlgorithmUtils\";\r\n\r\nexport default class GraphStore {\r\n\r\n  initialGlobalConfig = {\r\n    nodes: {\r\n      colorBy: \"pagerank\",\r\n      color: {\r\n        scale: \"Linear Scale\",\r\n        from: \"#448AFF\",\r\n        to: \"#E91E63\"\r\n      },\r\n      sizeBy: \"pagerank\",\r\n      size: {\r\n        min: 2,\r\n        max: 10,\r\n        scale: \"Linear Scale\"\r\n      },\r\n      labelBy: \"node_id\",\r\n      shape: \"circle\",\r\n      labelSize: 1,\r\n      labelLength: 10\r\n    },\r\n  }\r\n\r\n  @observable\r\n  nodes = this.initialGlobalConfig.nodes;\r\n\r\n  // Updated by frame event\r\n  @observable selectedNodes = [];\r\n  // Updated by frame event. Not being listened, only used to save label visibility.\r\n  nodesShowingLabels = [];\r\n  // Used by autorun during snapshot loading.\r\n  @observable initialNodesShowingLabels = [];\r\n\r\n  @observable\r\n  overrideConfig = {\r\n    color: \"#000\",\r\n    size: 5,\r\n    label: \"\",\r\n    shape: \"circle\"\r\n  };\r\n\r\n  @observable\r\n  rawGraph = {\r\n    nodes: [],\r\n    edges: []\r\n  };\r\n\r\n  @observable\r\n  metadata = {\r\n    fullNodes: 0,\r\n    fullEdges: 0,\r\n    nodeProperties: [],\r\n    nodeComputed: [\"pagerank\", \"degree\"],\r\n    edgeProperties: [],\r\n    snapshotName: \"loading...\" // Optional: for display in Argo-lite only\r\n  };\r\n\r\n  // used for listing all the properties, either original or computed\r\n  @computed\r\n  get allPropertiesKeyList() {\r\n    return uniq([\r\n      ...this.metadata.nodeProperties,\r\n      ...this.metadata.nodeComputed\r\n    ]).filter(k => k !== 'id'); // since node_id is already present\r\n  }\r\n\r\n  @observable.ref frame = null;\r\n  @observable.ref positions = null;\r\n\r\n  @observable overrides = new Map();\r\n  @observable searchOrder = \"degree\";\r\n\r\n  hasGraphLoaded = false;\r\n\r\n  @computed\r\n  get hasGraph() {\r\n    if (this.rawGraph.nodes.length > 0) {\r\n      this.hasGraphLoaded = true;\r\n    }\r\n    return this.hasGraphLoaded;\r\n  }\r\n\r\n  @computed\r\n  get minMax() {\r\n    const ret = {};\r\n    for (const p of [\r\n      ...this.metadata.nodeProperties,\r\n      ...this.metadata.nodeComputed\r\n    ]) {\r\n      let min = Number.MAX_VALUE;\r\n      let max = Number.MIN_VALUE;\r\n\r\n      for (const n of this.rawGraph.nodes) {\r\n        min = Math.max(Math.min(min, n[p]), 0.0000001);\r\n        max = Math.max(max, n[p]);\r\n      }\r\n\r\n      ret[p] = [min, max];\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  @computed\r\n  get nodeSizeScale() {\r\n    return scales[this.nodes.size.scale]()\r\n      .domain(this.minMax[this.nodes.sizeBy])\r\n      .range([this.nodes.size.min, this.nodes.size.max]);\r\n  }\r\n\r\n  @computed\r\n  get nodeColorScale() {\r\n    return scales[this.nodes.color.scale]()\r\n      .domain(this.minMax[this.nodes.colorBy])\r\n      .range([this.nodes.color.from, this.nodes.color.to]);\r\n  }\r\n\r\n  @computed\r\n  get computedGraph() {\r\n    const graph = createGraph();\r\n    this.rawGraph.nodes.forEach(n => {\r\n      const override = this.overrides.get(n.id.toString());\r\n      graph.addNode(n.id.toString(), {\r\n        label: (override && override.get(\"label\")) || n[this.nodes.labelBy],\r\n        size:\r\n          (override && override.get(\"size\")) ||\r\n          this.nodeSizeScale(n[this.nodes.sizeBy]),\r\n        color:\r\n          (override && override.get(\"color\")) ||\r\n          this.nodeColorScale(n[this.nodes.colorBy]),\r\n        shape: (override && override.get(\"shape\")) || n[this.nodes.shape],\r\n        ref: n\r\n      });\r\n    });\r\n\r\n    this.rawGraph.edges.forEach(e => {\r\n      graph.addLink(e.source_id.toString(), e.target_id.toString());\r\n    });\r\n\r\n    return graph;\r\n  }\r\n\r\n  removeNodes(nodeids) {\r\n    this.rawGraph.nodes = this.rawGraph.nodes.filter(\r\n      n => !nodeids.includes(n.id)\r\n    );\r\n    this.rawGraph.edges = this.rawGraph.edges.filter(\r\n      e => !nodeids.includes(e.source_id) && !nodeids.includes(e.target_id)\r\n    );\r\n    appState.graph.frame.removeSelected();\r\n  }\r\n\r\n  getSnapshot() {\r\n    const snapshot = {\r\n      rawGraph: this.rawGraph,\r\n      overrides: this.overrides,\r\n      nodesShowingLabels: this.nodesShowingLabels,\r\n      positions: this.frame.getPositions(),\r\n      metadata: this.metadata,\r\n      global: {\r\n        nodes: this.nodes,\r\n      },\r\n    };\r\n    return snapshot;\r\n  }\r\n\r\n  /**\r\n   * [Argo-lite] Saves graph snapshot as String\r\n   * \r\n   * Note that Argo-lite snapshot contains all graph data\r\n   * and metadata except nodes/edges deleted by users.\r\n   * This is different from Argo-electron snapshot.\r\n   */\r\n  saveImmediateStates(optionalConfig) {\r\n    const snapshot = this.getSnapshot();\r\n    // TODO: add corresponding options on frontend\r\n    // The optional options allows users to leave out\r\n    // certain app state when saving snapshot\r\n    if (optionalConfig) {\r\n      if (optionalConfig.noPosition) {\r\n        snapshot.positions = undefined;\r\n      }\r\n      if (optionalConfig.noGlobal) {\r\n        snapshot.global = undefined;\r\n      }\r\n      if (optionalConfig.noOverride) {\r\n        snapshot.overrides = undefined;\r\n      }\r\n    }\r\n    return JSON.stringify(snapshot);\r\n  }\r\n\r\n  @action\r\n  loadImmediateStates(savedStatesStr) {\r\n    const savedStates = JSON.parse(savedStatesStr);\r\n    if (!savedStates) {\r\n      return;\r\n    }\r\n    const savedOverrides = new Map(\r\n      Object.entries(savedStates.overrides).map(([k, v]) => [\r\n        k,\r\n        new Map(Object.entries(v))\r\n      ])\r\n    );\r\n    this.overrides.clear();\r\n    this.overrides.merge(savedOverrides);\r\n\r\n    if (savedStates.metadata) {\r\n      this.metadata = savedStates.metadata;\r\n    }\r\n    if (savedStates.global) {\r\n      this.nodes = savedStates.global.nodes;\r\n    }\r\n\r\n    // The following lines trigger autoruns.\r\n    this.rawGraph = savedStates.rawGraph;\r\n    if (savedStates.positions) {\r\n      this.positions = savedStates.positions;\r\n    }\r\n    if (savedStates.nodesShowingLabels) {\r\n      this.initialNodesShowingLabels = savedStates.nodesShowingLabels;\r\n      this.nodesShowingLabels = savedStates.nodesShowingLabels;\r\n    }\r\n  }\r\n\r\n  @computed\r\n  get averageClustering() {\r\n    const snapshot = {\r\n      rawGraph: this.rawGraph,\r\n    };\r\n    return averageClusteringCoefficient(snapshot);\r\n  }\r\n\r\n  @computed\r\n  get components() {\r\n    const snapshot = {\r\n      rawGraph: this.rawGraph,\r\n    };\r\n    return connectedComponents(snapshot);\r\n  }\r\n}\r\n\r\n","import { observable } from \"mobx\";\r\n\r\nexport default class ImportStore {\r\n  @observable graphFile = \"\";\r\n  @observable stateFile = \"\";\r\n\r\n  @observable dialogOpen = false;\r\n\r\n  @observable loading = false;\r\n\r\n  // Argo-lite specific: File object selected via the file input.\r\n  @observable selectedEdgeFileFromInput = null;\r\n  @observable selectedNodeFileFromInput = null;\r\n\r\n  @observable\r\n  importConfig = {\r\n    nodeFile: {\r\n      path: \"\",\r\n      topN: [],\r\n      hasColumns: true,\r\n      ready: false, // whether the topN is ready to display\r\n      columns: [],\r\n      mapping: {\r\n        id: \"<UNK>\"\r\n      },\r\n      delimiter: \",\"\r\n    },\r\n    edgeFile: {\r\n      path: \"\",\r\n      ready: false,\r\n      hasColumns: true,\r\n      columns: [],\r\n      topN: [],\r\n      mapping: {\r\n        fromId: \"<UNK>\",\r\n        toId: \"<UNK>\"\r\n      },\r\n      createMissing: true,\r\n      delimiter: \",\"\r\n    }\r\n  };\r\n}\r\n","import { observable } from \"mobx\";\r\n\r\nexport default class ProjectStore {\r\n \r\n  @observable projects = [];\r\n\r\n  /*\r\n   * Active project and snapshot\r\n   */\r\n  @observable currentProject = null;\r\n  // @observable currentProjectName = null;\r\n  // @observable currentProjectPath = null;\r\n  @observable currentSnapshotName = \"Quick Save\"; // TODO: If not loaded from snapshot, use this, otherwise use the name of the loaded snapshot\r\n\r\n  // [Argo-lite] for displaying snapshot file in textarea to be copied\r\n  @observable stringCopyOfSnapshot = 'Loading';\r\n  \r\n  /*\r\n   * Dialogs and UI\r\n   */\r\n  @observable isNewProjectDialogOpen = false;\r\n  @observable isProjectDetailDialogOpen = false;\r\n  @observable isSaveSnapshotDialogOpen = false;\r\n  @observable isRenameSnapshotDialogOpen = false;\r\n  // when the ipc returns the projects data for the first time\r\n  // turn off `isFetching` so that the spinner of WorkspaceView will be turned off\r\n  // Also used when refreshing WorkspaceView\r\n  @observable isFetching = true;\r\n\r\n  /*\r\n   * New project creation and import\r\n   */\r\n  @observable newProjectName = '';\r\n}\r\n","import { observable } from \"mobx\";\r\n\r\nexport default class SearchStore {\r\n  @observable searchStr = \"\";\r\n  @observable candidates = [];\r\n  @observable numCandidates = 0;\r\n  @observable panelOpen = false;\r\n}\r\n","import { autorun, runInAction } from \"mobx\";\r\nimport { Intent } from \"@blueprintjs/core\";\r\n\r\nimport PreferencesStore from \"./PreferencesStore\";\r\nimport GraphStore from \"./GraphStore\";\r\nimport ImportStore from \"./ImportStore\";\r\nimport ProjectStore from \"./ProjectStore\";\r\n// import { peakCSV } from \"../services/CSVUtils\";\r\nimport parse from \"csv-parse/lib/sync\";\r\nimport SearchStore from \"./SearchStore\";\r\nimport { runSearch } from \"../ipc/client\";\r\n\r\nimport { BACKEND_URL } from \"../constants\";\r\nimport { toaster } from '../notifications/client';\r\n\r\nexport class AppState {\r\n  constructor() {\r\n    this.preferences = new PreferencesStore();\r\n    this.graph = new GraphStore();\r\n    this.import = new ImportStore();\r\n    this.search = new SearchStore();\r\n    this.project = new ProjectStore();\r\n  }\r\n}\r\n\r\nconst appState = new AppState();\r\n\r\nwindow.appState = appState;\r\n\r\nconst loadSnapshotFromURL = (url) => {\r\n  return fetch(url, {\r\n    method: 'GET',\r\n    mode: 'cors'\r\n  }).then(response => response.text());\r\n};\r\n\r\nconst loadSnapshotFromStrapi = (uuid) => {\r\n  const url = `${BACKEND_URL}/snapshots?uuid=${uuid}`;\r\n  return fetch(url, {\r\n    method: 'GET',\r\n    mode: 'cors'\r\n  }).then(response => response.json()).then(json => json[0].body).catch(error => {\r\n    // TODO: Show user an error dialog saying graph cannot be fetched.\r\n  });\r\n};\r\n\r\nconst loadAndDisplaySnapshotFromURL = (url) => {\r\n  loadSnapshotFromURL(url).then(snapshotString => {\r\n    // use filename/last segment of URL as title in Navbar\r\n    appState.graph.metadata.snapshotName = url.split('/').pop() || url.split('/').pop().pop();\r\n    appState.graph.loadImmediateStates(snapshotString);\r\n  });\r\n};\r\n\r\nconst loadAndDisplaySnapshotFromStrapi = (uuid) => {\r\n  loadSnapshotFromStrapi(uuid).then(snapshotString => {\r\n    // TODO: use more sensible snapshot name\r\n    appState.graph.metadata.snapshotName = 'Shared';\r\n    appState.graph.loadImmediateStates(snapshotString);\r\n  });\r\n};\r\n\r\nwindow.loadAndDisplaySnapshotFromURL = loadAndDisplaySnapshotFromURL;\r\n\r\nwindow.loadInitialSampleGraph = async () => {\r\n  // default fallback url\r\n  let url = \"https://argo-graph-lite.s3.amazonaws.com/lesmiserables.json\";\r\n\r\n  // check url hash\r\n  if (window.location.hash) {\r\n    const hash = window.location.hash.substring(1);\r\n    // If the hash component begins with http.\r\n    if (hash.length >= 4 && hash.startsWith('http')) {\r\n      try {\r\n        url = decodeURIComponent(hash);\r\n      } catch (e) {\r\n        console.error(e);\r\n        alert('Provided URL is not valid.');\r\n      }\r\n    } else {\r\n      // If the hash component does not begin with http\r\n      // treat it as a uuid in strapi.\r\n      loadAndDisplaySnapshotFromStrapi(hash);\r\n      return;\r\n    }\r\n    \r\n  }\r\n  loadAndDisplaySnapshotFromURL(url)\r\n};\r\n\r\nwindow.saveSnapshotToString = () => {\r\n  const snapshotString = appState.graph.saveImmediateStates();\r\n  return snapshotString;\r\n};\r\n\r\n// Load initial sample graph when Argo Lite is ready\r\nwindow.addEventListener('load', (event) => {\r\n  window.loadInitialSampleGraph();\r\n});\r\n\r\nconst updateTimeout = null;\r\n\r\n// Load graph on frontend once the rawGraph has been returned from IPC\r\n// Once a graph has been loaded and displayed, even if nodes are all deleted, still consider it \"hasGraph\"\r\nautorun(() => {\r\n  if (!appState.graph.hasGraph && appState.graph.rawGraph.nodes.length > 0) {\r\n    appState.graph.hasGraph = true;\r\n  }\r\n})\r\n\r\nautorun(() => {\r\n  if (appState.graph.frame) {\r\n    appState.graph.frame.updateGraph(appState.graph.computedGraph);\r\n    appState.graph.frame.setAllNodesShape(appState.graph.nodes.shape);\r\n    appState.graph.frame.setLabelRelativeSize(appState.graph.nodes.labelSize);\r\n    appState.graph.frame.setLabelLength(appState.graph.nodes.labelLength);\r\n  }\r\n});\r\n\r\nautorun(() => {\r\n  if (appState.graph.frame && appState.graph.positions) {\r\n    // If positions are saved in a snapshot, pause layout upon loading.\r\n    appState.graph.frame.paused = true;\r\n    appState.graph.frame.updatePositions(appState.graph.positions);\r\n    appState.graph.positions = null;\r\n    console.log('[autorun] Positions updated.');\r\n  }\r\n  if (appState.graph.frame && appState.graph.initialNodesShowingLabels) {\r\n    appState.graph.frame.showLabels(appState.graph.initialNodesShowingLabels);\r\n    appState.graph.initialNodesShowingLabels = null;\r\n  }\r\n});\r\n\r\nautorun(() => {\r\n  const searchStr = appState.search.searchStr;\r\n  if (searchStr.length >= 3) {\r\n    runSearch(searchStr);\r\n  } else {\r\n    appState.search.panelOpen = false;\r\n    appState.search.candidates.splice(0, appState.search.candidates.length);\r\n    if (appState.graph.frame) {\r\n      appState.graph.frame.highlightNodeIds([], true);\r\n    }\r\n  }\r\n});\r\n\r\n// Argo-lite specific: extract CSV from File object and update related fields.\r\nautorun(() => {\r\n  const file = appState.import.selectedEdgeFileFromInput;\r\n  const hasHeader = appState.import.importConfig.edgeFile.hasColumns;\r\n  const delimiter = appState.import.importConfig.edgeFile.delimiter;\r\n\r\n  if (!file) {\r\n    return;\r\n  }\r\n  const reader = new FileReader();\r\n  reader.readAsText(file);\r\n\r\n  reader.onload = () => {\r\n    // Read entire CSV into memory as string\r\n    const fileAsString = reader.result;\r\n    // Get top 20 lines. Or if there's less than 10 line, get all the lines.\r\n    const lines = fileAsString.split('\\n');\r\n    const lineNumber = lines.length;\r\n    const topLinesAsString = lines.map(l => l.trim()).filter((l, i) => i < 20).join('\\n');\r\n    console.log(topLinesAsString);\r\n\r\n    // Parse the top lines\r\n    try {\r\n      const it = hasHeader ? parse(topLinesAsString, {\r\n        comment: \"#\",\r\n        trim: true,\r\n        auto_parse: true,\r\n        skip_empty_lines: true,\r\n        columns: hasHeader,\r\n        delimiter\r\n      }) : parse(topLinesAsString, {\r\n        comment: \"#\",\r\n        trim: true,\r\n        auto_parse: true,\r\n        skip_empty_lines: true,\r\n        columns: undefined,\r\n        delimiter\r\n      });\r\n      runInAction(\"preview top N lines of edge file\", () => {\r\n        appState.import.importConfig.edgeFile.topN = it;\r\n        appState.import.importConfig.edgeFile.columns = Object.keys(it[0]).map(key => `${key}`);\r\n        appState.import.importConfig.edgeFile.mapping.fromId = appState.import.importConfig.edgeFile.columns[0];\r\n        appState.import.importConfig.edgeFile.mapping.toId = appState.import.importConfig.edgeFile.columns[0]\r\n        appState.import.importConfig.edgeFile.ready = true;\r\n      });\r\n    } catch {\r\n      toaster.show({\r\n        message: 'Error: Fails to parse file',\r\n        intent: Intent.DANGER,\r\n        timeout: -1\r\n      });\r\n    }\r\n  };\r\n\r\n  reader.onerror = () => {\r\n    console.error(reader.error);\r\n    toaster.show({\r\n      message: 'Error: Fails to open file',\r\n      intent: Intent.DANGER,\r\n      timeout: -1\r\n    });\r\n  };\r\n});\r\n\r\nautorun(() => {\r\n  const file = appState.import.selectedNodeFileFromInput;\r\n  const hasHeader = appState.import.importConfig.nodeFile.hasColumns;\r\n  const delimiter = appState.import.importConfig.nodeFile.delimiter;\r\n\r\n  if (!file) {\r\n    return;\r\n  }\r\n  const reader = new FileReader();\r\n  reader.readAsText(file);\r\n\r\n  reader.onload = () => {\r\n    // Read entire CSV into memory as string\r\n    const fileAsString = reader.result;\r\n    // Get top 20 lines. Or if there's less than 10 line, get all the lines.\r\n    const lines = fileAsString.split('\\n');\r\n    const lineNumber = lines.length;\r\n    const topLinesAsString = lines.map(l => l.trim()).filter((l, i) => i < 20).join('\\n');\r\n    console.log(topLinesAsString);\r\n\r\n    // Parse the top lines\r\n    try {\r\n      const it = hasHeader ? parse(topLinesAsString, {\r\n        comment: \"#\",\r\n        trim: true,\r\n        auto_parse: true,\r\n        skip_empty_lines: true,\r\n        columns: hasHeader,\r\n        delimiter\r\n      }) : parse(topLinesAsString, {\r\n        comment: \"#\",\r\n        trim: true,\r\n        auto_parse: true,\r\n        skip_empty_lines: true,\r\n        columns: undefined,\r\n        delimiter\r\n      });\r\n\r\n      runInAction(\"preview top N lines of edge file\", () => {\r\n        appState.import.importConfig.nodeFile.topN = it;\r\n        appState.import.importConfig.nodeFile.columns = Object.keys(it[0]).map(key => `${key}`);\r\n        appState.import.importConfig.nodeFile.mapping.fromId = appState.import.importConfig.nodeFile.columns[0];\r\n        appState.import.importConfig.nodeFile.mapping.toId = appState.import.importConfig.nodeFile.columns[0]\r\n        appState.import.importConfig.nodeFile.ready = true;\r\n      });\r\n    } catch {\r\n      toaster.show({\r\n        message: 'Error: Fails to open file',\r\n        intent: Intent.DANGER,\r\n        timeout: -1\r\n      });\r\n    }\r\n  };\r\n\r\n  reader.onerror = () => {\r\n    console.error(reader.error);\r\n    toaster.show({\r\n      message: 'Error: Fails to open file',\r\n      intent: Intent.DANGER,\r\n      timeout: -1\r\n    });\r\n  };\r\n});\r\n\r\nexport default appState;\r\n","import React from \"react\";\r\nimport { Button, Classes, Dialog, Intent, Switch } from \"@blueprintjs/core\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\nimport { requestChangeWorkspace } from \"../ipc/client\";\r\n\r\n@observer\r\nclass PreferencesDialog extends React.Component {\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        iconName=\"cog\"\r\n        className={classnames({\r\n          [Classes.DARK]: appState.preferences.darkMode\r\n        })}\r\n        isOpen={appState.preferences.dialogOpen}\r\n        onClose={() => {\r\n          appState.preferences.dialogOpen = false;\r\n        }}\r\n        title=\"Preferences\"\r\n      >\r\n        <div className=\"pt-dialog-body\">\r\n          <Switch\r\n            label=\"Dark Mode\"\r\n            checked={appState.preferences.darkMode}\r\n            onChange={() => {\r\n              appState.preferences.darkMode = !appState.preferences.darkMode;\r\n              appState.preferences.saveUserConfig();\r\n              if (appState.graph.frame) {\r\n                appState.graph.frame.toggleDark();\r\n              }\r\n            }}\r\n          />\r\n          \r\n          <p>Choose a different workspace directory (need to relaunch Argo)</p>\r\n          <div className={classnames(Classes.CONTROL_GROUP)}>\r\n            <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\r\n              <input\r\n                type=\"text\"\r\n                className={classnames(Classes.DISABLED, Classes.INPUT)}\r\n                placeholder=\"Select workspace directory\"\r\n                readOnly\r\n                value={appState.preferences.workspacePath}\r\n              />\r\n            </div>\r\n            <Button\r\n              intent={Intent.PRIMARY}\r\n              onClick={() => {\r\n                requestChangeWorkspace();\r\n              }}\r\n            >\r\n              Choose Directory\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"pt-dialog-footer\">\r\n          <div className=\"pt-dialog-footer-actions\">\r\n            <Button\r\n              intent={Intent.PRIMARY}\r\n              onClick={() => {\r\n                appState.preferences.dialogOpen = false;\r\n              }}\r\n              text=\"Done\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PreferencesDialog;","import React from \"react\";\r\nimport { Button, Classes, Collapse } from \"@blueprintjs/core\";\r\nimport classnames from \"classnames\";\r\n\r\nexport default ({ name, isOpen, onToggle, children }) => (\r\n  <div>\r\n    <Button\r\n      className={classnames(Classes.FILL, Classes.MINIMAL, \"text-align-left\")}\r\n      rightIconName={isOpen ? \"chevron-up\" : \"chevron-down\"}\r\n      onClick={onToggle}\r\n    >\r\n      {name}\r\n    </Button>\r\n    <Collapse isOpen={isOpen}>{children}</Collapse>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { Classes, MenuItem } from \"@blueprintjs/core\";\r\n\r\nexport default ({ handleClick, item, isActive }) => (\r\n  <MenuItem\r\n    className={isActive ? Classes.ACTIVE : \"\"}\r\n    key={item}\r\n    onClick={handleClick}\r\n    text={item}\r\n  />\r\n);\r\n","import React from \"react\";\r\nimport { Button, Classes } from \"@blueprintjs/core\";\r\nimport { Select } from \"@blueprintjs/labs\";\r\nimport CommonItemRenderer from \"./CommonItemRenderer\";\r\n\r\nexport default ({ items, onSelect, value, fill = false }) => (\r\n  <Select\r\n    items={items}\r\n    itemRenderer={CommonItemRenderer}\r\n    filterable={false}\r\n    onItemSelect={onSelect}\r\n  >\r\n    <Button className={fill ? Classes.FILL : null} text={value} />\r\n  </Select>\r\n);\r\n","/* eslint-disable jsx-a11y/label-has-for */\r\nimport React from \"react\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  Dialog,\r\n  Intent,\r\n  Spinner,\r\n  Switch\r\n} from \"@blueprintjs/core\";\r\nimport { Cell, Column, Table } from \"@blueprintjs/table\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\nimport {\r\n  requestChooseEdgeFile,\r\n  requestChooseNodeFile,\r\n  requestImportGraphFromCSV,\r\n  requestCreateNewProject\r\n} from \"../ipc/client\";\r\nimport Collapsable from \"./utils/Collapsable\";\r\nimport SimpleSelect from \"./utils/SimpleSelect\";\r\nimport { NODE_AND_EDGE_FILE, ONLY_EDGE_FILE } from \"../constants/index\";\r\n\r\n@observer\r\nclass PreviewTable extends React.Component {\r\n  render() {\r\n    const file = this.props.file;\r\n    return (\r\n      <Table\r\n        className=\"import-preview-table\"\r\n        numRows={file.topN.length}\r\n        selectedRegions={Object.values(file.mapping)\r\n          .map(it => file.columns.indexOf(it))\r\n          .map(it => ({ rows: null, cols: [it, it] }))}\r\n      >\r\n        {file.columns.map(it => (\r\n          <Column\r\n            key={it}\r\n            name={it}\r\n            renderCell={i => <Cell>{file.topN[i][it]}</Cell>}\r\n          />\r\n        ))}\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n\r\n@observer\r\nclass ImportDialog extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      available: ONLY_EDGE_FILE,\r\n      nodesOpen: true,\r\n      edgesOpen: true,\r\n      delimiter: ','\r\n    };\r\n  }\r\n\r\n  changeAvailable = targetValue => {\r\n    if (targetValue === ONLY_EDGE_FILE) {\r\n      appState.import.importConfig.edgeFile.createMissing = true;\r\n    }\r\n    this.setState({ available: targetValue });\r\n  };\r\n\r\n  canImport = () => {\r\n    if (this.state.available === NODE_AND_EDGE_FILE) {\r\n      return (\r\n        appState.import.importConfig.edgeFile.ready &&\r\n        appState.import.importConfig.nodeFile.ready\r\n      );\r\n    } else if (this.state.available === ONLY_EDGE_FILE) {\r\n      return appState.import.importConfig.edgeFile.ready;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  renderNodesSelection = () => {\r\n    const nodeFile = appState.import.importConfig.nodeFile;\r\n    if (this.state.available === ONLY_EDGE_FILE) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Collapsable\r\n        name=\"Nodes\"\r\n        isOpen={this.state.nodesOpen}\r\n        onToggle={() => this.setState({ nodesOpen: !this.state.nodesOpen })}\r\n      >\r\n        <div className={classnames(Classes.CONTROL_GROUP)}>\r\n          <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\r\n            <input\r\n              type=\"file\"\r\n              className={classnames(Classes.DISABLED)}\r\n              onChange={(event) => {\r\n                if (event.target.files.length < 1) {\r\n                  return;\r\n                }\r\n                appState.import.selectedNodeFileFromInput = event.target.files[0];\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Switch\r\n          label=\"Has Headers\"\r\n          checked={nodeFile.hasColumns}\r\n          onChange={() => (nodeFile.hasColumns = !nodeFile.hasColumns)}\r\n        />\r\n        {nodeFile.ready && (\r\n          <div className=\"column-selection\">\r\n            <PreviewTable file={nodeFile} />\r\n            Column for Node ID:\r\n            <SimpleSelect\r\n              items={nodeFile.columns}\r\n              value={nodeFile.mapping.id}\r\n              onSelect={it => (nodeFile.mapping.id = it)}\r\n            />\r\n          </div>\r\n        )}\r\n      </Collapsable>\r\n    );\r\n  };\r\n\r\n  renderEdgesSelection = () => {\r\n    const edgeFile = appState.import.importConfig.edgeFile;\r\n    return (\r\n      <Collapsable\r\n        name=\"Edges\"\r\n        isOpen={this.state.edgesOpen}\r\n        onToggle={() => this.setState({ edgesOpen: !this.state.edgesOpen })}\r\n      >\r\n        <div className={classnames(Classes.CONTROL_GROUP)}>\r\n          <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\r\n            <input\r\n              type=\"file\"\r\n              className={classnames(Classes.DISABLED)}\r\n              onChange={(event) => {\r\n                if (event.target.files.length < 1) {\r\n                  return;\r\n                }\r\n                appState.import.selectedEdgeFileFromInput = event.target.files[0];\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Switch\r\n          label=\"Has Headers\"\r\n          checked={edgeFile.hasColumns}\r\n          onChange={() => (edgeFile.hasColumns = !edgeFile.hasColumns)}\r\n        />\r\n        <Switch\r\n          label=\"Create Missing Nodes\"\r\n          checked={edgeFile.createMissing}\r\n          disabled={this.state.available === ONLY_EDGE_FILE}\r\n          onChange={() => (edgeFile.createMissing = !edgeFile.createMissing)}\r\n        />\r\n        {edgeFile.ready && (\r\n          <div className=\"column-selection\">\r\n            <PreviewTable file={edgeFile} />\r\n            Column for Source ID:\r\n            <SimpleSelect\r\n              items={edgeFile.columns}\r\n              value={edgeFile.mapping.fromId}\r\n              onSelect={it => (edgeFile.mapping.fromId = it)}\r\n            />{\" \"}\r\n            <br />\r\n            Column for Target ID:\r\n            <SimpleSelect\r\n              items={edgeFile.columns}\r\n              value={edgeFile.mapping.toId}\r\n              onSelect={it => (edgeFile.mapping.toId = it)}\r\n            />\r\n          </div>\r\n        )}\r\n      </Collapsable>\r\n    );\r\n  };\r\n\r\n  updateDelimiter (newDelimiter) {\r\n    this.setState({delimiter: newDelimiter});\r\n\r\n    if (newDelimiter == \"\\\\t\") {\r\n      newDelimiter = \"\\t\"\r\n    }\r\n\r\n    appState.import.importConfig.edgeFile.delimiter = newDelimiter\r\n    appState.import.importConfig.nodeFile.delimiter = newDelimiter\r\n  }\r\n\r\n  renderDelimiterSelection() {\r\n    return (\r\n      <div className=\"column-selection\">\r\n        Selected Delimiter\r\n        <SimpleSelect\r\n          items={[\",\", \"\\\\t\", \";\"]}\r\n          value={this.state.delimiter}\r\n          onSelect={it => { this.updateDelimiter(it) }}\r\n        />{\" \"}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        iconName=\"import\"\r\n        className={classnames({\r\n          [Classes.DARK]: appState.preferences.darkMode\r\n        })}\r\n        isOpen={appState.import.dialogOpen}\r\n        onClose={() => {\r\n          appState.import.dialogOpen = false;\r\n        }}\r\n        title=\"Import CSV\"\r\n      >\r\n        {appState.import.loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <div>\r\n            <div className={classnames(Classes.DIALOG_BODY, \"import-dialog\")}>\r\n              I have:\r\n              <SimpleSelect\r\n                items={[ONLY_EDGE_FILE, NODE_AND_EDGE_FILE]}\r\n                value={this.state.available}\r\n                onSelect={this.changeAvailable}\r\n              />\r\n              {this.renderNodesSelection()}\r\n              {this.renderEdgesSelection()}\r\n              {this.renderDelimiterSelection()}\r\n            </div>\r\n            <div className={Classes.DIALOG_FOOTER}>\r\n              <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n                <Button\r\n                  className={classnames({\r\n                    [Classes.DISABLED]: !this.canImport()\r\n                  })}\r\n                  intent={Intent.PRIMARY}\r\n                  onClick={() => {\r\n                    // TODO: this might be unsafe, check if there's racing condition\r\n                    requestCreateNewProject({\r\n                      name: appState.project.newProjectName,\r\n                      createdDate: new Date().toLocaleString(),\r\n                    });\r\n                    requestImportGraphFromCSV( //edgefile.delimiter and nodefile.delimiter are the same\r\n                      this.state.available === NODE_AND_EDGE_FILE, appState.import.importConfig.edgeFile.delimiter, appState.project.newProjectName\r\n                    );\r\n                  }}\r\n                  text=\"Import\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImportDialog;","/* eslint-disable jsx-a11y/label-has-for */\r\n\r\n/**\r\n * [Deprecated] This dialog is only used to open SQlite-based\r\n * graph file and optionally along with a snapshot file.\r\n * \r\n * For Argo-lite, which only has the JSON snapshot file,\r\n * use OpenSnapshotDialog.\r\n */\r\nimport React from \"react\";\r\nimport { Button, Classes, Dialog, Intent, Spinner } from \"@blueprintjs/core\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\nimport {\r\n  requestChooseGraphFile,\r\n  requestChooseStateFile,\r\n  requestOpen\r\n} from \"../ipc/client\";\r\nimport SimpleSelect from \"./utils/SimpleSelect\";\r\nimport {\r\n  GRAPH_AND_STATE_FILE,\r\n  ONLY_EDGE_FILE,\r\n  ONLY_GRAPH_FILE\r\n} from \"../constants\";\r\n\r\n@observer\r\nclass OpenDialog extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      available: ONLY_GRAPH_FILE,\r\n      selectedGraph: null,\r\n      selectedState: null\r\n    };\r\n  }\r\n\r\n  canImport = () => {\r\n    if (this.state.available === GRAPH_AND_STATE_FILE) {\r\n      return appState.import.stateFile && appState.import.graphFile;\r\n    } else {\r\n      return appState.import.graphFile;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  changeAvailable = targetValue => {\r\n    if (targetValue === ONLY_EDGE_FILE) {\r\n      appState.import.importConfig.edgeFile.createMissing = true;\r\n    }\r\n    this.setState({ available: targetValue });\r\n  };\r\n\r\n  renderSelectGraph = () => {\r\n    return (\r\n      <div className={classnames(Classes.CONTROL_GROUP)}>\r\n        <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\r\n          <input\r\n            type=\"text\"\r\n            className={classnames(Classes.DISABLED, Classes.INPUT)}\r\n            placeholder=\"Select graph file\"\r\n            readOnly\r\n            value={appState.import.graphFile}\r\n          />\r\n        </div>\r\n        <Button intent={Intent.PRIMARY} onClick={requestChooseGraphFile}>\r\n          Choose File\r\n        </Button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderSelectState = () => {\r\n    return (\r\n      <div className={classnames(Classes.CONTROL_GROUP)}>\r\n        <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\r\n          <input\r\n            type=\"text\"\r\n            className={classnames(Classes.DISABLED, Classes.INPUT)}\r\n            placeholder=\"Select snapshot file\"\r\n            readOnly\r\n            value={appState.import.stateFile}\r\n          />\r\n        </div>\r\n        <Button intent={Intent.PRIMARY} onClick={requestChooseStateFile}>\r\n          Choose File\r\n        </Button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        iconName=\"import\"\r\n        className={classnames({\r\n          [Classes.DARK]: appState.preferences.darkMode\r\n        })}\r\n        isOpen={appState.preferences.openDialogOpen}\r\n        onClose={() => {\r\n          appState.preferences.openDialogOpen = false;\r\n        }}\r\n        title=\"Open File\"\r\n      >\r\n        {appState.import.loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <div>\r\n            <div className={classnames(Classes.DIALOG_BODY, \"import-dialog\")}>\r\n              I have:\r\n              <SimpleSelect\r\n                items={[GRAPH_AND_STATE_FILE, ONLY_GRAPH_FILE]}\r\n                value={this.state.available}\r\n                onSelect={this.changeAvailable}\r\n              />\r\n              {this.renderSelectGraph()}\r\n              {this.state.available === GRAPH_AND_STATE_FILE &&\r\n                this.renderSelectState()}\r\n            </div>\r\n            <div className={Classes.DIALOG_FOOTER}>\r\n              <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n                <Button\r\n                  className={classnames({\r\n                    [Classes.DISABLED]: !this.canImport()\r\n                  })}\r\n                  intent={Intent.PRIMARY}\r\n                  onClick={() => {\r\n                    appState.preferences.openDialogOpen = false;\r\n                    requestOpen();\r\n                  }}\r\n                  text=\"Open\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpenDialog;","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  Dialog,\r\n  Intent,\r\n  Spinner,\r\n  Switch\r\n} from \"@blueprintjs/core\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\n\r\n@observer\r\nclass NewProjectDialog extends React.Component {\r\n  \r\n  render() {\r\n    const isNewProjectNameDuplicate = appState.project.projects.some(p => p.name === appState.project.newProjectName);\r\n    const isNewProjectNameEmpty = appState.project.newProjectName.trim() === '';\r\n    const isValidated = !(isNewProjectNameDuplicate || isNewProjectNameEmpty);\r\n  \r\n    return (\r\n      <Dialog\r\n        iconName=\"projects\"\r\n        isOpen={appState.project.isNewProjectDialogOpen}\r\n        onClose={() => {\r\n          appState.project.isNewProjectDialogOpen = false;\r\n        }}\r\n        title=\"Create New Project\"\r\n      >\r\n        <div className={Classes.DIALOG_BODY}>\r\n          <label className=\"pt-label .modifier\">\r\n            Project Name\r\n            <span className=\"pt-text-muted\"> (required){isNewProjectNameDuplicate && ' (This name has already been taken!)'}</span>\r\n            <input\r\n              className=\"pt-input\"\r\n              type=\"text\"\r\n              placeholder=\"New Project\"\r\n              dir=\"auto\"\r\n              value={appState.project.newProjectName}\r\n              onChange={event => {\r\n                appState.project.newProjectName = event.target.value;\r\n              }}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className={Classes.DIALOG_FOOTER}>\r\n          <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n            <Button\r\n              className={classnames({\r\n                [Classes.DISABLED]: !isValidated\r\n              })}\r\n              intent={Intent.PRIMARY}\r\n              onClick={() => {\r\n                if (isValidated) {\r\n                  appState.project.isNewProjectDialogOpen = false;\r\n                  appState.import.dialogOpen = true;\r\n                }\r\n              }}\r\n              text=\"Next\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewProjectDialog;","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  Card,\r\n  Icon,\r\n  Dialog,\r\n  Intent,\r\n  Spinner\r\n} from \"@blueprintjs/core\";\r\nimport { requestOpen, requestDelete } from \"../ipc/client\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\n\r\n@observer\r\nclass ProjectDetailDialog extends React.Component {\r\n  render() {\r\n    return (\r\n      appState.project.currentProject && (\r\n        <Dialog\r\n          iconName=\"projects\"\r\n          isOpen={appState.project.isProjectDetailDialogOpen}\r\n          onClose={() => {\r\n            appState.project.isProjectDetailDialogOpen = false;\r\n          }}\r\n          title={`Load ${appState.project.currentProject.name} Project`}\r\n        >\r\n          {appState.project.currentProject.hasGraphData ? (\r\n            <div className={Classes.DIALOG_BODY}>\r\n              <Card\r\n                interactive={true}\r\n                elevation={Card.ELEVATION_TWO}\r\n                onClick={() => {\r\n                  appState.import.graphFile =\r\n                    appState.project.currentProject.graphDataPath;\r\n                  appState.project.isProjectDetailDialogOpen = false;\r\n                  requestOpen();\r\n                }}\r\n              >\r\n                <Icon iconName=\"graph\" /> Start fresh from original graph\r\n              </Card>\r\n              <hr />\r\n              <div className=\"argo-menu-list-header\">Load recent snapshots</div>\r\n              <div>\r\n                {appState.project.currentProject.snapshotPaths.map(\r\n                  snapshotPath => {\r\n                    return (\r\n                      <div key={snapshotPath}>\r\n                        <Card\r\n                          interactive={false}\r\n                          elevation={Card.ELEVATION_TWO}\r\n                        >\r\n                          {/* <Icon iconName=\"layout\" /> */}\r\n                          <h5>\r\n                            {snapshotPath\r\n                              .replace(/^.*[\\\\\\/]/, \"\")\r\n                              .replace(/\\.[^/.]+$/, \"\")}\r\n                          </h5>\r\n                          <Button\r\n                            className={classnames([\r\n                              Classes.BUTTON,\r\n                              Classes.INTENT_PRIMARY\r\n                            ])}\r\n                            onClick={() => {\r\n                              appState.import.graphFile =\r\n                                appState.project.currentProject.graphDataPath;\r\n                              appState.import.stateFile = snapshotPath;\r\n                              appState.project.currentSnapshotName = snapshotPath\r\n                                .replace(/^.*[\\\\\\/]/, \"\")\r\n                                .replace(/\\.[^/.]+$/, \"\");\r\n                              appState.project.isProjectDetailDialogOpen = false;\r\n                              requestOpen();\r\n                            }}\r\n                          >\r\n                            Load Snapshot\r\n                          </Button>\r\n                          <Button\r\n                            className={classnames([Classes.BUTTON])}\r\n                            onClick={() => {\r\n                              // TODO: Open a confirmation dialog\r\n                              requestDelete(snapshotPath);\r\n                              appState.project.currentProject.snapshotPaths = appState.project.currentProject.snapshotPaths.filter(\r\n                                path => path !== snapshotPath\r\n                              );\r\n                            }}\r\n                          >\r\n                            Delete\r\n                          </Button>\r\n                        </Card>\r\n                      </div>\r\n                    );\r\n                  }\r\n                )}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              Error: Cannot find .argograph file in this project directory.\r\n            </div>\r\n          )}\r\n        </Dialog>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectDetailDialog;","/**\r\n * [Argo-lite Modified]\r\n * In electron Argo, snapshots are saved to the active project folder.\r\n * In Argo-lite, snapshots are saved as a file download.\r\n * Sometimes, it's tricky to let browser download something without a backend\r\n * hosting the file. Thus we also allow user to copy paste from\r\n * a text area containing our snapshot JSON.\r\n * \r\n * Remember to change appState.project.stringCopyOfSnapshot\r\n * before showing the dialog.\r\n */\r\nimport React from \"react\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  Card,\r\n  Icon,\r\n  Dialog,\r\n  Intent,\r\n  Spinner\r\n} from \"@blueprintjs/core\";\r\nimport { requestSaveSnapshot } from \"../ipc/client\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\n\r\n@observer\r\nclass SaveSnapshotDialog extends React.Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     name: \"Quick Save\",\r\n  //   };\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n        <Dialog\r\n          iconName=\"projects\"\r\n          isOpen={appState.project.isSaveSnapshotDialogOpen}\r\n          onClose={() => {\r\n            appState.project.isSaveSnapshotDialogOpen = false;\r\n          }}\r\n          title={`Save Snapshot`}\r\n        >\r\n          <div className={classnames(Classes.DIALOG_BODY)}>\r\n            {/* <label className=\"pt-label .modifier\">\r\n              Snapshot Name\r\n              <span className=\"pt-text-muted\"> (required)</span>\r\n              <input\r\n                className=\"pt-input\"\r\n                type=\"text\"\r\n                placeholder=\"My Snapshot\"\r\n                dir=\"auto\"\r\n                value={this.state.name}\r\n                onChange={event => this.setState({ name: event.target.value })}\r\n              />\r\n            </label> */}\r\n            <p>If your browser doesn't start downloading the file, you can manually copy the content below and save to a plain text file.</p>\r\n            <input id=\"snapshot-textarea\" type=\"textarea\" value={appState.project.stringCopyOfSnapshot} readOnly />\r\n            <button\r\n              onClick={() => {\r\n                document.getElementById('snapshot-textarea').select();\r\n                document.execCommand(\"copy\");\r\n              }}\r\n            >\r\n              Copy to Clipboard\r\n            </button>\r\n          </div>\r\n\r\n          <div className={Classes.DIALOG_FOOTER}>\r\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n              <Button\r\n                // className={classnames({\r\n                //   [Classes.DISABLED]: !this.state.name\r\n                // })}\r\n                intent={Intent.PRIMARY}\r\n                onClick={() => {\r\n                  appState.project.isSaveSnapshotDialogOpen = false;\r\n                }}\r\n                text=\"Done\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SaveSnapshotDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Card,\n  Icon,\n  Dialog,\n  Intent,\n  Spinner\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\n\n@observer\nclass SaveSnapshotDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n    };\n  }\n\n  render() {\n    return (\n        <Dialog\n          iconName=\"projects\"\n          isOpen={appState.project.isRenameSnapshotDialogOpen}\n          onClose={() => {\n            appState.project.isRenameSnapshotDialogOpen = false;\n          }}\n          title={`Rename Snapshot`}\n        >\n          <div className={classnames(Classes.DIALOG_BODY)}>\n            <label className=\"pt-label .modifier\">\n              Snapshot Name\n              <span className=\"pt-text-muted\"> (required)</span>\n              <input\n                className=\"pt-input\"\n                type=\"text\"\n                placeholder=\"My Snapshot\"\n                dir=\"auto\"\n                value={this.state.name}\n                onChange={event => this.setState({ name: event.target.value })}\n              />\n            </label>\n          </div>\n\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                className={classnames({\n                  [Classes.DISABLED]: !this.state.name\n                })}\n                intent={Intent.PRIMARY}\n                onClick={() => {\n                  appState.graph.metadata.snapshotName = this.state.name;\n                  appState.project.isRenameSnapshotDialogOpen = false;\n                }}\n                text=\"Done\"\n              />\n            </div>\n          </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default SaveSnapshotDialog;","/**\n * [Argo-lite] Open the Argo-lite JSON graph snapshot file\n */\nimport React from \"react\";\nimport { Button, Classes, Dialog, Intent } from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport SimpleSelect from \"./utils/SimpleSelect\";\nimport { toaster } from '../notifications/client';\n\n@observer\nclass OpenSnapshotDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        selectedFile: null\n    };\n  }\n\n  render() {\n    return (\n      <Dialog\n        iconName=\"import\"\n        className={classnames({\n          [Classes.DARK]: appState.preferences.darkMode\n        })}\n        isOpen={appState.preferences.openSnapshotDialogOpen}\n        onClose={() => {\n          appState.preferences.openSnapshotDialogOpen = false;\n        }}\n        title=\"Open File\"\n      >\n        <div>\n            <div className={classnames(Classes.DIALOG_BODY)}>\n                <div className={classnames(Classes.CONTROL_GROUP)}>\n                    <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\n                        <input\n                            type=\"file\"\n                            className={classnames(Classes.DISABLED)}\n                            onChange={(event) => {\n                                if (event.target.files.length < 1) {\n                                    return;\n                                }\n                                this.setState({\n                                    selectedFile: event.target.files[0]\n                                });\n                            }}\n                        />\n                    </div>\n                </div>\n            </div>\n            <div className={Classes.DIALOG_FOOTER}>\n              <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n                <Button\n                  className={classnames({\n                    [Classes.DISABLED]: !this.state.selectedFile\n                  })}\n                  intent={Intent.PRIMARY}\n                  onClick={() => {\n                    // This dialog is closed when user is done selecting file\n                    appState.preferences.openSnapshotDialogOpen = false;\n\n                    // Show user a notification\n                    toaster.show({\n                        message: 'Loading Graph Snapshot. Please wait...',\n                        intent: Intent.NONE,\n                        timeout: 2000\n                    });\n                    \n                    // Read the file and load snapshot\n                    const reader = new FileReader();\n                    reader.readAsText(this.state.selectedFile);\n\n                    reader.onload = () => {\n                        const fileAsString = reader.result;\n                        appState.graph.loadImmediateStates(fileAsString);\n                    }\n                  }}\n                  text=\"Open\"\n                />\n              </div>\n            </div>\n          </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default OpenSnapshotDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Card,\n  Icon,\n  Dialog,\n  Intent,\n  Spinner\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport { toaster } from '../notifications/client';\n\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport { BACKEND_URL } from \"../constants\";\n\nconst uuidv4 = require('uuid/v4');\n\n@observer\nclass ShareDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShared: false,\n      isFetching: false,\n      sharedURL: 'Error: Sharing failed'\n    };\n\n    this.handleRequest = this.handleRequest.bind(this);\n  }\n\n  async handleRequest(uuid) {\n    // return await new Promise(resolve => setTimeout(resolve, 2000));\n    const backendURL = `${BACKEND_URL}/snapshots`;\n    // TODO: add better error handling\n    return await fetch(backendURL, {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        referrer: 'no-referrer',\n        body: JSON.stringify({\n            uuid,\n            body: window.saveSnapshotToString()\n        }),\n    }).then(response => response.ok).catch(error => {\n        toaster.show({\n            message: 'Failed to publish to sharing server. Unexpected error.',\n            intent: Intent.DANGER,\n            timeout: -1\n        });\n    });\n  }\n\n  render() {\n    return (\n        <Dialog\n            iconName=\"projects\"\n            isOpen={appState.preferences.shareDialogOpen}\n            onClose={() => {\n            appState.preferences.shareDialogOpen = false;\n            }}\n            title={`Share Graph`}\n        >\n            <div className={classnames(Classes.DIALOG_BODY)}>\n            {\n                !this.state.isShared && (\n                    <p>You can share the current state of your graph to a public URL that you can share with your friends! (*this will make your graph public)</p>\n                )\n            }\n            {\n                this.state.isFetching && (\n                    <p><b>Sharing in progress. Please wait...</b></p>\n                )\n            }\n            {\n                this.state.isShared && (\n                    <div>\n                        Your graph has been shared to\n                        <input id=\"snapshot-textarea\" type=\"textarea\" value={this.state.sharedURL} readOnly />\n                        <button\n                            onClick={() => {\n                                document.getElementById('snapshot-textarea').select();\n                                document.execCommand(\"copy\");\n                            }}\n                        >\n                            Copy to Clipboard\n                        </button>\n                    </div>\n                )\n            }\n            </div>\n\n            <div className={Classes.DIALOG_FOOTER}>\n                <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n                    {\n                        !this.state.isShared && (\n                            <Button\n                            className={classnames({\n                                [Classes.DISABLED]: this.state.isFetching\n                            })}\n                            intent={Intent.PRIMARY}\n                            onClick={async () => {\n                                this.setState({ isFetching: true });\n                                // Generate a random UUID\n                                const uuid = uuidv4();\n                                // Generate URL corresponding to the UUID\n                                const sharedURL = `https://poloclub.github.io/argo-graph-lite/#${uuid}`;\n        \n                                // Wait for backend response\n                                const requestSuccess = await this.handleRequest(uuid);\n                                // Update local state\n                                if (requestSuccess) {\n                                    this.setState({ isFetching: false, isShared: true, sharedURL });\n                                } else {\n                                    // request fails, toast fires\n                                    this.setState({ isFetching: false, isShared: false });\n                                    toaster.show({\n                                        message: 'Failed to publish to sharing server. Please try again later.',\n                                        intent: Intent.DANGER,\n                                        timeout: -1\n                                    });\n                                }\n                                \n                            }}\n                            text=\"Share\"\n                            />\n                        )\n                    }\n                    {\n                        this.state.isShared && (\n                            <Button\n                            className={classnames({\n                                [Classes.DISABLED]: this.state.isFetching\n                            })}\n                            intent={Intent.PRIMARY}\n                            onClick={async () => {\n                                this.setState({ isFetching: true, isShared: false });\n                                // Generate a random UUID\n                                const uuid = uuidv4();\n                                // Generate URL corresponding to the UUID\n                                const sharedURL = `https://poloclub.github.io/argo-graph-lite/#${uuid}`;\n        \n                                // Wait for backend response\n                                const requestSuccess = await this.handleRequest(uuid);\n                                // Update local state\n                                if (requestSuccess) {\n                                    this.setState({ isFetching: false, isShared: true, sharedURL });\n                                } else {\n                                    // request fails, toast fires\n                                    this.setState({ isFetching: false, isShared: false });\n                                    toaster.show({\n                                        message: 'Failed to publish to sharing server. Please try again later.',\n                                        intent: Intent.DANGER,\n                                        timeout: -1\n                                    });\n                                }\n                                \n                            }}\n                            text=\"Share Again to a new URL\"\n                            />\n                        )\n                    }\n                    \n                </div>\n            </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default ShareDialog;","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  Card,\r\n  Icon,\r\n  Dialog,\r\n  Intent,\r\n  Spinner\r\n} from \"@blueprintjs/core\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport appState from \"../stores/index\";\r\n\r\n@observer\r\nclass StatisticsDialog extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//   }\r\n\r\n  render() {\r\n    return (\r\n        <Dialog\r\n          iconName=\"projects\"\r\n          isOpen={appState.preferences.statisticsDialogOpen}\r\n          onClose={() => {\r\n            appState.preferences.statisticsDialogOpen = false;\r\n          }}\r\n          title={`Statistics`}\r\n        >\r\n          <div className={classnames(Classes.DIALOG_BODY)}>\r\n            <table className={Classes.TABLE} style={{width: '100%'}}>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Statistics</th>\r\n                        <th>Value</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td># Nodes</td>\r\n                        <td>{appState.graph.metadata.fullNodes}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td># Edges</td>\r\n                        <td>{appState.graph.metadata.fullEdges}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Average Degree</td>\r\n                        <td>Under Construction</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Graph Density</td>\r\n                        <td>Under Construction</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Graph Diameter</td>\r\n                        <td>Under Construction</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Clustering Coefficient</td>\r\n                        <td>{appState.graph.hasGraph ? appState.graph.averageClustering : 'loading graph'}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Connected Component</td>\r\n                        <td>{appState.graph.hasGraph ? appState.graph.components : 'loading graph'}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <div className={Classes.DIALOG_FOOTER}>\r\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n              <Button\r\n                intent={Intent.PRIMARY}\r\n                onClick={() => {\r\n                  appState.preferences.statisticsDialogOpen = false;\r\n                }}\r\n                text=\"Done\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StatisticsDialog;","import React from \"react\";\r\nimport PreferencesDialog from \"./PreferencesDialog\";\r\nimport ImportDialog from \"./ImportDialog\";\r\nimport OpenDialog from \"./OpenDialog\";\r\nimport NewProjectDialog from \"./NewProjectDialog\";\r\nimport ProjectDetailDialog from \"./ProjectDetailDialog\";\r\nimport SaveSnapshotDialog from \"./SaveSnapshotDialog\";\r\nimport RenameSnapshotDialog from \"./RenameSnapshotDialog\";\r\nimport OpenSnapshotDialog from \"./OpenSnapshotDialog\";\r\nimport ShareDialog from './ShareDialog';\r\nimport StatisticsDialog from './StatisticsDialog';\r\n\r\nexport default class Dialogs extends React.Component {\r\n  render() {\r\n    return (\r\n      <div style={{ display: \"none\" }}>\r\n        <PreferencesDialog />\r\n        <ImportDialog />\r\n        <OpenDialog />\r\n        <OpenSnapshotDialog />\r\n        <NewProjectDialog />\r\n        <ProjectDetailDialog />\r\n        <SaveSnapshotDialog />\r\n        <RenameSnapshotDialog />\r\n        <ShareDialog />\r\n        <StatisticsDialog />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  InputGroup,\r\n  Intent,\r\n  Position,\r\n  Tooltip,\r\n  Popover,\r\n  Menu,\r\n  MenuItem,\r\n  MenuDivider\r\n} from \"@blueprintjs/core\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport appState from \"../stores/index\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\n\r\n@observer\r\nclass Navbar extends React.Component {\r\n  render() {\r\n    return (\r\n      <nav className={classnames([Classes.NAVBAR])}>\r\n        <div className={classnames([Classes.NAVBAR_GROUP, Classes.ALIGN_LEFT])}>\r\n          <div className={classnames([Classes.NAVBAR_HEADING])}>Argo <small>Lite</small></div>\r\n          {/* <a\r\n            href=\"https://poloclub.github.io/argo-graph/\"\r\n            target='_blank'\r\n            style={{\r\n              padding: '6px 10px 6px 10px',\r\n              backgroundColor: 'pink',\r\n              color: 'white',\r\n              borderRadius: '4px',\r\n              textDecoration: 'none'\r\n            }}\r\n          >\r\n            Learn more about Argo\r\n          </a> */}\r\n          <Popover\r\n            content={\r\n              <Menu>\r\n                <MenuItem text=\"Load Sample\" iconName=\"graph\">\r\n                  <MenuItem\r\n                    iconName=\"graph\"\r\n                    text=\"Les Miserables\"\r\n                    onClick={() => {\r\n                      window.loadAndDisplaySnapshotFromURL(\"https://argo-graph-lite.s3.amazonaws.com/lesmiserables.json\");\r\n                    }}\r\n                  />\r\n                </MenuItem>\r\n                <MenuDivider />\r\n                <MenuItem\r\n                  iconName=\"import\"\r\n                  text=\"Import from CSV...\"\r\n                  onClick={() => (appState.import.dialogOpen = true)}\r\n                />\r\n                <MenuItem\r\n                  iconName=\"pt-icon-document-open\"\r\n                  text=\"Open Snapshot\"\r\n                  onClick={() => {appState.preferences.openSnapshotDialogOpen = true}}\r\n                />\r\n                <MenuDivider />\r\n                <MenuItem\r\n                  iconName=\"download\"\r\n                  text=\"Save Snapshot\"\r\n                  onClick={() => {\r\n                    appState.project.stringCopyOfSnapshot = appState.graph.saveImmediateStates();\r\n                    appState.project.isSaveSnapshotDialogOpen = true\r\n                  }}\r\n                />\r\n                <MenuItem\r\n                  iconName=\"pt-icon-document-share\"\r\n                  text=\"Publish and Share Snapshot\"\r\n                  onClick={() => {appState.preferences.shareDialogOpen = true}}\r\n                />\r\n              </Menu>\r\n            }\r\n            position={Position.BOTTOM}\r\n          >\r\n            <Button\r\n              className={classnames([Classes.BUTTON, Classes.MINIMAL])}\r\n              iconName=\"document\"\r\n            >\r\n              Graph\r\n            </Button>\r\n          </Popover>\r\n          <Popover\r\n            content={\r\n              <Menu>\r\n                <MenuItem\r\n                  text=\"Statistics\"\r\n                  iconName=\"pt-icon-timeline-bar-chart\"\r\n                  onClick={() => {appState.preferences.statisticsDialogOpen = true}}\r\n                />\r\n              </Menu>\r\n            }\r\n            position={Position.BOTTOM}\r\n          >\r\n            <Button\r\n              className={classnames([Classes.BUTTON, Classes.MINIMAL])}\r\n              iconName=\"pt-icon-wrench\"\r\n            >\r\n              Tools\r\n            </Button>\r\n          </Popover>\r\n        </div>\r\n        <div className={classnames([Classes.NAVBAR_GROUP, Classes.ALIGN_LEFT])}>\r\n        <span className={Classes.NAVBAR_DIVIDER} />\r\n        {appState.graph.hasGraph && appState.graph.frame && (\r\n            <div style={{ display: \"inline\" }}>\r\n              <Tooltip\r\n                content={appState.graph.frame.paused ? \"Resume Layout Algorithm\" : \"Pause Layout Algorithm\"}\r\n                position={Position.BOTTOM}\r\n              >\r\n                <Button\r\n                  className={classnames([Classes.BUTTON, Classes.MINIMAL])}\r\n                  iconName={appState.graph.frame.paused ? \"play\" : \"pause\"}\r\n                  text={appState.graph.frame.paused ? \"Resume Layout\" : \"Pause Layout\"}\r\n                  onClick={() => {\r\n                    if (appState.graph.frame.paused) {\r\n                      appState.graph.frame.resumeLayout();\r\n                      this.forceUpdate();\r\n                    } else {\r\n                      appState.graph.frame.pauseLayout();\r\n                      this.forceUpdate();\r\n                    }\r\n                  }}\r\n                />\r\n              </Tooltip>\r\n\r\n              {// This menu only shows when there are nodes selected\r\n              appState.graph.selectedNodes.length > 0 && (\r\n                <div style={{ display: \"inline\" }}>\r\n                  {/* <span className={Classes.NAVBAR_DIVIDER} /> */}\r\n                  <Tooltip\r\n                    content=\"Pin Selected Nodes\"\r\n                    position={Position.BOTTOM}\r\n                  >\r\n                    <Button\r\n                      className={classnames([\r\n                        Classes.BUTTON,\r\n                        Classes.MINIMAL\r\n                      ])}\r\n                      iconName=\"pin\"\r\n                      text=\"Pin\"\r\n                      intent={Intent.PRIMARY}\r\n                      onClick={() => {\r\n                        appState.graph.frame.pinSelectedNodes();\r\n                        this.forceUpdate();\r\n                      }}\r\n                    />\r\n                  </Tooltip>\r\n                  <Tooltip\r\n                    content=\"Unpin Selected Nodes\"\r\n                    position={Position.BOTTOM}\r\n                  >\r\n                    <Button\r\n                      className={classnames([\r\n                        Classes.BUTTON,\r\n                        Classes.MINIMAL\r\n                      ])}\r\n                      iconName=\"unpin\"\r\n                      text=\"Unpin\"\r\n                      intent={Intent.WARNING}\r\n                      onClick={() => {\r\n                        appState.graph.frame.unpinSelectedNodes();\r\n                        this.forceUpdate();\r\n                      }}\r\n                    />\r\n                  </Tooltip>\r\n                  <Tooltip\r\n                    content=\"Delete Selected Nodes\"\r\n                    position={Position.BOTTOM}\r\n                  >\r\n                    <Button\r\n                      className={classnames([\r\n                        Classes.BUTTON,\r\n                        Classes.MINIMAL\r\n                      ])}\r\n                      iconName=\"delete\"\r\n                      text=\"Delete\"\r\n                      intent={Intent.DANGER}\r\n                      onClick={() => {\r\n                        appState.graph.removeNodes(\r\n                          appState.graph.frame.getSelectedIds()\r\n                        );\r\n                        this.forceUpdate();\r\n                      }}\r\n                    />\r\n                  </Tooltip>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div\r\n          className={classnames([Classes.NAVBAR_GROUP, Classes.ALIGN_RIGHT])}\r\n        >\r\n          <Button\r\n            className={classnames([Classes.BUTTON, Classes.MINIMAL])}\r\n            iconName=\"graph\"\r\n            onClick={() => {\r\n              appState.project.isRenameSnapshotDialogOpen = true;\r\n            }}\r\n          >\r\n            {appState.graph.metadata.snapshotName || \"Untitled Graph\"}\r\n            {\r\n              (appState.graph.metadata.fullNodes && appState.graph.metadata.fullEdges) ? (\r\n                ` (Nodes: ${appState.graph.metadata.fullNodes} Edges: ${appState.graph.metadata.fullEdges} )`\r\n              ) : null\r\n            }\r\n          </Button>\r\n          <span className={Classes.NAVBAR_DIVIDER} />\r\n          <Button\r\n            className={classnames([Classes.BUTTON, Classes.MINIMAL])}\r\n            iconName=\"cog\"\r\n            onClick={() => {\r\n              appState.preferences.dialogOpen = true;\r\n            }}\r\n          />\r\n          <span className={Classes.NAVBAR_DIVIDER} />\r\n          <a\r\n            href=\"https://github.com/poloclub/argo-graph-lite\"\r\n            target='_blank'\r\n            style={{\r\n              color: appState.preferences.darkMode ? 'white' : 'black',\r\n              fontSize: '120%',\r\n              textDecoration: 'none'\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faGithub} />\r\n          </a>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  Card,\r\n  Classes,\r\n  Spinner,\r\n  NonIdealState,\r\n  FocusStyleManager\r\n} from \"@blueprintjs/core\";\r\nimport appState from \"../stores/index\";\r\nimport { requestOpenWorkspaceFolder } from \"../ipc/client\";\r\n\r\n// Argo-lite: In lite, home screen is replaced by a loading screen\r\n// since there will always be a default graph showing.\r\n@observer\r\nclass WorkspaceView extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"workspace\">\r\n        {/* <Card\r\n          interactive={true}\r\n          elevation={Card.ELEVATION_TWO}\r\n          onClick={() => {\r\n            appState.project.isNewProjectDialogOpen = true;\r\n          }}\r\n        >\r\n          <Icon iconName=\"plus\" /> Create New Project\r\n        </Card>\r\n        <Card\r\n          interactive={true}\r\n          elevation={Card.ELEVATION_TWO}\r\n          onClick={() => {\r\n            requestOpenWorkspaceFolder();\r\n          }}\r\n        >\r\n          <Icon iconName=\"cog\" /> Manage Workspace\r\n        </Card>\r\n        <hr />\r\n        <div className=\"argo-menu-list-header\">My Projects</div>\r\n        <div style={{ paddingBottom: '100px' }}>\r\n          {appState.project.isFetching ? (\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <Spinner />\r\n            </div>\r\n          ) : appState.project.projects.length > 0 ? (\r\n            appState.project.projects.map(project => {\r\n              return (\r\n                <div key={project.name}>\r\n                  <Card\r\n                    interactive={true}\r\n                    elevation={Card.ELEVATION_TWO}\r\n                    onClick={() => {\r\n                      appState.project.currentProject = project;\r\n                      appState.project.isProjectDetailDialogOpen = true;\r\n                    }}\r\n                  >\r\n                    <h5>{project.name}</h5>\r\n                    <p>Created: {project.createdDate || 'Unknown'}</p>\r\n                  </Card>\r\n                </div>\r\n              );\r\n            })\r\n          ) : (\r\n            <div style={{ textAlign: \"center\" }}>\r\n              Workspace is empty. Start by creating a new project.\r\n            </div>\r\n          )}\r\n        </div> */}\r\n        <div style={{ textAlign: \"center\", height: \"100vh\" }}>\r\n          <Spinner />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WorkspaceView;","import React from \"react\";\r\nimport { Frame } from \"../graph-frontend\";\r\nimport { ContextMenu, MenuFactory, MenuItemFactory } from \"@blueprintjs/core\";\r\nimport appState from \"../stores\";\r\nimport { requestNeighbors } from \"../ipc/client\";\r\n\r\nexport default class ThreeJSVis extends React.Component {\r\n  componentDidMount() {\r\n    console.log(\"!!!!!\");\r\n    const graphFrame = new Frame(appState.graph.computedGraph);\r\n    graphFrame.init();\r\n    graphFrame.display();\r\n    appState.graph.frame = graphFrame;\r\n    graphFrame.ee.on(\"select-nodes\", nodes => {\r\n      appState.graph.selectedNodes = nodes;\r\n    });\r\n    graphFrame.ee.on(\"show-node-label\", nodes => {\r\n      appState.graph.nodesShowingLabels = nodes;\r\n    });\r\n    graphFrame.ee.on(\"right-click\", data => {\r\n      const menu = MenuFactory({\r\n        children: [\r\n          MenuItemFactory({\r\n            onClick: () => {\r\n              appState.graph.frame.toggleSelectedLabels();\r\n            },\r\n            text: `Toggle Labels`\r\n          }),\r\n          MenuItemFactory({\r\n            onClick: () => {\r\n              appState.graph.frame.unpinSelectedNodes();\r\n            },\r\n            text: `Unpin Selected`\r\n          }),\r\n          // MenuItemFactory({\r\n          //   onClick: () => {\r\n          //     requestNeighbors(\r\n          //       appState.graph.frame.rightClickedNode.id,\r\n          //       \"degree\",\r\n          //       \"10\"\r\n          //     );\r\n          //   },\r\n          //   text: `Add 10 Neighbors by Degree`\r\n          // }),\r\n          // MenuItemFactory({\r\n          //   onClick: () => {\r\n          //     requestNeighbors(\r\n          //       appState.graph.frame.rightClickedNode.id,\r\n          //       \"pagerank\",\r\n          //       \"10\"\r\n          //     );\r\n          //   },\r\n          //   text: `Add 10 Neighbors by Pagerank`\r\n          // })\r\n        ]\r\n      });\r\n      ContextMenu.show(menu, { left: data.pageX, top: data.pageY }, () => {\r\n        // onMenuClose\r\n        console.log(\"ContextMenu closed\");\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        id=\"graph-container\"\r\n        style={{\r\n          width: \"100vw\",\r\n          height: \"90vh\",\r\n          flex: \"1\",\r\n          position: \"absolute\"\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Button, Classes, RangeSlider } from \"@blueprintjs/core\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { Popover2, Select } from \"@blueprintjs/labs\";\r\nimport classnames from \"classnames\";\r\nimport { runInAction } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\nimport pluralize from \"pluralize\";\r\nimport appState from \"../../stores\";\r\nimport { scales } from \"../../constants/index\";\r\nimport Collapsable from \"../utils/Collapsable\";\r\nimport SimpleSelect from \"../utils/SimpleSelect\";\r\nimport CommonItemRenderer from \"../utils/CommonItemRenderer\";\r\n\r\n@observer\r\nclass GlobalPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      timeOutRef: null,\r\n      sizeOptionOpen: false,\r\n      colorOptionOpen: false,\r\n      shapeOptionOpen: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Collapsable\r\n          name=\"Color\"\r\n          isOpen={this.state.colorOptionOpen}\r\n          onToggle={() =>\r\n            this.setState({\r\n              colorOptionOpen: !this.state.colorOptionOpen\r\n            })\r\n          }\r\n        >\r\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n            Color by:\r\n            <SimpleSelect\r\n              items={appState.graph.allPropertiesKeyList}\r\n              onSelect={it => (appState.graph.nodes.colorBy = it)}\r\n              value={appState.graph.nodes.colorBy}\r\n            />\r\n            <br />\r\n            With scale:\r\n            <SimpleSelect\r\n              items={Object.keys(scales)}\r\n              onSelect={it => (appState.graph.nodes.color.scale = it)}\r\n              value={appState.graph.nodes.color.scale}\r\n            />\r\n            <br />\r\n            Using Gradient from\r\n            <Popover2>\r\n              <Button\r\n                text=\"  \"\r\n                style={{\r\n                  backgroundImage: \"inherit\",\r\n                  backgroundColor: appState.graph.nodes.color.from\r\n                }}\r\n              />\r\n              <SketchPicker\r\n                color={appState.graph.nodes.color.from}\r\n                onChange={it => (appState.graph.nodes.color.from = it.hex)}\r\n              />\r\n            </Popover2>\r\n            to\r\n            <Popover2>\r\n              <Button\r\n                text=\"  \"\r\n                style={{\r\n                  backgroundImage: \"inherit\",\r\n                  backgroundColor: appState.graph.nodes.color.to\r\n                }}\r\n              />\r\n              <SketchPicker\r\n                color={appState.graph.nodes.color.to}\r\n                onChange={it => (appState.graph.nodes.color.to = it.hex)}\r\n              />\r\n            </Popover2>\r\n            :\r\n            <br />\r\n            <svg width=\"220\" height=\"30\" className=\"gradient-preview\">\r\n              <defs>\r\n                <linearGradient\r\n                  x1=\"0%\"\r\n                  y1=\"50%\"\r\n                  x2=\"100%\"\r\n                  y2=\"50%\"\r\n                  id=\"theGradient\"\r\n                >\r\n                  <stop\r\n                    stopColor={appState.graph.nodes.color.from}\r\n                    stopOpacity=\"1\"\r\n                    offset=\"0%\"\r\n                  />\r\n                  <stop\r\n                    stopColor={appState.graph.nodes.color.to}\r\n                    stopOpacity=\"1\"\r\n                    offset=\"100%\"\r\n                  />\r\n                </linearGradient>\r\n              </defs>\r\n              <rect\r\n                x=\"0\"\r\n                y=\"0\"\r\n                width=\"220\"\r\n                height=\"50\"\r\n                fill=\"url(#theGradient)\"\r\n              />\r\n            </svg>\r\n          </div>\r\n        </Collapsable>\r\n\r\n        <Collapsable\r\n          name=\"Size\"\r\n          isOpen={this.state.sizeOptionOpen}\r\n          onToggle={() =>\r\n            this.setState({\r\n              sizeOptionOpen: !this.state.sizeOptionOpen\r\n            })\r\n          }\r\n        >\r\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n            Scale by:\r\n            <Select\r\n              items={appState.graph.allPropertiesKeyList}\r\n              itemRenderer={CommonItemRenderer}\r\n              filterable={false}\r\n              onItemSelect={it => (appState.graph.nodes.sizeBy = it)}\r\n            >\r\n              <Button text={appState.graph.nodes.sizeBy} />\r\n            </Select>\r\n            <br />\r\n            With scale:\r\n            <Select\r\n              items={Object.keys(scales)}\r\n              itemRenderer={CommonItemRenderer}\r\n              filterable={false}\r\n              onItemSelect={it => (appState.graph.nodes.size.scale = it)}\r\n            >\r\n              <Button text={appState.graph.nodes.size.scale} />\r\n            </Select>\r\n            <br />\r\n            Size Range:\r\n            <br />\r\n            <RangeSlider\r\n              min={1}\r\n              max={20}\r\n              stepSize={0.1}\r\n              labelStepSize={5}\r\n              onChange={([a, b]) => {\r\n                runInAction(\"update scale\", () => {\r\n                  appState.graph.nodes.size.min = a;\r\n                  appState.graph.nodes.size.max = b;\r\n                });\r\n              }}\r\n              value={[\r\n                appState.graph.nodes.size.min,\r\n                appState.graph.nodes.size.max\r\n              ]}\r\n            />\r\n          </div>\r\n        </Collapsable>\r\n\r\n        <Collapsable\r\n          name=\"Shape\"\r\n          isOpen={this.state.shapeOptionOpen}\r\n          onToggle={() =>\r\n            this.setState({\r\n              shapeOptionOpen: !this.state.shapeOptionOpen\r\n            })\r\n          }\r\n        >\r\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n            Node Shape:\r\n            <Select\r\n              items={[\r\n                \"circle\",\r\n                \"square\",\r\n                \"triangle\",\r\n                \"pentagon\",\r\n                \"hexagon\",\r\n                \"octagon\"\r\n              ]}\r\n              itemRenderer={CommonItemRenderer}\r\n              filterable={false}\r\n              onItemSelect={it => (appState.graph.nodes.shape = it)}\r\n            >\r\n              <Button text={appState.graph.nodes.shape} />\r\n            </Select>\r\n          </div>\r\n        </Collapsable>\r\n        <small>\r\n          {pluralize(\"node\", appState.graph.overrides.size, true)}<span> </span>\r\n          have override styles.\r\n          <a onClick={() => (appState.graph.overrides = new Map())}>Clear.</a>\r\n        </small>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GlobalPanel;","import React from \"react\";\r\nimport { Classes, Collapse, Switch } from \"@blueprintjs/core\";\r\n\r\nexport default ({ name, isOpen, onToggle, children }) => (\r\n  <div>\r\n    <Switch\r\n      label={name}\r\n      checked={isOpen}\r\n      onChange={onToggle}\r\n      className={Classes.ALIGN_RIGHT}\r\n    />\r\n    <Collapse isOpen={isOpen}>{children}</Collapse>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { Button, Classes, Slider } from \"@blueprintjs/core\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { Popover2, Select } from \"@blueprintjs/labs\";\r\nimport classnames from \"classnames\";\r\nimport { runInAction } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\nimport appState from \"../../stores\";\r\nimport SwitchCollapsable from \"../utils/SwitchCollapsable\";\r\nimport CommonItemRenderer from \"../utils/CommonItemRenderer\";\r\n\r\n@observer\r\nclass SelectionPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shapeOptionOpen: false,\r\n      sizeOptionOpen: false,\r\n      colorOptionOpen: false,\r\n      labelOptionOpen: false\r\n    };\r\n  }\r\n\r\n  twoLayerUpdate = (nodeId, key, value) => {\r\n    if (!appState.graph.overrides.has(nodeId)) {\r\n      appState.graph.overrides.set(nodeId, new Map());\r\n    }\r\n    const nodeAttrs = appState.graph.overrides.get(nodeId);\r\n    if (value !== null) {\r\n      nodeAttrs.set(key, value);\r\n    } else {\r\n      nodeAttrs.delete(key);\r\n      if (nodeAttrs.size === 0) {\r\n        appState.graph.overrides.delete(nodeId);\r\n      }\r\n    }\r\n  };\r\n\r\n  batchTwoLayerUpdate = (nodes, key, value) => {\r\n    runInAction(\"update entire selection\", () => {\r\n      nodes.forEach(n => this.twoLayerUpdate(n.data.ref.id, key, value));\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SwitchCollapsable\r\n          name=\"Override Size\"\r\n          isOpen={this.state.sizeOptionOpen}\r\n          onToggle={() => {\r\n            if (this.state.sizeOptionOpen) {\r\n              this.setState(\r\n                {\r\n                  sizeOptionOpen: false\r\n                },\r\n                () =>\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"size\",\r\n                    null\r\n                  )\r\n              );\r\n            } else {\r\n              this.setState(\r\n                {\r\n                  sizeOptionOpen: true\r\n                },\r\n                () =>\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"size\",\r\n                    appState.graph.overrideConfig.size\r\n                  )\r\n              );\r\n            }\r\n          }}\r\n        >\r\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n            <Slider\r\n              min={1}\r\n              max={20}\r\n              stepSize={0.1}\r\n              labelStepSize={5}\r\n              onChange={it => {\r\n                appState.graph.overrideConfig.size = it;\r\n                this.batchTwoLayerUpdate(\r\n                  appState.graph.selectedNodes,\r\n                  \"size\",\r\n                  it\r\n                );\r\n              }}\r\n              value={appState.graph.overrideConfig.size}\r\n            />\r\n          </div>\r\n        </SwitchCollapsable>\r\n        <SwitchCollapsable\r\n          name=\"Override Color\"\r\n          isOpen={this.state.colorOptionOpen}\r\n          onToggle={() => {\r\n            if (this.state.colorOptionOpen) {\r\n              this.setState(\r\n                {\r\n                  colorOptionOpen: false\r\n                },\r\n                () =>\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"color\",\r\n                    null\r\n                  )\r\n              );\r\n            } else {\r\n              this.setState(\r\n                {\r\n                  colorOptionOpen: true\r\n                },\r\n                () =>\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"color\",\r\n                    appState.graph.overrideConfig.color\r\n                  )\r\n              );\r\n            }\r\n          }}\r\n        >\r\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n            Choose Color:\r\n            <Popover2>\r\n              <Button\r\n                text=\"  \"\r\n                style={{\r\n                  backgroundImage: \"inherit\",\r\n                  backgroundColor: appState.graph.overrideConfig.color\r\n                }}\r\n              />\r\n              <SketchPicker\r\n                color={appState.graph.overrideConfig.color}\r\n                onChange={it => {\r\n                  appState.graph.overrideConfig.color = it.hex;\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"color\",\r\n                    it.hex\r\n                  );\r\n                }}\r\n              />\r\n            </Popover2>\r\n          </div>\r\n        </SwitchCollapsable>\r\n        <SwitchCollapsable\r\n          name=\"Override Label\"\r\n          isOpen={this.state.labelOptionOpen}\r\n          onToggle={() => {\r\n            if (this.state.labelOptionOpen) {\r\n              this.setState(\r\n                {\r\n                  labelOptionOpen: false\r\n                },\r\n                () =>\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"label\",\r\n                    null\r\n                  )\r\n              );\r\n            } else {\r\n              this.setState(\r\n                {\r\n                  labelOptionOpen: true\r\n                },\r\n                () =>\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"label\",\r\n                    appState.graph.overrideConfig.label\r\n                  )\r\n              );\r\n            }\r\n          }}\r\n        >\r\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n            Custom Label:\r\n            <input\r\n              value={appState.graph.overrideConfig.label}\r\n              onChange={it => {\r\n                appState.graph.overrideConfig.label = it.target.value;\r\n                this.batchTwoLayerUpdate(\r\n                  appState.graph.selectedNodes,\r\n                  \"label\",\r\n                  it.target.value\r\n                );\r\n              }}\r\n            />\r\n          </div>\r\n        </SwitchCollapsable>\r\n        <SwitchCollapsable\r\n          name=\"Override Shape\"\r\n          isOpen={this.state.shapeOptionOpen}\r\n          onToggle={() => {\r\n            if (this.state.shapeOptionOpen) {\r\n              this.setState(\r\n                {\r\n                  shapeOptionOpen: false\r\n                },\r\n                () =>\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"shape\",\r\n                    null\r\n                  )\r\n              );\r\n            } else {\r\n              this.setState(\r\n                {\r\n                  shapeOptionOpen: true\r\n                },\r\n                () =>\r\n                  this.batchTwoLayerUpdate(\r\n                    appState.graph.selectedNodes,\r\n                    \"shape\",\r\n                    appState.graph.overrideConfig.shape\r\n                  )\r\n              );\r\n            }\r\n          }}\r\n        >\r\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\r\n            Node Shape:\r\n            <Select\r\n              items={[\r\n                \"circle\",\r\n                \"square\",\r\n                \"triangle\",\r\n                \"pentagon\",\r\n                \"hexagon\",\r\n                \"octagon\"\r\n              ]}\r\n              itemRenderer={CommonItemRenderer}\r\n              filterable={false}\r\n              onItemSelect={it => {\r\n                appState.graph.overrideConfig.shape = it;\r\n                this.batchTwoLayerUpdate(\r\n                  appState.graph.selectedNodes,\r\n                  \"shape\",\r\n                  it\r\n                );\r\n              }}\r\n            >\r\n              <Button text={appState.graph.overrideConfig.shape} />\r\n            </Select>\r\n          </div>\r\n        </SwitchCollapsable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectionPanel;","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport pluralize from \"pluralize\";\r\nimport appState from \"../../stores\";\r\nimport GlobalPanel from \"./GlobalPanel\";\r\nimport SelectionPanel from \"./SelectionPanel\";\r\n\r\n@observer\r\nclass NodesPanel extends React.Component {\r\n  getRenderedNodes = () => {\r\n    if (appState.graph.selectedNodes.length === 0) {\r\n      return (\r\n        <div>\r\n          <p>Modifying All Nodes</p>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <p>{`Modifying ${pluralize(\r\n        \"Node\",\r\n        appState.graph.selectedNodes.length,\r\n        true\r\n      )}`}</p>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.getRenderedNodes()}\r\n        {appState.graph.selectedNodes.length === 0 ? (\r\n          <GlobalPanel />\r\n        ) : (\r\n          <SelectionPanel />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NodesPanel;","import React from \"react\";\r\nimport { Button, Classes, Slider } from \"@blueprintjs/core\";\r\nimport { Select } from \"@blueprintjs/labs\";\r\nimport { observer } from \"mobx-react\";\r\nimport appState from \"../../stores\";\r\nimport CommonItemRenderer from \"../utils/CommonItemRenderer\";\r\n\r\n@observer\r\nclass LabelsPanel extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button\r\n          iconName=\"eye-off\"\r\n          className={Classes.FILL}\r\n          onClick={() => appState.graph.frame.showAllLabels()}\r\n        >\r\n          Show All Labels\r\n        </Button>\r\n        <Button\r\n          iconName=\"eye-off\"\r\n          className={Classes.FILL}\r\n          onClick={() => appState.graph.frame.hideAllLabels()}\r\n        >\r\n          Hide All Labels\r\n        </Button>\r\n        <Button\r\n          iconName=\"eye-off\"\r\n          className={Classes.FILL}\r\n          onClick={() => appState.graph.frame.hideSelectedLabels()}\r\n        >\r\n          Hide Labels of Selected Nodes\r\n        </Button>\r\n        <Button\r\n          iconName=\"eye-on\"\r\n          className={Classes.FILL}\r\n          onClick={() => appState.graph.frame.showSelectedLabels()}\r\n        >\r\n          Show Labels of Selected Nodes\r\n        </Button>\r\n        <div style={{height: '30px'}} />\r\n        <h6>Label Size</h6>\r\n        <Slider\r\n          min={0.5}\r\n          max={3}\r\n          stepSize={0.1}\r\n          onChange={value => {\r\n            appState.graph.nodes.labelSize = value;\r\n          }}\r\n          value={appState.graph.nodes.labelSize}\r\n        />\r\n        <div style={{height: '30px'}} />\r\n        <h6>Label Length</h6>\r\n        <Slider\r\n          min={1}\r\n          max={32}\r\n          stepSize={0.1}\r\n          labelStepSize={5}\r\n          onChange={value => {\r\n            appState.graph.nodes.labelLength = value;\r\n          }}\r\n          value={appState.graph.nodes.labelLength}\r\n        />\r\n        <h6>Label By</h6>\r\n        <Select\r\n          items={appState.graph.allPropertiesKeyList}\r\n          itemRenderer={CommonItemRenderer}\r\n          filterable={false}\r\n          onItemSelect={it => (appState.graph.nodes.labelBy = it)}\r\n        >\r\n          <Button text={appState.graph.nodes.labelBy} />\r\n        </Select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LabelsPanel;","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport uniq from \"lodash/uniq\";\r\nimport { Classes } from \"@blueprintjs/core\";\r\nimport appState from \"../../stores\";\r\nimport { observer } from \"mobx-react/index\";\r\n\r\n@observer\r\nclass NodeDetail extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={classnames(\r\n          // 'overlay-card',\r\n          \"right-overlay-card\",\r\n          \"transparent-frame\"\r\n        )}\r\n      >\r\n        <div className={classnames(Classes.CARD, \"node-details-table\")}>\r\n          <table\r\n            className={classnames(Classes.TABLE, Classes.TABLE_STRIPED)}\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>Property</th>\r\n                <th>Value</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {appState.graph.allPropertiesKeyList.map((it, i) => (\r\n                <tr key={`${it}-${i}`}>\r\n                  <td>{it}</td>\r\n                  <td>{this.props.node[it]}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NodeDetail;","import React from \"react\";\r\n\r\nimport { format } from \"d3-format\";\r\nimport { LegendLinear, LegendSize } from \"@vx/vx\";\r\nimport appState from \"../stores\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nfunction Legends() {\r\n  return (\r\n    <div className=\"legends\">\r\n      <LegendSize\r\n        className=\"scale-legend\"\r\n        direction=\"row\"\r\n        itemDirection=\"column\"\r\n        itemMargin=\"0\"\r\n        shapeMargin=\"5px 0\"\r\n        labelFormat={format(\".4f\")}\r\n        scale={appState.graph.nodeSizeScale}\r\n        shape={props => {\r\n          const { size } = props;\r\n          return (\r\n            <svg width={size} height={size}>\r\n              <circle {...props} r={size / 2} cx={size / 2} cy={size / 2} />\r\n            </svg>\r\n          );\r\n        }}\r\n      />\r\n      <LegendLinear\r\n        direction=\"row\"\r\n        itemDirection=\"column\"\r\n        shape=\"circle\"\r\n        scale={appState.graph.nodeColorScale}\r\n        labelFormat={format(\".4f\")}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Legends);\r\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores\";\n\n@observer\nclass StatusBar extends React.Component {\n    render() {\n        return (\n            <div\n                className={classnames(\"bottom-status-bar\")}\n                style={{\n                    backgroundColor: appState.preferences.darkMode ? '#30404D' : '#FFFFFF'\n                }}\n            >\n                <div className={classnames(\"bottom-status-bar__left\")}>{appState.graph.selectedNodes.length} nodes selected</div>\n                <div className={classnames(\"bottom-status-bar__right\")}>Color by: {appState.graph.nodes.colorBy} ({appState.graph.nodes.color.scale}), Size by: {appState.graph.nodes.sizeBy} ({appState.graph.nodes.size.scale})</div>\n            </div>\n        );\n    }\n}\n\nexport default StatusBar;","import React from \"react\";\r\nimport { Classes, Tab2, Tabs2 } from \"@blueprintjs/core\";\r\nimport classnames from \"classnames\";\r\nimport { observer } from \"mobx-react\";\r\nimport appState from \"../stores\";\r\nimport SimpleSelect from \"./utils/SimpleSelect\";\r\nimport { addNode } from \"../ipc/client\";\r\nimport NodesPanel from \"./panels/NodesPanel\";\r\nimport LabelsPanel from \"./panels/LabelsPanel\";\r\nimport NodeDetail from \"./panels/NodeDetailPanel\";\r\nimport Legends from \"./Legends\";\r\nimport StatusBar from './StatusBar';\r\n\r\n// TODO: migrate to simple select\r\n\r\n@observer\r\nclass RenderOptionsCard extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4>Graph Options</h4>\r\n        <Tabs2 animate id=\"graph-options\">\r\n          <Tab2 id=\"nodes\" title=\"Nodes\" panel={<NodesPanel />} />\r\n          <Tab2 id=\"labels\" title=\"Labels\" panel={<LabelsPanel />} />\r\n          {/* <Tab2 id=\"layout\" title=\"Layout\" panel={<LayoutPanel />} /> */}\r\n          <Tabs2.Expander />\r\n        </Tabs2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//\r\n\r\n@observer\r\nclass FloatingCards extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"floating-overlay\">\r\n        <div className=\"left-cards\">\r\n          {appState.search.panelOpen && (\r\n            <div\r\n              className={classnames(\r\n                Classes.CARD,\r\n                Classes.ELEVATION_2,\r\n                \"overlay-card\",\r\n                \"left-overlay-card\"\r\n              )}\r\n            >\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"left\",\r\n                  alignItems: \"left\"\r\n                }}\r\n              >\r\n                <h4 style={{ width: 140 }}>\r\n                  {appState.search.numCandidates} results\r\n                </h4>\r\n                <div style={{ width: 20 }} />\r\n                <h4>Order</h4>\r\n                <div style={{ width: 5 }} />\r\n                <SimpleSelect\r\n                  style={{ \"margin-bottom\": 10 }}\r\n                  items={[...appState.graph.metadata.nodeComputed, \"node_id\"]}\r\n                  onSelect={it => (appState.graph.searchOrder = it)}\r\n                  value={appState.graph.searchOrder}\r\n                />\r\n              </div>\r\n              <table\r\n                className={classnames(\r\n                  Classes.TABLE,\r\n                  Classes.TABLE_STRIPED,\r\n                  Classes.INTERACTIVE\r\n                )}\r\n                style={{\r\n                  width: \"100%\",\r\n                  userSelect: \"none\"\r\n                }}\r\n              >\r\n                <tbody>\r\n                  {appState.search.candidates.map((node, i) => (\r\n                    <tr\r\n                      key={i}\r\n                      onMouseOver={() =>\r\n                        appState.graph.frame.highlightNodeIds(\r\n                          [node.node_id],\r\n                          true\r\n                        )\r\n                      }\r\n                      onMouseDown={() => addNode(node.node_id)}\r\n                      onMouseLeave={() =>\r\n                        appState.graph.frame.highlightNodeIds(\r\n                          [node.node_id],\r\n                          false\r\n                        )\r\n                      }\r\n                    >\r\n                      <td>{node[appState.graph.nodes.labelBy]}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n              <center>\r\n                <a\r\n                  onMouseDown={() => {\r\n                    if (appState.search.pageNum > 0) {\r\n                      appState.search.pageNum -= 1;\r\n                      appState.search.candidates = appState.search.allCands.slice(\r\n                        appState.search.pageNum * appState.search.nPerPage,\r\n                        (appState.search.pageNum + 1) * appState.search.nPerPage\r\n                      );\r\n                    }\r\n                  }}\r\n                >\r\n                  Prev&nbsp;\r\n                </a>\r\n                &nbsp;\r\n                {appState.search.pageNum !== 0 ? (\r\n                  <a\r\n                    onMouseDown={() => {\r\n                      appState.search.pageNum = 0;\r\n                      appState.search.candidates = appState.search.allCands.slice(\r\n                        appState.search.pageNum * appState.search.nPerPage,\r\n                        (appState.search.pageNum + 1) * appState.search.nPerPage\r\n                      );\r\n                    }}\r\n                  >\r\n                    1&nbsp;\r\n                  </a>\r\n                ) : (\r\n                  <a\r\n                    style={{\r\n                      color: \"#111111\",\r\n                      pointerEvents: \"none\",\r\n                      cursor: \"default\"\r\n                    }}\r\n                  >\r\n                    {appState.search.pageNum + 1}&nbsp;\r\n                  </a>\r\n                )}\r\n                ...<b>&nbsp;</b>\r\n                {appState.search.pages.map(i => {\r\n                  if (\r\n                    i != 0 &&\r\n                    i != appState.search.maxPage &&\r\n                    i == appState.search.pageNum\r\n                  ) {\r\n                    return (\r\n                      <a\r\n                        key={i}\r\n                        style={{\r\n                          color: \"#111111\",\r\n                          pointerEvents: \"none\",\r\n                          cursor: \"default\"\r\n                        }}\r\n                      >\r\n                        {appState.search.pageNum + 1}&nbsp;\r\n                      </a>\r\n                    );\r\n                  } else if (\r\n                    i != 0 &&\r\n                    i != appState.search.maxPage &&\r\n                    ((i > appState.search.pageNum - 4 &&\r\n                      i < appState.search.pageNum + 4) ||\r\n                      (appState.search.pageNum < 4 && i < 8) ||\r\n                      (appState.search.pageNum > appState.search.maxPage - 4 &&\r\n                        i > appState.search.maxPage - 8))\r\n                  ) {\r\n                    return (\r\n                      <a\r\n                        key={i}\r\n                        onMouseDown={() => {\r\n                          appState.search.pageNum = i;\r\n                          appState.search.candidates = appState.search.allCands.slice(\r\n                            appState.search.pageNum * appState.search.nPerPage,\r\n                            (appState.search.pageNum + 1) *\r\n                              appState.search.nPerPage\r\n                          );\r\n                        }}\r\n                      >\r\n                        {i + 1}&nbsp;\r\n                      </a>\r\n                    );\r\n                  }\r\n                })}\r\n                ...&nbsp;\r\n                {appState.search.pageNum !== appState.search.maxPage ? (\r\n                  <a\r\n                    onMouseDown={() => {\r\n                      appState.search.pageNum = appState.search.maxPage;\r\n                      appState.search.candidates = appState.search.allCands.slice(\r\n                        appState.search.pageNum * appState.search.nPerPage,\r\n                        (appState.search.pageNum + 1) * appState.search.nPerPage\r\n                      );\r\n                    }}\r\n                  >\r\n                    {appState.search.maxPage + 1}&nbsp;\r\n                  </a>\r\n                ) : (\r\n                  <a\r\n                    style={{\r\n                      color: \"#111111\",\r\n                      pointerEvents: \"none\",\r\n                      cursor: \"default\"\r\n                    }}\r\n                  >\r\n                    {appState.search.pageNum + 1}\r\n                  </a>\r\n                )}\r\n                &nbsp;\r\n                <a\r\n                  onMouseDown={() => {\r\n                    if (appState.search.pageNum < appState.search.maxPage) {\r\n                      appState.search.pageNum += 1;\r\n                      appState.search.candidates = appState.search.allCands.slice(\r\n                        appState.search.pageNum * appState.search.nPerPage,\r\n                        (appState.search.pageNum + 1) * appState.search.nPerPage\r\n                      );\r\n                    }\r\n                  }}\r\n                >\r\n                  Next\r\n                </a>\r\n                <br />\r\n                <br />\r\n                <h5>Page {appState.search.pageNum + 1}</h5>\r\n              </center>\r\n            </div>\r\n          )}\r\n          <div\r\n            className={classnames(\r\n              Classes.CARD,\r\n              Classes.ELEVATION_2,\r\n              \"overlay-card\",\r\n              \"left-overlay-card\",\r\n              \"transparent-frame\"\r\n            )}\r\n          >\r\n            <RenderOptionsCard />\r\n          </div>\r\n        </div>\r\n        {appState.graph.selectedNodes.length === 1 && (\r\n          <NodeDetail node={appState.graph.selectedNodes[0].data.ref} />\r\n        )}\r\n        <Legends />\r\n        <StatusBar />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default FloatingCards;","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  Button,\r\n  Classes,\r\n  FocusStyleManager,\r\n  NonIdealState\r\n} from \"@blueprintjs/core\";\r\nimport Dialogs from \"./components/Dialogs\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport WorkspaceView from \"./components/WorkspaceView\";\r\nimport appState from \"./stores/index\";\r\nimport ThreeJSVis from \"./visualizers/ThreeJSVis\";\r\nimport FloatingCards from \"./components/FloatingCards\";\r\nimport registerIPC from \"./ipc/client\";\r\nimport { fetchWorkspaceProjects } from \"./ipc/client\";\r\n\r\nimport keydown, { Keys } from \"react-keydown\";\r\n\r\nregisterIPC();\r\nFocusStyleManager.onlyShowFocusOnTabs();\r\n\r\nfetchWorkspaceProjects();\r\n\r\nappState.preferences.loadUserConfig();\r\n\r\nconst { DELETE, BACKSPACE, P, U } = Keys;\r\n\r\n@keydown\r\n@observer\r\nclass App extends React.Component {\r\n  componentWillReceiveProps({ keydown }) {\r\n    if (keydown.event) {\r\n      if (keydown.event.which === DELETE || keydown.event.which === BACKSPACE) {\r\n        if (appState && appState.graph && appState.graph.frame) {\r\n          appState.graph.removeNodes(appState.graph.frame.getSelectedIds());\r\n          this.forceUpdate();\r\n        }\r\n      } else if (keydown.event.which === P) {\r\n        if (appState && appState.graph && appState.graph.frame) {\r\n          appState.graph.frame.pinSelectedNodes();\r\n        }\r\n      } else if (keydown.event.which === U) {\r\n        if (appState && appState.graph && appState.graph.frame) {\r\n          appState.graph.frame.unpinSelectedNodes();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        className={classnames({\r\n          \"app-wrapper\": true,\r\n          [Classes.DARK]: appState.preferences.darkMode\r\n        })}\r\n      >\r\n        <Navbar />\r\n        <main className=\"main\">\r\n          {appState.graph.hasGraph ? (\r\n            <ThreeJSVis />\r\n          ) : (\r\n            <WorkspaceView />\r\n          )}\r\n        </main>\r\n        {appState.graph.hasGraph && <FloatingCards />}\r\n        <Dialogs />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\nimport 'normalize.css/normalize.css';\nimport '@blueprintjs/core/dist/blueprint.css';\nimport '@blueprintjs/table/dist/table.css';\nimport './styles/index.css';\n\nconst render = () => {\n    ReactDOM.render(<App/>, document.getElementById('root'));\n};\n\nrender();","var $ = require(\"jquery\");\r\nfunction Edge(source, target) {\r\n  this.source = source;\r\n  this.target = target;\r\n  this.renderData = {};\r\n}\r\n\r\nfunction Node(id, size = 0.5) {\r\n  this.id = id;\r\n  this.index = id;\r\n  this.in = [];\r\n  this.out = [];\r\n  this.size = size;\r\n  this.renderData = {};\r\n  this.domainData = {};\r\n  this.x = 1;\r\n  this.y = 1;\r\n  this.vx = 1;\r\n  this.vy = 1;\r\n\r\n  /**\r\n   * Tells if a node is connected to a node of a certain id\r\n   */\r\n  this.connectedTo = function(id) {\r\n    outNodeIds = this.out.map(function(outNode) {\r\n      return outNode.id;\r\n    });\r\n    return $.inArray(id, outNodeIds) >= 0;\r\n  };\r\n}\r\n\r\nNode.prototype.connectNode = function(node) {\r\n  if (!this.connectedTo(node.id)) {\r\n    this.out.push(node);\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexports.Edge = Edge;\r\nexports.Node = Node;\r\n","var THREE = require(\"three\");\r\n\r\nTHREE.MeshLine = function() {\r\n  this.positions = [];\r\n\r\n  this.previous = [];\r\n  this.next = [];\r\n  this.side = [];\r\n  this.width = [];\r\n  this.indices_array = [];\r\n  this.uvs = [];\r\n  this.counters = [];\r\n  this.geometry = new THREE.BufferGeometry();\r\n\r\n  this.widthCallback = null;\r\n};\r\n\r\nTHREE.MeshLine.prototype.setGeometry = function(g, c) {\r\n  this.widthCallback = c;\r\n\r\n  this.positions = [];\r\n  this.counters = [];\r\n\r\n  if (g instanceof THREE.Geometry) {\r\n    for (var j = 0; j < g.vertices.length; j++) {\r\n      var v = g.vertices[j];\r\n      var c = j / g.vertices.length;\r\n      this.positions.push(v.x, v.y, v.z);\r\n      this.positions.push(v.x, v.y, v.z);\r\n      this.counters.push(c);\r\n      this.counters.push(c);\r\n    }\r\n  }\r\n\r\n  if (g instanceof THREE.BufferGeometry) {\r\n    // read attribute positions ?\r\n  }\r\n\r\n  if (g instanceof Float32Array || g instanceof Array) {\r\n    for (var j = 0; j < g.length; j += 3) {\r\n      var c = j / g.length;\r\n      this.positions.push(g[j], g[j + 1], g[j + 2]);\r\n      this.positions.push(g[j], g[j + 1], g[j + 2]);\r\n      this.counters.push(c);\r\n      this.counters.push(c);\r\n    }\r\n  }\r\n\r\n  this.process();\r\n};\r\n\r\nTHREE.MeshLine.prototype.compareV3 = function(a, b) {\r\n  var aa = a * 6;\r\n  var ab = b * 6;\r\n  return (\r\n    this.positions[aa] === this.positions[ab] &&\r\n    this.positions[aa + 1] === this.positions[ab + 1] &&\r\n    this.positions[aa + 2] === this.positions[ab + 2]\r\n  );\r\n};\r\n\r\nTHREE.MeshLine.prototype.copyV3 = function(a) {\r\n  var aa = a * 6;\r\n  return [this.positions[aa], this.positions[aa + 1], this.positions[aa + 2]];\r\n};\r\n\r\nTHREE.MeshLine.prototype.process = function() {\r\n  var l = this.positions.length / 6;\r\n\r\n  this.previous = [];\r\n  this.next = [];\r\n  this.side = [];\r\n  this.width = [];\r\n  this.indices_array = [];\r\n  this.uvs = [];\r\n\r\n  for (var j = 0; j < l; j++) {\r\n    this.side.push(1);\r\n    this.side.push(-1);\r\n  }\r\n\r\n  var w;\r\n  for (var j = 0; j < l; j++) {\r\n    if (this.widthCallback) w = this.widthCallback(j / (l - 1));\r\n    else w = 1;\r\n    this.width.push(w);\r\n    this.width.push(w);\r\n  }\r\n\r\n  for (var j = 0; j < l; j++) {\r\n    this.uvs.push(j / (l - 1), 0);\r\n    this.uvs.push(j / (l - 1), 1);\r\n  }\r\n\r\n  var v;\r\n\r\n  if (this.compareV3(0, l - 1)) {\r\n    v = this.copyV3(l - 2);\r\n  } else {\r\n    v = this.copyV3(0);\r\n  }\r\n  this.previous.push(v[0], v[1], v[2]);\r\n  this.previous.push(v[0], v[1], v[2]);\r\n  for (var j = 0; j < l - 1; j++) {\r\n    v = this.copyV3(j);\r\n    this.previous.push(v[0], v[1], v[2]);\r\n    this.previous.push(v[0], v[1], v[2]);\r\n  }\r\n\r\n  for (var j = 1; j < l; j++) {\r\n    v = this.copyV3(j);\r\n    this.next.push(v[0], v[1], v[2]);\r\n    this.next.push(v[0], v[1], v[2]);\r\n  }\r\n\r\n  if (this.compareV3(l - 1, 0)) {\r\n    v = this.copyV3(1);\r\n  } else {\r\n    v = this.copyV3(l - 1);\r\n  }\r\n  this.next.push(v[0], v[1], v[2]);\r\n  this.next.push(v[0], v[1], v[2]);\r\n\r\n  for (var j = 0; j < l - 1; j++) {\r\n    var n = j * 2;\r\n    this.indices_array.push(n, n + 1, n + 2);\r\n    this.indices_array.push(n + 2, n + 1, n + 3);\r\n  }\r\n\r\n  if (!this.attributes) {\r\n    this.attributes = {\r\n      position: new THREE.BufferAttribute(new Float32Array(this.positions), 3),\r\n      previous: new THREE.BufferAttribute(new Float32Array(this.previous), 3),\r\n      next: new THREE.BufferAttribute(new Float32Array(this.next), 3),\r\n      side: new THREE.BufferAttribute(new Float32Array(this.side), 1),\r\n      width: new THREE.BufferAttribute(new Float32Array(this.width), 1),\r\n      uv: new THREE.BufferAttribute(new Float32Array(this.uvs), 2),\r\n      index: new THREE.BufferAttribute(new Uint16Array(this.indices_array), 1),\r\n      counters: new THREE.BufferAttribute(new Float32Array(this.counters), 1)\r\n    };\r\n  } else {\r\n    this.attributes.position.copyArray(new Float32Array(this.positions));\r\n    this.attributes.position.needsUpdate = true;\r\n    this.attributes.previous.copyArray(new Float32Array(this.previous));\r\n    this.attributes.previous.needsUpdate = true;\r\n    this.attributes.next.copyArray(new Float32Array(this.next));\r\n    this.attributes.next.needsUpdate = true;\r\n    this.attributes.side.copyArray(new Float32Array(this.side));\r\n    this.attributes.side.needsUpdate = true;\r\n    this.attributes.width.copyArray(new Float32Array(this.width));\r\n    this.attributes.width.needsUpdate = true;\r\n    this.attributes.uv.copyArray(new Float32Array(this.uvs));\r\n    this.attributes.uv.needsUpdate = true;\r\n    this.attributes.index.copyArray(new Uint16Array(this.indices_array));\r\n    this.attributes.index.needsUpdate = true;\r\n  }\r\n\r\n  this.geometry.addAttribute(\"position\", this.attributes.position);\r\n  this.geometry.addAttribute(\"previous\", this.attributes.previous);\r\n  this.geometry.addAttribute(\"next\", this.attributes.next);\r\n  this.geometry.addAttribute(\"side\", this.attributes.side);\r\n  this.geometry.addAttribute(\"width\", this.attributes.width);\r\n  this.geometry.addAttribute(\"uv\", this.attributes.uv);\r\n  this.geometry.addAttribute(\"counters\", this.attributes.counters);\r\n\r\n  this.geometry.setIndex(this.attributes.index);\r\n};\r\n\r\nfunction memcpy(src, srcOffset, dst, dstOffset, length) {\r\n  var i;\r\n\r\n  src = src.subarray || src.slice ? src : src.buffer;\r\n  dst = dst.subarray || dst.slice ? dst : dst.buffer;\r\n\r\n  src = srcOffset\r\n    ? src.subarray\r\n      ? src.subarray(srcOffset, length && srcOffset + length)\r\n      : src.slice(srcOffset, length && srcOffset + length)\r\n    : src;\r\n\r\n  if (dst.set) {\r\n    dst.set(src, dstOffset);\r\n  } else {\r\n    for (i = 0; i < src.length; i++) {\r\n      dst[i + dstOffset] = src[i];\r\n    }\r\n  }\r\n\r\n  return dst;\r\n}\r\n\r\n/**\r\n * Fast method to advance the line by one position.  The oldest position is removed.\r\n * @param position\r\n */\r\nTHREE.MeshLine.prototype.advance = function(position) {\r\n  var positions = this.attributes.position.array;\r\n  var previous = this.attributes.previous.array;\r\n  var next = this.attributes.next.array;\r\n  var l = positions.length;\r\n\r\n  // PREVIOUS\r\n  memcpy(positions, 0, previous, 0, l);\r\n\r\n  // POSITIONS\r\n  memcpy(positions, 6, positions, 0, l - 6);\r\n\r\n  positions[l - 6] = position.x;\r\n  positions[l - 5] = position.y;\r\n  positions[l - 4] = position.z;\r\n  positions[l - 3] = position.x;\r\n  positions[l - 2] = position.y;\r\n  positions[l - 1] = position.z;\r\n\r\n  // NEXT\r\n  memcpy(positions, 6, next, 0, l - 6);\r\n\r\n  next[l - 6] = position.x;\r\n  next[l - 5] = position.y;\r\n  next[l - 4] = position.z;\r\n  next[l - 3] = position.x;\r\n  next[l - 2] = position.y;\r\n  next[l - 1] = position.z;\r\n\r\n  this.attributes.position.needsUpdate = true;\r\n  this.attributes.previous.needsUpdate = true;\r\n  this.attributes.next.needsUpdate = true;\r\n};\r\n\r\nTHREE.MeshLineMaterial = function(parameters) {\r\n  var vertexShaderSource = [\r\n    \"precision highp float;\",\r\n    \"\",\r\n    \"attribute vec3 position;\",\r\n    \"attribute vec3 previous;\",\r\n    \"attribute vec3 next;\",\r\n    \"attribute float side;\",\r\n    \"attribute float width;\",\r\n    \"attribute vec2 uv;\",\r\n    \"attribute float counters;\",\r\n    \"\",\r\n    \"uniform mat4 projectionMatrix;\",\r\n    \"uniform mat4 modelViewMatrix;\",\r\n    \"uniform vec2 resolution;\",\r\n    \"uniform float lineWidth;\",\r\n    \"uniform vec3 color;\",\r\n    \"uniform float opacity;\",\r\n    \"uniform float near;\",\r\n    \"uniform float far;\",\r\n    \"uniform float sizeAttenuation;\",\r\n    \"\",\r\n    \"varying vec2 vUV;\",\r\n    \"varying vec4 vColor;\",\r\n    \"varying vec3 vPosition;\",\r\n    \"varying float vCounters;\",\r\n    \"\",\r\n    \"vec2 fix( vec4 i, float aspect ) {\",\r\n    \"\",\r\n    \"    vec2 res = i.xy / i.w;\",\r\n    \"    res.x *= aspect;\",\r\n    \"\t vCounters = counters;\",\r\n    \"    return res;\",\r\n    \"\",\r\n    \"}\",\r\n    \"\",\r\n    \"void main() {\",\r\n    \"\",\r\n    \"    float aspect = resolution.x / resolution.y;\",\r\n    \"\t float pixelWidthRatio = 1. / (resolution.x * projectionMatrix[0][0]);\",\r\n    \"\",\r\n    \"    vColor = vec4( color, opacity );\",\r\n    \"    vUV = uv;\",\r\n    \"\",\r\n    \"    mat4 m = projectionMatrix * modelViewMatrix;\",\r\n    \"    vec4 finalPosition = m * vec4( position, 1.0 );\",\r\n    \"    vec4 prevPos = m * vec4( previous, 1.0 );\",\r\n    \"    vec4 nextPos = m * vec4( next, 1.0 );\",\r\n    \"\",\r\n    \"    vec2 currentP = fix( finalPosition, aspect );\",\r\n    \"    vec2 prevP = fix( prevPos, aspect );\",\r\n    \"    vec2 nextP = fix( nextPos, aspect );\",\r\n    \"\",\r\n    \"\t float pixelWidth = finalPosition.w * pixelWidthRatio;\",\r\n    \"    float w = 1.8 * pixelWidth * lineWidth * width;\",\r\n    \"\",\r\n    \"    if( sizeAttenuation == 1. ) {\",\r\n    \"        w = 1.8 * lineWidth * width;\",\r\n    \"    }\",\r\n    \"\",\r\n    \"    vec2 dir;\",\r\n    \"    if( nextP == currentP ) dir = normalize( currentP - prevP );\",\r\n    \"    else if( prevP == currentP ) dir = normalize( nextP - currentP );\",\r\n    \"    else {\",\r\n    \"        vec2 dir1 = normalize( currentP - prevP );\",\r\n    \"        vec2 dir2 = normalize( nextP - currentP );\",\r\n    \"        dir = normalize( dir1 + dir2 );\",\r\n    \"\",\r\n    \"        vec2 perp = vec2( -dir1.y, dir1.x );\",\r\n    \"        vec2 miter = vec2( -dir.y, dir.x );\",\r\n    \"        //w = clamp( w / dot( miter, perp ), 0., 4. * lineWidth * width );\",\r\n    \"\",\r\n    \"    }\",\r\n    \"\",\r\n    \"    //vec2 normal = ( cross( vec3( dir, 0. ), vec3( 0., 0., 1. ) ) ).xy;\",\r\n    \"    vec2 normal = vec2( -dir.y, dir.x );\",\r\n    \"    normal.x /= aspect;\",\r\n    \"    normal *= .5 * w;\",\r\n    \"\",\r\n    \"    vec4 offset = vec4( normal * side, 0.0, 1.0 );\",\r\n    \"    finalPosition.xy += offset.xy;\",\r\n    \"\",\r\n    \"\t vPosition = ( modelViewMatrix * vec4( position, 1. ) ).xyz;\",\r\n    \"    gl_Position = finalPosition;\",\r\n    \"\",\r\n    \"}\"\r\n  ];\r\n\r\n  var fragmentShaderSource = [\r\n    \"#extension GL_OES_standard_derivatives : enable\",\r\n    \"precision mediump float;\",\r\n    \"\",\r\n    \"uniform sampler2D map;\",\r\n    \"uniform float useMap;\",\r\n    \"uniform float useDash;\",\r\n    \"uniform vec2 dashArray;\",\r\n    \"uniform float visibility;\",\r\n    \"uniform float alphaTest;\",\r\n    \"\",\r\n    \"varying vec2 vUV;\",\r\n    \"varying vec4 vColor;\",\r\n    \"varying vec3 vPosition;\",\r\n    \"varying float vCounters;\",\r\n    \"\",\r\n    \"void main() {\",\r\n    \"\",\r\n    \"    vec4 c = vColor;\",\r\n    \"\t if( c.a < alphaTest ) discard;\",\r\n    \"    if( useMap == 1. ) c *= texture2D( map, vUV );\",\r\n    \"\t if( useDash == 1. ){\",\r\n    \"\t \t \",\r\n    \"\t }\",\r\n    \"    gl_FragColor = c;\",\r\n    \"\t gl_FragColor.a *= step(vCounters,visibility);\",\r\n    \"}\"\r\n  ];\r\n\r\n  function check(v, d) {\r\n    if (v === undefined) return d;\r\n    return v;\r\n  }\r\n\r\n  THREE.Material.call(this);\r\n\r\n  parameters = parameters || {};\r\n\r\n  this.lineWidth = check(parameters.lineWidth, 1);\r\n  this.map = check(parameters.map, null);\r\n  this.useMap = check(parameters.useMap, 0);\r\n  this.color = check(parameters.color, new THREE.Color(0xffffff));\r\n  this.opacity = check(parameters.opacity, 1);\r\n  this.resolution = check(parameters.resolution, new THREE.Vector2(1, 1));\r\n  this.sizeAttenuation = check(parameters.sizeAttenuation, 1);\r\n  this.near = check(parameters.near, 1);\r\n  this.far = check(parameters.far, 1);\r\n  this.dashArray = check(parameters.dashArray, []);\r\n  this.useDash = this.dashArray !== [] ? 1 : 0;\r\n  this.visibility = check(parameters.visibility, 1);\r\n  this.alphaTest = check(parameters.alphaTest, 0);\r\n\r\n  var material = new THREE.RawShaderMaterial({\r\n    uniforms: {\r\n      lineWidth: { type: \"f\", value: this.lineWidth },\r\n      map: { type: \"t\", value: this.map },\r\n      useMap: { type: \"f\", value: this.useMap },\r\n      color: { type: \"c\", value: this.color },\r\n      opacity: { type: \"f\", value: this.opacity },\r\n      resolution: { type: \"v2\", value: this.resolution },\r\n      sizeAttenuation: { type: \"f\", value: this.sizeAttenuation },\r\n      near: { type: \"f\", value: this.near },\r\n      far: { type: \"f\", value: this.far },\r\n      dashArray: {\r\n        type: \"v2\",\r\n        value: new THREE.Vector2(this.dashArray[0], this.dashArray[1])\r\n      },\r\n      useDash: { type: \"f\", value: this.useDash },\r\n      visibility: { type: \"f\", value: this.visibility },\r\n      alphaTest: { type: \"f\", value: this.alphaTest }\r\n    },\r\n    vertexShader: vertexShaderSource.join(\"\\r\\n\"),\r\n    fragmentShader: fragmentShaderSource.join(\"\\r\\n\")\r\n  });\r\n\r\n  delete parameters.lineWidth;\r\n  delete parameters.map;\r\n  delete parameters.useMap;\r\n  delete parameters.color;\r\n  delete parameters.opacity;\r\n  delete parameters.resolution;\r\n  delete parameters.sizeAttenuation;\r\n  delete parameters.near;\r\n  delete parameters.far;\r\n  delete parameters.dashArray;\r\n  delete parameters.visibility;\r\n  delete parameters.alphaTest;\r\n\r\n  material.type = \"MeshLineMaterial\";\r\n\r\n  material.setValues(parameters);\r\n\r\n  return material;\r\n};\r\n\r\nTHREE.MeshLineMaterial.prototype = Object.create(THREE.Material.prototype);\r\nTHREE.MeshLineMaterial.prototype.constructor = THREE.MeshLineMaterial;\r\n\r\nTHREE.MeshLineMaterial.prototype.copy = function(source) {\r\n  THREE.Material.prototype.copy.call(this, source);\r\n\r\n  this.lineWidth = source.lineWidth;\r\n  this.map = source.map;\r\n  this.useMap = source.useMap;\r\n  this.color.copy(source.color);\r\n  this.opacity = source.opacity;\r\n  this.resolution.copy(source.resolution);\r\n  this.sizeAttenuation = source.sizeAttenuation;\r\n  this.near = source.near;\r\n  this.far = source.far;\r\n\r\n  return this;\r\n};\r\n\r\nexports.MeshLine = THREE.MeshLine;\r\nexports.MeshLineMaterial = THREE.MeshLineMaterial;\r\n","var Frame = require(\"./src/process\").Frame;\r\n\r\nexports.Frame = Frame;\r\n\r\nvar graph = require(\"ngraph.generators\").balancedBinTree(5);\r\n\r\nexports.graph = graph;\r\n\r\nif (window) {\r\n  window.Argo = exports;\r\n}\r\n","var THREE = require(\"three\");\r\nwindow.THREE = THREE;\r\nrequire(\"../include/QuickHull\");\r\nrequire(\"../include/ConvexGeometry\");\r\nrequire(\"../include/CSS3DRenderer\");\r\nvar Edge = require(\"./structure/node\").Edge;\r\nvar Node = require(\"./structure/node\").Node;\r\nvar OrbitControls = require(\"../include/OrbitControls\")(THREE); //'three-orbit-controls')(THREE);\r\nTHREE.MeshLine = require(\"../include/THREE.MeshLine\").MeshLine;\r\nTHREE.MeshLineMaterial = require(\"../include/THREE.MeshLine\").MeshLineMaterial;\r\nvar d3 = require(\"d3\");\r\nvar ee = require(\"event-emitter\");\r\n\r\nexports.default = {\r\n  THREE: THREE,\r\n  Edge: Edge,\r\n  Node: Node,\r\n  OrbitControls: OrbitControls,\r\n  d3: d3,\r\n  ee: ee,\r\n  NODE_COLOR: 0x0055aa,\r\n  NODE_HIGHLIGHT: 0x3498db,\r\n  ADJACENT_HIGHLIGHT: 0x95a5a6,\r\n  SEARCH_HIGHLIGHT: 0xe67e22,\r\n  NODE_HTEXTURE: \"http://i.imgur.com/xzkxSIw.png\",\r\n  NODE_TEXTURE: \"http://i.imgur.com/reTXqiM.png\",\r\n  NODE_NO_HTEX: true,\r\n  NODE_NO_TEX: true,\r\n  NODE_NO_HCOLOR: false,\r\n  NODE_NO_COLOR: false,\r\n  NODE_NO_HIGHLIGHT: false,\r\n  NODE_NEIGHBOR_HIGHLIGHT: true,\r\n  NODE_SHAPE: \"square\",\r\n  NODE_HSHAPE: \"square\",\r\n  NODE_SIZE: 5,\r\n  HIGHLIGHT_SIZE: 1.0,\r\n  LAYOUT: \"d3\",\r\n  LINES: \"notfancy\",\r\n  MAP: true,\r\n  TEXT_SCALE: true,\r\n  TEXT_SIZE: 0.07,\r\n  TEXT_X_OFFSET: 0.52,\r\n  TEXT_Y_OFFSET: 0.35,\r\n  TEXT_BACK_COLOR: \"rgba(100, 100, 200, 0)\",\r\n  TEXT_OPACITY: \"1\",\r\n  TEXT_WIREFRAME: false,\r\n  PIN_COLOR: 0xffffff\r\n};\r\n","var def = require(\"./imports\").default;\r\nconst spawn = require(\"threads\").spawn;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\n\r\nvar Frame = function(graph, options) {\r\n  // Needed to reference \"this\" in functions\r\n  var self = this;\r\n\r\n  // Options\r\n  this.inGraph = graph;\r\n  this.options = options || {\r\n    layout: def.LAYOUT\r\n  };\r\n  this.layout_options = this.options.graphLayout || {};\r\n\r\n  this.lineObjects = [];\r\n  this.lineIndices = [];\r\n  this.MAX_LINES = 100000;\r\n  this.textureLoader = new THREE.TextureLoader();\r\n  this.textureLoader.crossOrigin = true;\r\n  this.oldIntersect = -1;\r\n  this.selection = [];\r\n  this.fov = 60;\r\n  this.near = 1;\r\n  this.far = 5000;\r\n  this.mouseStart = new THREE.Vector3(0, 0, 0);\r\n  this.mouseEnd = new THREE.Vector3(0, 0, 0);\r\n  this.dragging = null;\r\n  this.showBox = false;\r\n  this.renderWidth = 500;\r\n  this.renderHeight = 500;\r\n  this.maxZoom = 1000;\r\n  this.paused = false;\r\n  this.mouseDown = false;\r\n  this.ee = ee({});\r\n  this.layoutInit = true;\r\n  this.labelSize = 6;\r\n  this.relativeFontSize = 1;\r\n  this.mapShowing = def.MAP;\r\n  this.darkMode = true;\r\n  this.lastNode = null;\r\n  this.fakeNodes = [];\r\n  this.rightClickedNode = null;\r\n  this.doHighlightNeighbors = def.NODE_NEIGHBOR_HIGHLIGHT;\r\n  this.prevHighlights = [];\r\n  this.neighborHost = null;\r\n  this.hull = null;\r\n\r\n  require(\"./utils/utils\")(this);\r\n  require(\"./setup\")(this);\r\n  require(\"./addremove\")(this);\r\n  require(\"./highlighting\")(this);\r\n  require(\"./select\")(this);\r\n  require(\"./mouse\")(this);\r\n  require(\"./modify\")(this);\r\n  require(\"./draw\")(this);\r\n  require(\"./api\")(this);\r\n  require(\"./update\")(this);\r\n\r\n  /**\r\n   *  Starting point, run once to create scene\r\n   */\r\n  this.display = function() {\r\n    this.animate();\r\n  };\r\n\r\n  /**\r\n   *  Creates loop called on every animation frame\r\n   */\r\n  let fps = 30;\r\n  let now;\r\n  let then = Date.now();\r\n  let interval = 1000 / fps;\r\n  let delta;\r\n  this.animate = function() {\r\n    requestAnimationFrame(self.animate);\r\n\r\n    now = Date.now();\r\n    delta = now - then;\r\n    if (delta > interval) {\r\n      then = now;\r\n      self.controls.update();\r\n      self.render();\r\n    }\r\n  };\r\n\r\n  /**\r\n   *  Set initial properties\r\n   */\r\n  this.init = function(aa = true) {\r\n    self.renderer = new THREE.WebGLRenderer({\r\n      alpha: true,\r\n      antialias: aa\r\n    });\r\n    //self.renderer.setPixelRatio(window.devicePixelRatio);\r\n    //self.renderer.setPixelRatio(0.1);\r\n    self.setDisplayParams();\r\n    self.setRendererParams();\r\n\r\n    self.setupCamera();\r\n    self.setupMinimap();\r\n    self.setupGeometry();\r\n    self.setupSelect();\r\n\r\n    self.element.appendChild(self.renderer.domElement);\r\n    self.element.appendChild(self.cssRenderer.domElement);\r\n\r\n    self.canvas = document.querySelector(\"graph-container\");\r\n\r\n    self.setupLayout();\r\n\r\n    self.setupGraph();\r\n\r\n    window.addEventListener(\r\n      \"resize\",\r\n      function(e) {\r\n        e.preventDefault();\r\n        self.onWindowResize();\r\n      },\r\n      false\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Change camera on window resize\r\n   */\r\n  self.onWindowResize = function() {\r\n    self.clientRect = self.element.getBoundingClientRect();\r\n    self.width = self.clientRect.width;\r\n    self.height = self.clientRect.height;\r\n    self.minimap.width = 0.2 * self.height;\r\n    self.minimap.height = 0.2 * self.height;\r\n    self.aspect = self.width / self.height;\r\n    self.ccamera.aspect = self.aspect;\r\n    self.ccamera.updateProjectionMatrix();\r\n\r\n    self.renderer.setSize(self.width, self.height);\r\n    self.cssRenderer.setSize(self.width, self.height);\r\n  };\r\n\r\n  /**\r\n   *  Draws graphics\r\n   */\r\n  var stage = 0;\r\n  this.render = function() {\r\n    self.updateCamera();\r\n    self.updateNodes();\r\n    if (stage == 1) {\r\n      self.updateLabels();\r\n      self.updateEdges();\r\n      stage = 0;\r\n    }\r\n    stage += 1;\r\n    if (self.options.layout == \"d3\") {\r\n      if (self.layoutInit == true) {\r\n        var nodes = [];\r\n        self.graph.forEachNode(function(node) {\r\n          nodes.push(node);\r\n        });\r\n        self.force.nodes(nodes);\r\n        self.force.force(\"link\", d3.forceLink(self.lineIndices));\r\n        self.force.restart();\r\n        self.force.stop();\r\n        if (self.tickToStatic && !self.paused) {\r\n          // We don't tick and pause for now\r\n          for (\r\n            var i = 0,\r\n              n = Math.ceil(\r\n                Math.log(self.force.alphaMin()) /\r\n                  Math.log(1 - self.force.alphaDecay())\r\n              );\r\n            i < n;\r\n            ++i\r\n          ) {\r\n            self.force.tick();\r\n          }\r\n          //self.pauseLayout();\r\n        }\r\n        self.layoutInit = false;\r\n      }\r\n    }\r\n    self.renderer.setViewport(0, 0, 1 * self.width, 1 * self.height);\r\n    self.renderer.setScissor(0, 0, 1 * self.width, 1 * self.height);\r\n    self.renderer.setScissorTest(true);\r\n    self.renderer.render(self.scene, self.ccamera);\r\n    self.cssRenderer.render(self.scene, self.ccamera);\r\n    if (self.mapShowing) {\r\n      self.minimap.width = 0.2 * self.height;\r\n      self.minimap.height = 0.2 * self.height;\r\n      self.renderer.setViewport(0, 0, self.minimap.width, self.minimap.height);\r\n      self.renderer.setScissor(0, 0, self.minimap.width, self.minimap.height);\r\n      self.renderer.setScissorTest(true);\r\n      self.renderer.render(self.scene, self.minimap.camera);\r\n    }\r\n  };\r\n};\r\n\r\nexports.Frame = Frame;\r\n","/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n *\r\n * Ported from: https://github.com/maurizzzio/quickhull3d/ by Mauricio Poppe (https://github.com/maurizzzio)\r\n *\r\n */\r\n\r\n(function() {\r\n  var Visible = 0;\r\n  var Deleted = 1;\r\n\r\n  function QuickHull() {\r\n    this.tolerance = -1;\r\n\r\n    this.faces = []; // the generated faces of the convex hull\r\n    this.newFaces = []; // this array holds the faces that are generated within a single iteration\r\n\r\n    // the vertex lists work as follows:\r\n    //\r\n    // let 'a' and 'b' be 'Face' instances\r\n    // let 'v' be points wrapped as instance of 'Vertex'\r\n    //\r\n    //     [v, v, ..., v, v, v, ...]\r\n    //      ^             ^\r\n    //      |             |\r\n    //  a.outside     b.outside\r\n    //\r\n    this.assigned = new VertexList();\r\n    this.unassigned = new VertexList();\r\n\r\n    this.vertices = []; // vertices of the hull (internal representation of given geometry data)\r\n  }\r\n\r\n  Object.assign(QuickHull.prototype, {\r\n    setFromPoints: function(points) {\r\n      if (Array.isArray(points) !== true) {\r\n        console.error(\"THREE.QuickHull: Points parameter is not an array.\");\r\n      }\r\n\r\n      if (points.length < 4) {\r\n        console.error(\r\n          \"THREE.QuickHull: The algorithm needs at least four points.\"\r\n        );\r\n      }\r\n\r\n      this.makeEmpty();\r\n\r\n      for (var i = 0, l = points.length; i < l; i++) {\r\n        this.vertices.push(new VertexNode(points[i]));\r\n      }\r\n\r\n      this.compute();\r\n\r\n      return this;\r\n    },\r\n\r\n    setFromObject: function(object) {\r\n      var points = [];\r\n\r\n      object.updateMatrixWorld(true);\r\n\r\n      object.traverse(function(node) {\r\n        var i, l, point;\r\n\r\n        var geometry = node.geometry;\r\n\r\n        if (geometry !== undefined) {\r\n          if (geometry.isGeometry) {\r\n            var vertices = geometry.vertices;\r\n\r\n            for (i = 0, l = vertices.length; i < l; i++) {\r\n              point = vertices[i].clone();\r\n              point.applyMatrix4(node.matrixWorld);\r\n\r\n              points.push(point);\r\n            }\r\n          } else if (geometry.isBufferGeometry) {\r\n            var attribute = geometry.attributes.position;\r\n\r\n            if (attribute !== undefined) {\r\n              for (i = 0, l = attribute.count; i < l; i++) {\r\n                point = new THREE.Vector3();\r\n\r\n                point\r\n                  .fromBufferAttribute(attribute, i)\r\n                  .applyMatrix4(node.matrixWorld);\r\n\r\n                points.push(point);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      return this.setFromPoints(points);\r\n    },\r\n\r\n    makeEmpty: function() {\r\n      this.faces = [];\r\n      this.vertices = [];\r\n\r\n      return this;\r\n    },\r\n\r\n    // Adds a vertex to the 'assigned' list of vertices and assigns it to the given face\r\n\r\n    addVertexToFace: function(vertex, face) {\r\n      vertex.face = face;\r\n\r\n      if (face.outside === null) {\r\n        this.assigned.append(vertex);\r\n      } else {\r\n        this.assigned.insertBefore(face.outside, vertex);\r\n      }\r\n\r\n      face.outside = vertex;\r\n\r\n      return this;\r\n    },\r\n\r\n    // Removes a vertex from the 'assigned' list of vertices and from the given face\r\n\r\n    removeVertexFromFace: function(vertex, face) {\r\n      if (vertex === face.outside) {\r\n        // fix face.outside link\r\n\r\n        if (vertex.next !== null && vertex.next.face === face) {\r\n          // face has at least 2 outside vertices, move the 'outside' reference\r\n\r\n          face.outside = vertex.next;\r\n        } else {\r\n          // vertex was the only outside vertex that face had\r\n\r\n          face.outside = null;\r\n        }\r\n      }\r\n\r\n      this.assigned.remove(vertex);\r\n\r\n      return this;\r\n    },\r\n\r\n    // Removes all the visible vertices that a given face is able to see which are stored in the 'assigned' vertext list\r\n\r\n    removeAllVerticesFromFace: function(face) {\r\n      if (face.outside !== null) {\r\n        // reference to the first and last vertex of this face\r\n\r\n        var start = face.outside;\r\n        var end = face.outside;\r\n\r\n        while (end.next !== null && end.next.face === face) {\r\n          end = end.next;\r\n        }\r\n\r\n        this.assigned.removeSubList(start, end);\r\n\r\n        // fix references\r\n\r\n        start.prev = end.next = null;\r\n        face.outside = null;\r\n\r\n        return start;\r\n      }\r\n    },\r\n\r\n    // Removes all the visible vertices that 'face' is able to see\r\n\r\n    deleteFaceVertices: function(face, absorbingFace) {\r\n      var faceVertices = this.removeAllVerticesFromFace(face);\r\n\r\n      if (faceVertices !== undefined) {\r\n        if (absorbingFace === undefined) {\r\n          // mark the vertices to be reassigned to some other face\r\n\r\n          this.unassigned.appendChain(faceVertices);\r\n        } else {\r\n          // if there's an absorbing face try to assign as many vertices as possible to it\r\n\r\n          var vertex = faceVertices;\r\n\r\n          do {\r\n            // we need to buffer the subsequent vertex at this point because the 'vertex.next' reference\r\n            // will be changed by upcoming method calls\r\n\r\n            var nextVertex = vertex.next;\r\n\r\n            var distance = absorbingFace.distanceToPoint(vertex.point);\r\n\r\n            // check if 'vertex' is able to see 'absorbingFace'\r\n\r\n            if (distance > this.tolerance) {\r\n              this.addVertexToFace(vertex, absorbingFace);\r\n            } else {\r\n              this.unassigned.append(vertex);\r\n            }\r\n\r\n            // now assign next vertex\r\n\r\n            vertex = nextVertex;\r\n          } while (vertex !== null);\r\n        }\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    // Reassigns as many vertices as possible from the unassigned list to the new faces\r\n\r\n    resolveUnassignedPoints: function(newFaces) {\r\n      if (this.unassigned.isEmpty() === false) {\r\n        var vertex = this.unassigned.first();\r\n\r\n        do {\r\n          // buffer 'next' reference, see .deleteFaceVertices()\r\n\r\n          var nextVertex = vertex.next;\r\n\r\n          var maxDistance = this.tolerance;\r\n\r\n          var maxFace = null;\r\n\r\n          for (var i = 0; i < newFaces.length; i++) {\r\n            var face = newFaces[i];\r\n\r\n            if (face.mark === Visible) {\r\n              var distance = face.distanceToPoint(vertex.point);\r\n\r\n              if (distance > maxDistance) {\r\n                maxDistance = distance;\r\n                maxFace = face;\r\n              }\r\n\r\n              if (maxDistance > 1000 * this.tolerance) break;\r\n            }\r\n          }\r\n\r\n          // 'maxFace' can be null e.g. if there are identical vertices\r\n\r\n          if (maxFace !== null) {\r\n            this.addVertexToFace(vertex, maxFace);\r\n          }\r\n\r\n          vertex = nextVertex;\r\n        } while (vertex !== null);\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    // Computes the extremes of a simplex which will be the initial hull\r\n\r\n    computeExtremes: function() {\r\n      var min = new THREE.Vector3();\r\n      var max = new THREE.Vector3();\r\n\r\n      var minVertices = [];\r\n      var maxVertices = [];\r\n\r\n      var i, l, j;\r\n\r\n      // initially assume that the first vertex is the min/max\r\n\r\n      for (i = 0; i < 3; i++) {\r\n        minVertices[i] = maxVertices[i] = this.vertices[0];\r\n      }\r\n\r\n      min.copy(this.vertices[0].point);\r\n      max.copy(this.vertices[0].point);\r\n\r\n      // compute the min/max vertex on all six directions\r\n\r\n      for (i = 0, l = this.vertices.length; i < l; i++) {\r\n        var vertex = this.vertices[i];\r\n        var point = vertex.point;\r\n\r\n        // update the min coordinates\r\n\r\n        for (j = 0; j < 3; j++) {\r\n          if (point.getComponent(j) < min.getComponent(j)) {\r\n            min.setComponent(j, point.getComponent(j));\r\n            minVertices[j] = vertex;\r\n          }\r\n        }\r\n\r\n        // update the max coordinates\r\n\r\n        for (j = 0; j < 3; j++) {\r\n          if (point.getComponent(j) > max.getComponent(j)) {\r\n            max.setComponent(j, point.getComponent(j));\r\n            maxVertices[j] = vertex;\r\n          }\r\n        }\r\n      }\r\n\r\n      // use min/max vectors to compute an optimal epsilon\r\n\r\n      this.tolerance =\r\n        3 *\r\n        Number.EPSILON *\r\n        (Math.max(Math.abs(min.x), Math.abs(max.x)) +\r\n          Math.max(Math.abs(min.y), Math.abs(max.y)) +\r\n          Math.max(Math.abs(min.z), Math.abs(max.z)));\r\n\r\n      return { min: minVertices, max: maxVertices };\r\n    },\r\n\r\n    // Computes the initial simplex assigning to its faces all the points\r\n    // that are candidates to form part of the hull\r\n\r\n    computeInitialHull: (function() {\r\n      var line3, plane, closestPoint;\r\n\r\n      return function computeInitialHull() {\r\n        if (line3 === undefined) {\r\n          line3 = new THREE.Line3();\r\n          plane = new THREE.Plane();\r\n          closestPoint = new THREE.Vector3();\r\n        }\r\n\r\n        var vertex,\r\n          vertices = this.vertices;\r\n        var extremes = this.computeExtremes();\r\n        var min = extremes.min;\r\n        var max = extremes.max;\r\n\r\n        var v0, v1, v2, v3;\r\n        var i, l, j;\r\n\r\n        // 1. Find the two vertices 'v0' and 'v1' with the greatest 1d separation\r\n        // (max.x - min.x)\r\n        // (max.y - min.y)\r\n        // (max.z - min.z)\r\n\r\n        var distance,\r\n          maxDistance = 0;\r\n        var index = 0;\r\n\r\n        for (i = 0; i < 3; i++) {\r\n          distance =\r\n            max[i].point.getComponent(i) - min[i].point.getComponent(i);\r\n\r\n          if (distance > maxDistance) {\r\n            maxDistance = distance;\r\n            index = i;\r\n          }\r\n        }\r\n\r\n        v0 = min[index];\r\n        v1 = max[index];\r\n\r\n        // 2. The next vertex 'v2' is the one farthest to the line formed by 'v0' and 'v1'\r\n\r\n        maxDistance = 0;\r\n        line3.set(v0.point, v1.point);\r\n\r\n        for (i = 0, l = this.vertices.length; i < l; i++) {\r\n          vertex = vertices[i];\r\n\r\n          if (vertex !== v0 && vertex !== v1) {\r\n            line3.closestPointToPoint(vertex.point, true, closestPoint);\r\n\r\n            distance = closestPoint.distanceToSquared(vertex.point);\r\n\r\n            if (distance > maxDistance) {\r\n              maxDistance = distance;\r\n              v2 = vertex;\r\n            }\r\n          }\r\n        }\r\n\r\n        // 3. The next vertex 'v3' is the one farthest to the plane 'v0', 'v1', 'v2'\r\n\r\n        maxDistance = 0;\r\n        plane.setFromCoplanarPoints(v0.point, v1.point, v2.point);\r\n\r\n        for (i = 0, l = this.vertices.length; i < l; i++) {\r\n          vertex = vertices[i];\r\n\r\n          if (vertex !== v0 && vertex !== v1 && vertex !== v2) {\r\n            distance = Math.abs(plane.distanceToPoint(vertex.point));\r\n\r\n            if (distance > maxDistance) {\r\n              maxDistance = distance;\r\n              v3 = vertex;\r\n            }\r\n          }\r\n        }\r\n\r\n        var faces = [];\r\n\r\n        if (plane.distanceToPoint(v3.point) < 0) {\r\n          // the face is not able to see the point so 'plane.normal' is pointing outside the tetrahedron\r\n\r\n          faces.push(\r\n            Face.create(v0, v1, v2),\r\n            Face.create(v3, v1, v0),\r\n            Face.create(v3, v2, v1),\r\n            Face.create(v3, v0, v2)\r\n          );\r\n\r\n          // set the twin edge\r\n\r\n          for (i = 0; i < 3; i++) {\r\n            j = (i + 1) % 3;\r\n\r\n            // join face[ i ] i > 0, with the first face\r\n\r\n            faces[i + 1].getEdge(2).setTwin(faces[0].getEdge(j));\r\n\r\n            // join face[ i ] with face[ i + 1 ], 1 <= i <= 3\r\n\r\n            faces[i + 1].getEdge(1).setTwin(faces[j + 1].getEdge(0));\r\n          }\r\n        } else {\r\n          // the face is able to see the point so 'plane.normal' is pointing inside the tetrahedron\r\n\r\n          faces.push(\r\n            Face.create(v0, v2, v1),\r\n            Face.create(v3, v0, v1),\r\n            Face.create(v3, v1, v2),\r\n            Face.create(v3, v2, v0)\r\n          );\r\n\r\n          // set the twin edge\r\n\r\n          for (i = 0; i < 3; i++) {\r\n            j = (i + 1) % 3;\r\n\r\n            // join face[ i ] i > 0, with the first face\r\n\r\n            faces[i + 1].getEdge(2).setTwin(faces[0].getEdge((3 - i) % 3));\r\n\r\n            // join face[ i ] with face[ i + 1 ]\r\n\r\n            faces[i + 1].getEdge(0).setTwin(faces[j + 1].getEdge(1));\r\n          }\r\n        }\r\n\r\n        // the initial hull is the tetrahedron\r\n\r\n        for (i = 0; i < 4; i++) {\r\n          this.faces.push(faces[i]);\r\n        }\r\n\r\n        // initial assignment of vertices to the faces of the tetrahedron\r\n\r\n        for (i = 0, l = vertices.length; i < l; i++) {\r\n          vertex = vertices[i];\r\n\r\n          if (\r\n            vertex !== v0 &&\r\n            vertex !== v1 &&\r\n            vertex !== v2 &&\r\n            vertex !== v3\r\n          ) {\r\n            maxDistance = this.tolerance;\r\n            var maxFace = null;\r\n\r\n            for (j = 0; j < 4; j++) {\r\n              distance = this.faces[j].distanceToPoint(vertex.point);\r\n\r\n              if (distance > maxDistance) {\r\n                maxDistance = distance;\r\n                maxFace = this.faces[j];\r\n              }\r\n            }\r\n\r\n            if (maxFace !== null) {\r\n              this.addVertexToFace(vertex, maxFace);\r\n            }\r\n          }\r\n        }\r\n\r\n        return this;\r\n      };\r\n    })(),\r\n\r\n    // Removes inactive faces\r\n\r\n    reindexFaces: function() {\r\n      var activeFaces = [];\r\n\r\n      for (var i = 0; i < this.faces.length; i++) {\r\n        var face = this.faces[i];\r\n\r\n        if (face.mark === Visible) {\r\n          activeFaces.push(face);\r\n        }\r\n      }\r\n\r\n      this.faces = activeFaces;\r\n\r\n      return this;\r\n    },\r\n\r\n    // Finds the next vertex to create faces with the current hull\r\n\r\n    nextVertexToAdd: function() {\r\n      // if the 'assigned' list of vertices is empty, no vertices are left. return with 'undefined'\r\n\r\n      if (this.assigned.isEmpty() === false) {\r\n        var eyeVertex,\r\n          maxDistance = 0;\r\n\r\n        // grap the first available face and start with the first visible vertex of that face\r\n\r\n        var eyeFace = this.assigned.first().face;\r\n        var vertex = eyeFace.outside;\r\n\r\n        // now calculate the farthest vertex that face can see\r\n\r\n        do {\r\n          var distance = eyeFace.distanceToPoint(vertex.point);\r\n\r\n          if (distance > maxDistance) {\r\n            maxDistance = distance;\r\n            eyeVertex = vertex;\r\n          }\r\n\r\n          vertex = vertex.next;\r\n        } while (vertex !== null && vertex.face === eyeFace);\r\n\r\n        return eyeVertex;\r\n      }\r\n    },\r\n\r\n    // Computes a chain of half edges in CCW order called the 'horizon'.\r\n    // For an edge to be part of the horizon it must join a face that can see\r\n    // 'eyePoint' and a face that cannot see 'eyePoint'.\r\n\r\n    computeHorizon: function(eyePoint, crossEdge, face, horizon) {\r\n      // moves face's vertices to the 'unassigned' vertex list\r\n\r\n      this.deleteFaceVertices(face);\r\n\r\n      face.mark = Deleted;\r\n\r\n      var edge;\r\n\r\n      if (crossEdge === null) {\r\n        edge = crossEdge = face.getEdge(0);\r\n      } else {\r\n        // start from the next edge since 'crossEdge' was already analyzed\r\n        // (actually 'crossEdge.twin' was the edge who called this method recursively)\r\n\r\n        edge = crossEdge.next;\r\n      }\r\n\r\n      do {\r\n        var twinEdge = edge.twin;\r\n        var oppositeFace = twinEdge.face;\r\n\r\n        if (oppositeFace.mark === Visible) {\r\n          if (oppositeFace.distanceToPoint(eyePoint) > this.tolerance) {\r\n            // the opposite face can see the vertex, so proceed with next edge\r\n\r\n            this.computeHorizon(eyePoint, twinEdge, oppositeFace, horizon);\r\n          } else {\r\n            // the opposite face can't see the vertex, so this edge is part of the horizon\r\n\r\n            horizon.push(edge);\r\n          }\r\n        }\r\n\r\n        edge = edge.next;\r\n      } while (edge !== crossEdge);\r\n\r\n      return this;\r\n    },\r\n\r\n    // Creates a face with the vertices 'eyeVertex.point', 'horizonEdge.tail' and 'horizonEdge.head' in CCW order\r\n\r\n    addAdjoiningFace: function(eyeVertex, horizonEdge) {\r\n      // all the half edges are created in ccw order thus the face is always pointing outside the hull\r\n\r\n      var face = Face.create(eyeVertex, horizonEdge.tail(), horizonEdge.head());\r\n\r\n      this.faces.push(face);\r\n\r\n      // join face.getEdge( - 1 ) with the horizon's opposite edge face.getEdge( - 1 ) = face.getEdge( 2 )\r\n\r\n      face.getEdge(-1).setTwin(horizonEdge.twin);\r\n\r\n      return face.getEdge(0); // the half edge whose vertex is the eyeVertex\r\n    },\r\n\r\n    //  Adds 'horizon.length' faces to the hull, each face will be linked with the\r\n    //  horizon opposite face and the face on the left/right\r\n\r\n    addNewFaces: function(eyeVertex, horizon) {\r\n      this.newFaces = [];\r\n\r\n      var firstSideEdge = null;\r\n      var previousSideEdge = null;\r\n\r\n      for (var i = 0; i < horizon.length; i++) {\r\n        var horizonEdge = horizon[i];\r\n\r\n        // returns the right side edge\r\n\r\n        var sideEdge = this.addAdjoiningFace(eyeVertex, horizonEdge);\r\n\r\n        if (firstSideEdge === null) {\r\n          firstSideEdge = sideEdge;\r\n        } else {\r\n          // joins face.getEdge( 1 ) with previousFace.getEdge( 0 )\r\n\r\n          sideEdge.next.setTwin(previousSideEdge);\r\n        }\r\n\r\n        this.newFaces.push(sideEdge.face);\r\n        previousSideEdge = sideEdge;\r\n      }\r\n\r\n      // perform final join of new faces\r\n\r\n      firstSideEdge.next.setTwin(previousSideEdge);\r\n\r\n      return this;\r\n    },\r\n\r\n    // Adds a vertex to the hull\r\n\r\n    addVertexToHull: function(eyeVertex) {\r\n      var horizon = [];\r\n      var i, face;\r\n\r\n      this.unassigned.clear();\r\n\r\n      // remove 'eyeVertex' from 'eyeVertex.face' so that it can't be added to the 'unassigned' vertex list\r\n\r\n      this.removeVertexFromFace(eyeVertex, eyeVertex.face);\r\n\r\n      this.computeHorizon(eyeVertex.point, null, eyeVertex.face, horizon);\r\n\r\n      this.addNewFaces(eyeVertex, horizon);\r\n\r\n      // reassign 'unassigned' vertices to the new faces\r\n\r\n      this.resolveUnassignedPoints(this.newFaces);\r\n\r\n      return this;\r\n    },\r\n\r\n    cleanup: function() {\r\n      this.assigned.clear();\r\n      this.unassigned.clear();\r\n      this.newFaces = [];\r\n\r\n      return this;\r\n    },\r\n\r\n    compute: function() {\r\n      var vertex;\r\n\r\n      this.computeInitialHull();\r\n\r\n      // add all available vertices gradually to the hull\r\n\r\n      while ((vertex = this.nextVertexToAdd()) !== undefined) {\r\n        this.addVertexToHull(vertex);\r\n      }\r\n\r\n      this.reindexFaces();\r\n\r\n      this.cleanup();\r\n\r\n      return this;\r\n    }\r\n  });\r\n\r\n  //\r\n\r\n  function Face() {\r\n    this.normal = new THREE.Vector3();\r\n    this.midpoint = new THREE.Vector3();\r\n    this.area = 0;\r\n\r\n    this.constant = 0; // signed distance from face to the origin\r\n    this.outside = null; // reference to a vertex in a vertex list this face can see\r\n    this.mark = Visible;\r\n    this.edge = null;\r\n  }\r\n\r\n  Object.assign(Face, {\r\n    create: function(a, b, c) {\r\n      var face = new Face();\r\n\r\n      var e0 = new HalfEdge(a, face);\r\n      var e1 = new HalfEdge(b, face);\r\n      var e2 = new HalfEdge(c, face);\r\n\r\n      // join edges\r\n\r\n      e0.next = e2.prev = e1;\r\n      e1.next = e0.prev = e2;\r\n      e2.next = e1.prev = e0;\r\n\r\n      // main half edge reference\r\n\r\n      face.edge = e0;\r\n\r\n      return face.compute();\r\n    }\r\n  });\r\n\r\n  Object.assign(Face.prototype, {\r\n    getEdge: function(i) {\r\n      var edge = this.edge;\r\n\r\n      while (i > 0) {\r\n        edge = edge.next;\r\n        i--;\r\n      }\r\n\r\n      while (i < 0) {\r\n        edge = edge.prev;\r\n        i++;\r\n      }\r\n\r\n      return edge;\r\n    },\r\n\r\n    compute: (function() {\r\n      var triangle;\r\n\r\n      return function compute() {\r\n        if (triangle === undefined) triangle = new THREE.Triangle();\r\n\r\n        var a = this.edge.tail();\r\n        var b = this.edge.head();\r\n        var c = this.edge.next.head();\r\n\r\n        triangle.set(a.point, b.point, c.point);\r\n\r\n        triangle.normal(this.normal);\r\n        triangle.midpoint(this.midpoint);\r\n        this.area = triangle.area();\r\n\r\n        this.constant = this.normal.dot(this.midpoint);\r\n\r\n        return this;\r\n      };\r\n    })(),\r\n\r\n    distanceToPoint: function(point) {\r\n      return this.normal.dot(point) - this.constant;\r\n    }\r\n  });\r\n\r\n  // Entity for a Doubly-Connected Edge List (DCEL).\r\n\r\n  function HalfEdge(vertex, face) {\r\n    this.vertex = vertex;\r\n    this.prev = null;\r\n    this.next = null;\r\n    this.twin = null;\r\n    this.face = face;\r\n  }\r\n\r\n  Object.assign(HalfEdge.prototype, {\r\n    head: function() {\r\n      return this.vertex;\r\n    },\r\n\r\n    tail: function() {\r\n      return this.prev ? this.prev.vertex : null;\r\n    },\r\n\r\n    length: function() {\r\n      var head = this.head();\r\n      var tail = this.tail();\r\n\r\n      if (tail !== null) {\r\n        return tail.point.distanceTo(head.point);\r\n      }\r\n\r\n      return -1;\r\n    },\r\n\r\n    lengthSquared: function() {\r\n      var head = this.head();\r\n      var tail = this.tail();\r\n\r\n      if (tail !== null) {\r\n        return tail.point.distanceToSquared(head.point);\r\n      }\r\n\r\n      return -1;\r\n    },\r\n\r\n    setTwin: function(edge) {\r\n      this.twin = edge;\r\n      edge.twin = this;\r\n\r\n      return this;\r\n    }\r\n  });\r\n\r\n  // A vertex as a double linked list node.\r\n\r\n  function VertexNode(point) {\r\n    this.point = point;\r\n    this.prev = null;\r\n    this.next = null;\r\n    this.face = null; // the face that is able to see this vertex\r\n  }\r\n\r\n  // A double linked list that contains vertex nodes.\r\n\r\n  function VertexList() {\r\n    this.head = null;\r\n    this.tail = null;\r\n  }\r\n\r\n  Object.assign(VertexList.prototype, {\r\n    first: function() {\r\n      return this.head;\r\n    },\r\n\r\n    last: function() {\r\n      return this.tail;\r\n    },\r\n\r\n    clear: function() {\r\n      this.head = this.tail = null;\r\n\r\n      return this;\r\n    },\r\n\r\n    // Inserts a vertex before the target vertex\r\n\r\n    insertBefore: function(target, vertex) {\r\n      vertex.prev = target.prev;\r\n      vertex.next = target;\r\n\r\n      if (vertex.prev === null) {\r\n        this.head = vertex;\r\n      } else {\r\n        vertex.prev.next = vertex;\r\n      }\r\n\r\n      target.prev = vertex;\r\n\r\n      return this;\r\n    },\r\n\r\n    // Inserts a vertex after the target vertex\r\n\r\n    insertAfter: function(target, vertex) {\r\n      vertex.prev = target;\r\n      vertex.next = target.next;\r\n\r\n      if (vertex.next === null) {\r\n        this.tail = vertex;\r\n      } else {\r\n        vertex.next.prev = vertex;\r\n      }\r\n\r\n      target.next = vertex;\r\n\r\n      return this;\r\n    },\r\n\r\n    // Appends a vertex to the end of the linked list\r\n\r\n    append: function(vertex) {\r\n      if (this.head === null) {\r\n        this.head = vertex;\r\n      } else {\r\n        this.tail.next = vertex;\r\n      }\r\n\r\n      vertex.prev = this.tail;\r\n      vertex.next = null; // the tail has no subsequent vertex\r\n\r\n      this.tail = vertex;\r\n\r\n      return this;\r\n    },\r\n\r\n    // Appends a chain of vertices where 'vertex' is the head.\r\n\r\n    appendChain: function(vertex) {\r\n      if (this.head === null) {\r\n        this.head = vertex;\r\n      } else {\r\n        this.tail.next = vertex;\r\n      }\r\n\r\n      vertex.prev = this.tail;\r\n\r\n      // ensure that the 'tail' reference points to the last vertex of the chain\r\n\r\n      while (vertex.next !== null) {\r\n        vertex = vertex.next;\r\n      }\r\n\r\n      this.tail = vertex;\r\n\r\n      return this;\r\n    },\r\n\r\n    // Removes a vertex from the linked list\r\n\r\n    remove: function(vertex) {\r\n      if (vertex.prev === null) {\r\n        this.head = vertex.next;\r\n      } else {\r\n        vertex.prev.next = vertex.next;\r\n      }\r\n\r\n      if (vertex.next === null) {\r\n        this.tail = vertex.prev;\r\n      } else {\r\n        vertex.next.prev = vertex.prev;\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    // Removes a list of vertices whose 'head' is 'a' and whose 'tail' is b\r\n\r\n    removeSubList: function(a, b) {\r\n      if (a.prev === null) {\r\n        this.head = b.next;\r\n      } else {\r\n        a.prev.next = b.next;\r\n      }\r\n\r\n      if (b.next === null) {\r\n        this.tail = a.prev;\r\n      } else {\r\n        b.next.prev = a.prev;\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    isEmpty: function() {\r\n      return this.head === null;\r\n    }\r\n  });\r\n\r\n  // export\r\n\r\n  THREE.QuickHull = QuickHull;\r\n})();\r\n","/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n */\r\n\r\n(function() {\r\n  // ConvexGeometry\r\n\r\n  function ConvexGeometry(points) {\r\n    THREE.Geometry.call(this);\r\n\r\n    this.type = \"ConvexGeometry\";\r\n\r\n    this.fromBufferGeometry(new ConvexBufferGeometry(points));\r\n    this.mergeVertices();\r\n  }\r\n\r\n  ConvexGeometry.prototype = Object.create(THREE.Geometry.prototype);\r\n  ConvexGeometry.prototype.constructor = ConvexGeometry;\r\n\r\n  // ConvexBufferGeometry\r\n\r\n  function ConvexBufferGeometry(points) {\r\n    THREE.BufferGeometry.call(this);\r\n\r\n    this.type = \"ConvexBufferGeometry\";\r\n\r\n    // buffers\r\n\r\n    var vertices = [];\r\n    var normals = [];\r\n\r\n    // execute QuickHull\r\n\r\n    if (THREE.QuickHull === undefined) {\r\n      console.error(\r\n        \"THREE.ConvexBufferGeometry: ConvexBufferGeometry relies on THREE.QuickHull\"\r\n      );\r\n    }\r\n\r\n    var quickHull = new THREE.QuickHull().setFromPoints(points);\r\n\r\n    // generate vertices and normals\r\n\r\n    var faces = quickHull.faces;\r\n\r\n    for (var i = 0; i < faces.length; i++) {\r\n      var face = faces[i];\r\n      var edge = face.edge;\r\n\r\n      // we move along a doubly-connected edge list to access all face points (see HalfEdge docs)\r\n\r\n      do {\r\n        var point = edge.head().point;\r\n\r\n        vertices.push(point.x, point.y, point.z);\r\n        normals.push(face.normal.x, face.normal.y, face.normal.z);\r\n\r\n        edge = edge.next;\r\n      } while (edge !== face.edge);\r\n    }\r\n\r\n    // build geometry\r\n\r\n    this.addAttribute(\r\n      \"position\",\r\n      new THREE.Float32BufferAttribute(vertices, 3)\r\n    );\r\n    this.addAttribute(\"normal\", new THREE.Float32BufferAttribute(normals, 3));\r\n  }\r\n\r\n  ConvexBufferGeometry.prototype = Object.create(\r\n    THREE.BufferGeometry.prototype\r\n  );\r\n  ConvexBufferGeometry.prototype.constructor = ConvexBufferGeometry;\r\n\r\n  // export\r\n\r\n  THREE.ConvexGeometry = ConvexGeometry;\r\n  THREE.ConvexBufferGeometry = ConvexBufferGeometry;\r\n})();\r\n","/**\r\n * Based on http://www.emagix.net/academic/mscs-project/item/camera-sync-with-css3-and-webgl-threejs\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nvar THREE = require(\"three\");\r\n\r\nTHREE.CSS3DObject = function(element) {\r\n  THREE.Object3D.call(this);\r\n\r\n  this.element = element;\r\n  this.element.style.position = \"absolute\";\r\n\r\n  this.addEventListener(\"removed\", function() {\r\n    if (this.element.parentNode !== null) {\r\n      this.element.parentNode.removeChild(this.element);\r\n    }\r\n  });\r\n};\r\n\r\nTHREE.CSS3DObject.prototype = Object.create(THREE.Object3D.prototype);\r\nTHREE.CSS3DObject.prototype.constructor = THREE.CSS3DObject;\r\n\r\nTHREE.CSS3DSprite = function(element) {\r\n  THREE.CSS3DObject.call(this, element);\r\n};\r\n\r\nTHREE.CSS3DSprite.prototype = Object.create(THREE.CSS3DObject.prototype);\r\nTHREE.CSS3DSprite.prototype.constructor = THREE.CSS3DSprite;\r\n\r\n//\r\n\r\nTHREE.CSS3DRenderer = function() {\r\n  console.log(\"THREE.CSS3DRenderer\", THREE.REVISION);\r\n\r\n  var _width, _height;\r\n\r\n  var matrix = new THREE.Matrix4();\r\n\r\n  var cache = {\r\n    camera: { fov: 0, style: \"\" },\r\n    objects: {}\r\n  };\r\n\r\n  var domElement = document.createElement(\"div\");\r\n  domElement.style.overflow = \"hidden\";\r\n\r\n  domElement.style.WebkitTransformStyle = \"preserve-3d\";\r\n  domElement.style.MozTransformStyle = \"preserve-3d\";\r\n  domElement.style.oTransformStyle = \"preserve-3d\";\r\n  domElement.style.transformStyle = \"preserve-3d\";\r\n\r\n  this.domElement = domElement;\r\n\r\n  var cameraElement = document.createElement(\"div\");\r\n\r\n  cameraElement.style.position = \"absolute\";\r\n  cameraElement.style.left = \"50%\";\r\n  cameraElement.style.top = \"50%\";\r\n\r\n  cameraElement.style.WebkitTransformStyle = \"preserve-3d\";\r\n  cameraElement.style.MozTransformStyle = \"preserve-3d\";\r\n  cameraElement.style.oTransformStyle = \"preserve-3d\";\r\n  cameraElement.style.transformStyle = \"preserve-3d\";\r\n\r\n  domElement.appendChild(cameraElement);\r\n\r\n  this.setClearColor = function() {};\r\n\r\n  this.getSize = function() {\r\n    return {\r\n      width: _width,\r\n      height: _height\r\n    };\r\n  };\r\n\r\n  this.setSize = function(width, height) {\r\n    _width = width;\r\n    _height = height;\r\n\r\n    domElement.style.width = width + \"px\";\r\n    domElement.style.height = height + \"px\";\r\n  };\r\n\r\n  function epsilon(value) {\r\n    return Math.abs(value) < Number.EPSILON ? 0 : value;\r\n  }\r\n\r\n  function getCameraCSSMatrix(matrix) {\r\n    var elements = matrix.elements;\r\n\r\n    return (\r\n      \"matrix3d(\" +\r\n      epsilon(elements[0]) +\r\n      \",\" +\r\n      epsilon(-elements[1]) +\r\n      \",\" +\r\n      epsilon(elements[2]) +\r\n      \",\" +\r\n      epsilon(elements[3]) +\r\n      \",\" +\r\n      epsilon(elements[4]) +\r\n      \",\" +\r\n      epsilon(-elements[5]) +\r\n      \",\" +\r\n      epsilon(elements[6]) +\r\n      \",\" +\r\n      epsilon(elements[7]) +\r\n      \",\" +\r\n      epsilon(elements[8]) +\r\n      \",\" +\r\n      epsilon(-elements[9]) +\r\n      \",\" +\r\n      epsilon(elements[10]) +\r\n      \",\" +\r\n      epsilon(elements[11]) +\r\n      \",\" +\r\n      epsilon(elements[12]) +\r\n      \",\" +\r\n      epsilon(-elements[13]) +\r\n      \",\" +\r\n      epsilon(elements[14]) +\r\n      \",\" +\r\n      epsilon(elements[15]) +\r\n      \")\"\r\n    );\r\n  }\r\n\r\n  function getObjectCSSMatrix(matrix) {\r\n    var elements = matrix.elements;\r\n\r\n    return (\r\n      \"translate3d(-50%,-50%,0) matrix3d(\" +\r\n      epsilon(elements[0]) +\r\n      \",\" +\r\n      epsilon(elements[1]) +\r\n      \",\" +\r\n      epsilon(elements[2]) +\r\n      \",\" +\r\n      epsilon(elements[3]) +\r\n      \",\" +\r\n      epsilon(-elements[4]) +\r\n      \",\" +\r\n      epsilon(-elements[5]) +\r\n      \",\" +\r\n      epsilon(-elements[6]) +\r\n      \",\" +\r\n      epsilon(-elements[7]) +\r\n      \",\" +\r\n      epsilon(elements[8]) +\r\n      \",\" +\r\n      epsilon(elements[9]) +\r\n      \",\" +\r\n      epsilon(elements[10]) +\r\n      \",\" +\r\n      epsilon(elements[11]) +\r\n      \",\" +\r\n      epsilon(elements[12]) +\r\n      \",\" +\r\n      epsilon(elements[13]) +\r\n      \",\" +\r\n      epsilon(elements[14]) +\r\n      \",\" +\r\n      epsilon(elements[15]) +\r\n      \")\"\r\n    );\r\n  }\r\n\r\n  function renderObject(object, camera) {\r\n    if (object instanceof THREE.CSS3DObject) {\r\n      var style;\r\n\r\n      if (object instanceof THREE.CSS3DSprite) {\r\n        // http://swiftcoder.wordpress.com/2008/11/25/constructing-a-billboard-matrix/\r\n\r\n        matrix.copy(camera.matrixWorldInverse);\r\n        matrix.transpose();\r\n        matrix.copyPosition(object.matrixWorld);\r\n        matrix.scale(object.scale);\r\n\r\n        matrix.elements[3] = 0;\r\n        matrix.elements[7] = 0;\r\n        matrix.elements[11] = 0;\r\n        matrix.elements[15] = 1;\r\n\r\n        style = getObjectCSSMatrix(matrix);\r\n      } else {\r\n        style = getObjectCSSMatrix(object.matrixWorld);\r\n      }\r\n\r\n      var element = object.element;\r\n      var cachedStyle = cache.objects[object.id];\r\n\r\n      if (cachedStyle === undefined || cachedStyle !== style) {\r\n        element.style.WebkitTransform = style;\r\n        element.style.MozTransform = style;\r\n        element.style.oTransform = style;\r\n        element.style.transform = style;\r\n\r\n        cache.objects[object.id] = style;\r\n      }\r\n\r\n      if (element.parentNode !== cameraElement) {\r\n        cameraElement.appendChild(element);\r\n      }\r\n    }\r\n\r\n    for (var i = 0, l = object.children.length; i < l; i++) {\r\n      renderObject(object.children[i], camera);\r\n    }\r\n  }\r\n\r\n  this.render = function(scene, camera) {\r\n    var fov =\r\n      (0.5 / Math.tan(THREE.Math.degToRad(camera.getEffectiveFOV() * 0.5))) *\r\n      _height;\r\n\r\n    if (cache.camera.fov !== fov) {\r\n      domElement.style.WebkitPerspective = fov + \"px\";\r\n      domElement.style.MozPerspective = fov + \"px\";\r\n      domElement.style.oPerspective = fov + \"px\";\r\n      domElement.style.perspective = fov + \"px\";\r\n\r\n      cache.camera.fov = fov;\r\n    }\r\n\r\n    scene.updateMatrixWorld();\r\n\r\n    if (camera.parent === null) camera.updateMatrixWorld();\r\n\r\n    camera.matrixWorldInverse.getInverse(camera.matrixWorld);\r\n\r\n    var style =\r\n      \"translateZ(\" +\r\n      fov +\r\n      \"px)\" +\r\n      getCameraCSSMatrix(camera.matrixWorldInverse);\r\n\r\n    if (cache.camera.style !== style) {\r\n      cameraElement.style.WebkitTransform = style;\r\n      cameraElement.style.MozTransform = style;\r\n      cameraElement.style.oTransform = style;\r\n      cameraElement.style.transform = style;\r\n\r\n      cache.camera.style = style;\r\n    }\r\n\r\n    renderObject(scene, camera);\r\n  };\r\n};\r\n","module.exports = function(THREE) {\r\n  /**\r\n   * @author qiao / https://github.com/qiao\r\n   * @author mrdoob / http://mrdoob.com\r\n   * @author alteredq / http://alteredqualia.com/\r\n   * @author WestLangley / http://github.com/WestLangley\r\n   * @author erich666 / http://erichaines.com\r\n   */\r\n\r\n  // This set of controls performs orbiting, dollying (zooming), and panning.\r\n  // Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\r\n  //\r\n  //    Orbit - left mouse / touch: one finger move\r\n  //    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\r\n  //    Pan - right mouse, or arrow keys / touch: three finter swipe\r\n\r\n  function OrbitControls(object, domElement) {\r\n    this.object = object;\r\n\r\n    this.domElement = domElement !== undefined ? domElement : document;\r\n\r\n    // Set to false to disable this control\r\n    this.enabled = true;\r\n\r\n    // \"target\" sets the location of focus, where the object orbits around\r\n    this.target = new THREE.Vector3();\r\n\r\n    // How far you can dolly in and out ( PerspectiveCamera only )\r\n    this.minDistance = 0;\r\n    this.maxDistance = Infinity;\r\n\r\n    // How far you can zoom in and out ( OrthographicCamera only )\r\n    this.minZoom = 0;\r\n    this.maxZoom = Infinity;\r\n\r\n    // How far you can orbit vertically, upper and lower limits.\r\n    // Range is 0 to Math.PI radians.\r\n    this.minPolarAngle = 0; // radians\r\n    this.maxPolarAngle = Math.PI; // radians\r\n\r\n    // How far you can orbit horizontally, upper and lower limits.\r\n    // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\r\n    this.minAzimuthAngle = -Infinity; // radians\r\n    this.maxAzimuthAngle = Infinity; // radians\r\n\r\n    // Set to true to enable damping (inertia)\r\n    // If damping is enabled, you must call controls.update() in your animation loop\r\n    this.enableDamping = false;\r\n    this.dampingFactor = 0.25;\r\n\r\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\r\n    // Set to false to disable zooming\r\n    this.enableZoom = true;\r\n    this.zoomSpeed = 1.0;\r\n\r\n    // Set to false to disable rotating\r\n    this.enableRotate = true;\r\n    this.rotateSpeed = 1.0;\r\n\r\n    // Set to false to disable panning\r\n    this.enablePan = true;\r\n    this.keyPanSpeed = 7.0; // pixels moved per arrow key push\r\n\r\n    // Set to true to automatically rotate around the target\r\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\r\n    this.autoRotate = false;\r\n    this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\r\n\r\n    // Set to false to disable use of the keys\r\n    this.enableKeys = true;\r\n\r\n    // The four arrow keys\r\n    this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40, SPACE: 32 };\r\n\r\n    // Mouse buttons\r\n    this.mouseButtons = {\r\n      ORBIT: THREE.MOUSE.LEFT,\r\n      ZOOM: THREE.MOUSE.MIDDLE,\r\n      PAN: THREE.MOUSE.RIGHT\r\n    };\r\n\r\n    // for reset\r\n    this.target0 = this.target.clone();\r\n    this.position0 = this.object.position.clone();\r\n    this.zoom0 = this.object.zoom;\r\n\r\n    // for space panning\r\n    this.spacePan = false;\r\n    this.bothPan = false;\r\n\r\n    //\r\n    // public methods\r\n    //\r\n\r\n    this.getPolarAngle = function() {\r\n      return spherical.phi;\r\n    };\r\n\r\n    this.getAzimuthalAngle = function() {\r\n      return spherical.theta;\r\n    };\r\n\r\n    this.reset = function() {\r\n      scope.target.copy(scope.target0);\r\n      scope.object.position.copy(scope.position0);\r\n      scope.object.zoom = scope.zoom0;\r\n\r\n      scope.object.updateProjectionMatrix();\r\n      scope.dispatchEvent(changeEvent);\r\n\r\n      scope.update();\r\n\r\n      state = STATE.NONE;\r\n    };\r\n\r\n    // this method is exposed, but perhaps it would be better if we can make it private...\r\n    this.update = (function() {\r\n      var offset = new THREE.Vector3();\r\n\r\n      // so camera.up is the orbit axis\r\n      var quat = new THREE.Quaternion().setFromUnitVectors(\r\n        object.up,\r\n        new THREE.Vector3(0, 1, 0)\r\n      );\r\n      var quatInverse = quat.clone().inverse();\r\n\r\n      var lastPosition = new THREE.Vector3();\r\n      var lastQuaternion = new THREE.Quaternion();\r\n\r\n      return function update() {\r\n        var position = scope.object.position;\r\n\r\n        offset.copy(position).sub(scope.target);\r\n\r\n        // rotate offset to \"y-axis-is-up\" space\r\n        offset.applyQuaternion(quat);\r\n\r\n        // angle from z-axis around y-axis\r\n        spherical.setFromVector3(offset);\r\n\r\n        if (scope.autoRotate && state === STATE.NONE) {\r\n          rotateLeft(getAutoRotationAngle());\r\n        }\r\n\r\n        spherical.theta += sphericalDelta.theta;\r\n        spherical.phi += sphericalDelta.phi;\r\n\r\n        // restrict theta to be between desired limits\r\n        spherical.theta = Math.max(\r\n          scope.minAzimuthAngle,\r\n          Math.min(scope.maxAzimuthAngle, spherical.theta)\r\n        );\r\n\r\n        // restrict phi to be between desired limits\r\n        spherical.phi = Math.max(\r\n          scope.minPolarAngle,\r\n          Math.min(scope.maxPolarAngle, spherical.phi)\r\n        );\r\n\r\n        spherical.makeSafe();\r\n\r\n        spherical.radius *= scale;\r\n\r\n        // restrict radius to be between desired limits\r\n        spherical.radius = Math.max(\r\n          scope.minDistance,\r\n          Math.min(scope.maxDistance, spherical.radius)\r\n        );\r\n\r\n        // move target to panned location\r\n        scope.target.add(panOffset);\r\n\r\n        offset.setFromSpherical(spherical);\r\n\r\n        // rotate offset back to \"camera-up-vector-is-up\" space\r\n        offset.applyQuaternion(quatInverse);\r\n\r\n        position.copy(scope.target).add(offset);\r\n\r\n        scope.object.lookAt(scope.target);\r\n\r\n        if (scope.enableDamping === true) {\r\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\r\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\r\n        } else {\r\n          sphericalDelta.set(0, 0, 0);\r\n        }\r\n\r\n        scale = 1;\r\n        panOffset.set(0, 0, 0);\r\n\r\n        // update condition is:\r\n        // min(camera displacement, camera rotation in radians)^2 > EPS\r\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\r\n\r\n        if (\r\n          zoomChanged ||\r\n          lastPosition.distanceToSquared(scope.object.position) > EPS ||\r\n          8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS\r\n        ) {\r\n          scope.dispatchEvent(changeEvent);\r\n\r\n          lastPosition.copy(scope.object.position);\r\n          lastQuaternion.copy(scope.object.quaternion);\r\n          zoomChanged = false;\r\n\r\n          return true;\r\n        }\r\n\r\n        return false;\r\n      };\r\n    })();\r\n\r\n    this.dispose = function() {\r\n      scope.domElement.removeEventListener(\"contextmenu\", onContextMenu, false);\r\n      scope.domElement.removeEventListener(\"mousedown\", onMouseDown, false);\r\n      scope.domElement.removeEventListener(\"wheel\", onMouseWheel, false);\r\n\r\n      scope.domElement.removeEventListener(\"touchstart\", onTouchStart, false);\r\n      scope.domElement.removeEventListener(\"touchend\", onTouchEnd, false);\r\n      scope.domElement.removeEventListener(\"touchmove\", onTouchMove, false);\r\n\r\n      document.removeEventListener(\"mousemove\", onMouseMove, false);\r\n      document.removeEventListener(\"mouseup\", onMouseUp, false);\r\n\r\n      window.removeEventListener(\"keydown\", onKeyDown, false);\r\n\r\n      //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\r\n    };\r\n\r\n    //\r\n    // internals\r\n    //\r\n\r\n    var scope = this;\r\n\r\n    var changeEvent = { type: \"change\" };\r\n    var startEvent = { type: \"start\" };\r\n    var endEvent = { type: \"end\" };\r\n\r\n    var STATE = {\r\n      NONE: -1,\r\n      ROTATE: 0,\r\n      DOLLY: 1,\r\n      PAN: 2,\r\n      TOUCH_ROTATE: 3,\r\n      TOUCH_DOLLY: 4,\r\n      TOUCH_PAN: 5\r\n    };\r\n\r\n    var state = STATE.NONE;\r\n\r\n    var EPS = 0.000001;\r\n\r\n    // current position in spherical coordinates\r\n    var spherical = new THREE.Spherical();\r\n    var sphericalDelta = new THREE.Spherical();\r\n\r\n    var scale = 1;\r\n    var panOffset = new THREE.Vector3();\r\n    var zoomChanged = false;\r\n\r\n    var rotateStart = new THREE.Vector2();\r\n    var rotateEnd = new THREE.Vector2();\r\n    var rotateDelta = new THREE.Vector2();\r\n\r\n    var panStart = new THREE.Vector2();\r\n    var panEnd = new THREE.Vector2();\r\n    var panDelta = new THREE.Vector2();\r\n\r\n    var dollyStart = new THREE.Vector2();\r\n    var dollyEnd = new THREE.Vector2();\r\n    var dollyDelta = new THREE.Vector2();\r\n\r\n    function getAutoRotationAngle() {\r\n      return ((2 * Math.PI) / 60 / 60) * scope.autoRotateSpeed;\r\n    }\r\n\r\n    function getZoomScale() {\r\n      return Math.pow(0.95, scope.zoomSpeed);\r\n    }\r\n\r\n    function rotateLeft(angle) {\r\n      sphericalDelta.theta -= angle;\r\n    }\r\n\r\n    function rotateUp(angle) {\r\n      sphericalDelta.phi -= angle;\r\n    }\r\n\r\n    var panLeft = (function() {\r\n      var v = new THREE.Vector3();\r\n\r\n      return function panLeft(distance, objectMatrix) {\r\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\r\n        v.multiplyScalar(-distance);\r\n\r\n        panOffset.add(v);\r\n      };\r\n    })();\r\n\r\n    var panUp = (function() {\r\n      var v = new THREE.Vector3();\r\n\r\n      return function panUp(distance, objectMatrix) {\r\n        v.setFromMatrixColumn(objectMatrix, 1); // get Y column of objectMatrix\r\n        v.multiplyScalar(distance);\r\n\r\n        panOffset.add(v);\r\n      };\r\n    })();\r\n\r\n    // deltaX and deltaY are in pixels; right and down are positive\r\n    var pan = (function() {\r\n      var offset = new THREE.Vector3();\r\n\r\n      return function pan(deltaX, deltaY) {\r\n        var element =\r\n          scope.domElement === document\r\n            ? scope.domElement.body\r\n            : scope.domElement;\r\n\r\n        if (scope.object instanceof THREE.PerspectiveCamera) {\r\n          // perspective\r\n          var position = scope.object.position;\r\n          offset.copy(position).sub(scope.target);\r\n          var targetDistance = offset.length();\r\n\r\n          // half of the fov is center to top of screen\r\n          targetDistance *= Math.tan(\r\n            ((scope.object.fov / 2) * Math.PI) / 180.0\r\n          );\r\n\r\n          // we actually don't use screenWidth, since perspective camera is fixed to screen height\r\n          panLeft(\r\n            (2 * deltaX * targetDistance) / element.clientHeight,\r\n            scope.object.matrix\r\n          );\r\n          panUp(\r\n            (2 * deltaY * targetDistance) / element.clientHeight,\r\n            scope.object.matrix\r\n          );\r\n        } else if (scope.object instanceof THREE.OrthographicCamera) {\r\n          // orthographic\r\n          panLeft(\r\n            (deltaX * (scope.object.right - scope.object.left)) /\r\n              scope.object.zoom /\r\n              element.clientWidth,\r\n            scope.object.matrix\r\n          );\r\n          panUp(\r\n            (deltaY * (scope.object.top - scope.object.bottom)) /\r\n              scope.object.zoom /\r\n              element.clientHeight,\r\n            scope.object.matrix\r\n          );\r\n        } else {\r\n          // camera neither orthographic nor perspective\r\n          console.warn(\r\n            \"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\"\r\n          );\r\n          scope.enablePan = false;\r\n        }\r\n      };\r\n    })();\r\n\r\n    // Expose panning for external usage\r\n    this.pan = pan;\r\n\r\n    function dollyIn(dollyScale) {\r\n      if (scope.object instanceof THREE.PerspectiveCamera) {\r\n        scale /= dollyScale;\r\n      } else if (scope.object instanceof THREE.OrthographicCamera) {\r\n        scope.object.zoom = Math.max(\r\n          scope.minZoom,\r\n          Math.min(scope.maxZoom, scope.object.zoom * dollyScale)\r\n        );\r\n        scope.object.updateProjectionMatrix();\r\n        zoomChanged = true;\r\n      } else {\r\n        console.warn(\r\n          \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\r\n        );\r\n        scope.enableZoom = false;\r\n      }\r\n    }\r\n\r\n    function dollyOut(dollyScale) {\r\n      if (scope.object instanceof THREE.PerspectiveCamera) {\r\n        scale *= dollyScale;\r\n      } else if (scope.object instanceof THREE.OrthographicCamera) {\r\n        scope.object.zoom = Math.max(\r\n          scope.minZoom,\r\n          Math.min(scope.maxZoom, scope.object.zoom / dollyScale)\r\n        );\r\n        scope.object.updateProjectionMatrix();\r\n        zoomChanged = true;\r\n      } else {\r\n        console.warn(\r\n          \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\r\n        );\r\n        scope.enableZoom = false;\r\n      }\r\n    }\r\n\r\n    //\r\n    // event callbacks - update the object state\r\n    //\r\n\r\n    function handleMouseDownRotate(event) {\r\n      //console.log( 'handleMouseDownRotate' );\r\n\r\n      rotateStart.set(event.clientX, event.clientY);\r\n    }\r\n\r\n    function handleMouseDownDolly(event) {\r\n      //console.log( 'handleMouseDownDolly' );\r\n\r\n      dollyStart.set(event.clientX, event.clientY);\r\n    }\r\n\r\n    function handleMouseDownPan(event) {\r\n      //console.log( 'handleMouseDownPan' );\r\n\r\n      panStart.set(event.clientX, event.clientY);\r\n    }\r\n\r\n    function handleMouseMoveRotate(event) {\r\n      //console.log( 'handleMouseMoveRotate' );\r\n\r\n      rotateEnd.set(event.clientX, event.clientY);\r\n      rotateDelta.subVectors(rotateEnd, rotateStart);\r\n\r\n      var element =\r\n        scope.domElement === document\r\n          ? scope.domElement.body\r\n          : scope.domElement;\r\n\r\n      // rotating across whole screen goes 360 degrees around\r\n      rotateLeft(\r\n        ((2 * Math.PI * rotateDelta.x) / element.clientWidth) *\r\n          scope.rotateSpeed\r\n      );\r\n\r\n      // rotating up and down along whole screen attempts to go 360, but limited to 180\r\n      rotateUp(\r\n        ((2 * Math.PI * rotateDelta.y) / element.clientHeight) *\r\n          scope.rotateSpeed\r\n      );\r\n\r\n      rotateStart.copy(rotateEnd);\r\n\r\n      scope.update();\r\n    }\r\n\r\n    function handleMouseMoveDolly(event) {\r\n      //console.log( 'handleMouseMoveDolly' );\r\n\r\n      dollyEnd.set(event.clientX, event.clientY);\r\n\r\n      dollyDelta.subVectors(dollyEnd, dollyStart);\r\n\r\n      if (dollyDelta.y > 0) {\r\n        dollyIn(getZoomScale());\r\n      } else if (dollyDelta.y < 0) {\r\n        dollyOut(getZoomScale());\r\n      }\r\n\r\n      dollyStart.copy(dollyEnd);\r\n\r\n      scope.update();\r\n    }\r\n\r\n    function handleMouseMovePan(event) {\r\n      //console.log( 'handleMouseMovePan' );\r\n\r\n      panEnd.set(event.clientX, event.clientY);\r\n\r\n      panDelta.subVectors(panEnd, panStart);\r\n\r\n      pan(panDelta.x, panDelta.y);\r\n\r\n      panStart.copy(panEnd);\r\n\r\n      scope.update();\r\n    }\r\n\r\n    function handleMouseUp(event) {\r\n      //console.log( 'handleMouseUp' );\r\n    }\r\n\r\n    function handleMouseWheel(event) {\r\n      //console.log( 'handleMouseWheel' );\r\n\r\n      if (event.deltaY < 0) {\r\n        dollyOut(getZoomScale());\r\n      } else if (event.deltaY > 0) {\r\n        dollyIn(getZoomScale());\r\n      }\r\n\r\n      scope.update();\r\n    }\r\n\r\n    function handleKeyUp(event) {\r\n      switch (event.keyCode) {\r\n        case scope.keys.SPACE:\r\n          if (scope.spacePan == true) {\r\n            scope.spacePanStart = false;\r\n            state = STATE.NONE;\r\n          }\r\n          break;\r\n      }\r\n    }\r\n\r\n    function handleKeyDown(event) {\r\n      //console.log( 'handleKeyDown' );\r\n\r\n      switch (event.keyCode) {\r\n        case scope.keys.UP:\r\n          pan(0, scope.keyPanSpeed);\r\n          scope.update();\r\n          break;\r\n\r\n        case scope.keys.BOTTOM:\r\n          pan(0, -scope.keyPanSpeed);\r\n          scope.update();\r\n          break;\r\n\r\n        case scope.keys.LEFT:\r\n          pan(scope.keyPanSpeed, 0);\r\n          scope.update();\r\n          break;\r\n\r\n        case scope.keys.RIGHT:\r\n          pan(-scope.keyPanSpeed, 0);\r\n          scope.update();\r\n          break;\r\n\r\n        case scope.keys.SPACE:\r\n          if (scope.spacePan == true) {\r\n            scope.spacePanStart = true;\r\n            state = STATE.PAN;\r\n          }\r\n          break;\r\n      }\r\n    }\r\n\r\n    function handleTouchStartRotate(event) {\r\n      //console.log( 'handleTouchStartRotate' );\r\n\r\n      rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\r\n    }\r\n\r\n    function handleTouchStartDolly(event) {\r\n      //console.log( 'handleTouchStartDolly' );\r\n\r\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\r\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\r\n\r\n      var distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n      dollyStart.set(0, distance);\r\n    }\r\n\r\n    function handleTouchStartPan(event) {\r\n      //console.log( 'handleTouchStartPan' );\r\n\r\n      panStart.set(event.touches[0].pageX, event.touches[0].pageY);\r\n    }\r\n\r\n    function handleTouchMoveRotate(event) {\r\n      //console.log( 'handleTouchMoveRotate' );\r\n\r\n      rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\r\n      rotateDelta.subVectors(rotateEnd, rotateStart);\r\n\r\n      var element =\r\n        scope.domElement === document\r\n          ? scope.domElement.body\r\n          : scope.domElement;\r\n\r\n      // rotating across whole screen goes 360 degrees around\r\n      rotateLeft(\r\n        ((2 * Math.PI * rotateDelta.x) / element.clientWidth) *\r\n          scope.rotateSpeed\r\n      );\r\n\r\n      // rotating up and down along whole screen attempts to go 360, but limited to 180\r\n      rotateUp(\r\n        ((2 * Math.PI * rotateDelta.y) / element.clientHeight) *\r\n          scope.rotateSpeed\r\n      );\r\n\r\n      rotateStart.copy(rotateEnd);\r\n\r\n      scope.update();\r\n    }\r\n\r\n    function handleTouchMoveDolly(event) {\r\n      //console.log( 'handleTouchMoveDolly' );\r\n\r\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\r\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\r\n\r\n      var distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n      dollyEnd.set(0, distance);\r\n\r\n      dollyDelta.subVectors(dollyEnd, dollyStart);\r\n\r\n      if (dollyDelta.y > 0) {\r\n        dollyOut(getZoomScale());\r\n      } else if (dollyDelta.y < 0) {\r\n        dollyIn(getZoomScale());\r\n      }\r\n\r\n      dollyStart.copy(dollyEnd);\r\n\r\n      scope.update();\r\n    }\r\n\r\n    function handleTouchMovePan(event) {\r\n      //console.log( 'handleTouchMovePan' );\r\n\r\n      panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\r\n\r\n      panDelta.subVectors(panEnd, panStart);\r\n\r\n      pan(panDelta.x, panDelta.y);\r\n\r\n      panStart.copy(panEnd);\r\n\r\n      scope.update();\r\n    }\r\n\r\n    function handleTouchEnd(event) {\r\n      //console.log( 'handleTouchEnd' );\r\n    }\r\n\r\n    //\r\n    // event handlers - FSM: listen for events and reset state\r\n    //\r\n\r\n    function onMouseDown(event) {\r\n      if (scope.enabled === false) return;\r\n\r\n      event.preventDefault();\r\n\r\n      if (event.button === scope.mouseButtons.ORBIT) {\r\n        if (scope.enableRotate === false) return;\r\n\r\n        handleMouseDownRotate(event);\r\n\r\n        state = STATE.ROTATE;\r\n      } else if (event.button === scope.mouseButtons.ZOOM) {\r\n        if (scope.enableZoom === false) return;\r\n\r\n        handleMouseDownDolly(event);\r\n\r\n        state = STATE.DOLLY;\r\n      } else if (event.button === scope.mouseButtons.PAN) {\r\n        if (scope.enablePan === false) return;\r\n\r\n        if (!scope.spacePan || scope.bothPan) {\r\n          handleMouseDownPan(event);\r\n\r\n          state = STATE.PAN;\r\n        }\r\n      }\r\n\r\n      if (state !== STATE.NONE) {\r\n        document.addEventListener(\"mousemove\", onMouseMove, false);\r\n        document.addEventListener(\"mouseup\", onMouseUp, false);\r\n\r\n        scope.dispatchEvent(startEvent);\r\n      }\r\n    }\r\n\r\n    function onMouseMove(event) {\r\n      if (scope.enabled === false) return;\r\n\r\n      event.preventDefault();\r\n\r\n      if (state === STATE.ROTATE) {\r\n        if (scope.enableRotate === false) return;\r\n\r\n        handleMouseMoveRotate(event);\r\n      } else if (state === STATE.DOLLY) {\r\n        if (scope.enableZoom === false) return;\r\n\r\n        handleMouseMoveDolly(event);\r\n      } else if (state === STATE.PAN) {\r\n        if (scope.enablePan === false) return;\r\n\r\n        if (scope.spacePan == true) {\r\n          if (scope.spacePanStart == true) {\r\n            handleMouseDownPan(event);\r\n            scope.spacePanStart = false;\r\n          }\r\n        }\r\n\r\n        handleMouseMovePan(event);\r\n      }\r\n    }\r\n\r\n    function onMouseUp(event) {\r\n      if (scope.enabled === false) return;\r\n\r\n      handleMouseUp(event);\r\n\r\n      //document.removeEventListener( 'mousemove', onMouseMove, false );\r\n      document.removeEventListener(\"mouseup\", onMouseUp, false);\r\n\r\n      scope.dispatchEvent(endEvent);\r\n\r\n      state = STATE.NONE;\r\n    }\r\n\r\n    function onMouseWheel(event) {\r\n      if (\r\n        scope.enabled === false ||\r\n        scope.enableZoom === false ||\r\n        (state !== STATE.NONE && state !== STATE.ROTATE)\r\n      )\r\n        return;\r\n\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n\r\n      handleMouseWheel(event);\r\n\r\n      scope.dispatchEvent(startEvent); // not sure why these are here...\r\n      scope.dispatchEvent(endEvent);\r\n    }\r\n\r\n    function onKeyDown(event) {\r\n      if (\r\n        scope.enabled === false ||\r\n        scope.enableKeys === false ||\r\n        scope.enablePan === false\r\n      )\r\n        return;\r\n\r\n      document.addEventListener(\"mousemove\", onMouseMove, false);\r\n\r\n      handleKeyDown(event);\r\n    }\r\n\r\n    function onKeyUp(event) {\r\n      if (\r\n        scope.enabled === false ||\r\n        scope.enableKeys === false ||\r\n        scope.enablePan === false\r\n      )\r\n        return;\r\n\r\n      handleKeyUp(event);\r\n    }\r\n\r\n    function onTouchStart(event) {\r\n      if (scope.enabled === false) return;\r\n\r\n      switch (event.touches.length) {\r\n        case 1: // one-fingered touch: rotate\r\n          if (scope.enableRotate === false) return;\r\n\r\n          handleTouchStartRotate(event);\r\n\r\n          state = STATE.TOUCH_ROTATE;\r\n\r\n          break;\r\n\r\n        case 2: // two-fingered touch: dolly\r\n          if (scope.enableZoom === false) return;\r\n\r\n          handleTouchStartDolly(event);\r\n\r\n          state = STATE.TOUCH_DOLLY;\r\n\r\n          break;\r\n\r\n        case 3: // three-fingered touch: pan\r\n          if (scope.enablePan === false) return;\r\n\r\n          handleTouchStartPan(event);\r\n\r\n          state = STATE.TOUCH_PAN;\r\n\r\n          break;\r\n\r\n        default:\r\n          state = STATE.NONE;\r\n      }\r\n\r\n      if (state !== STATE.NONE) {\r\n        scope.dispatchEvent(startEvent);\r\n      }\r\n    }\r\n\r\n    function onTouchMove(event) {\r\n      if (scope.enabled === false) return;\r\n\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n\r\n      switch (event.touches.length) {\r\n        case 1: // one-fingered touch: rotate\r\n          if (scope.enableRotate === false) return;\r\n          if (state !== STATE.TOUCH_ROTATE) return; // is this needed?...\r\n\r\n          handleTouchMoveRotate(event);\r\n\r\n          break;\r\n\r\n        case 2: // two-fingered touch: dolly\r\n          if (scope.enableZoom === false) return;\r\n          if (state !== STATE.TOUCH_DOLLY) return; // is this needed?...\r\n\r\n          handleTouchMoveDolly(event);\r\n\r\n          break;\r\n\r\n        case 3: // three-fingered touch: pan\r\n          if (scope.enablePan === false) return;\r\n          if (state !== STATE.TOUCH_PAN) return; // is this needed?...\r\n\r\n          handleTouchMovePan(event);\r\n\r\n          break;\r\n\r\n        default:\r\n          state = STATE.NONE;\r\n      }\r\n    }\r\n\r\n    function onTouchEnd(event) {\r\n      if (scope.enabled === false) return;\r\n\r\n      handleTouchEnd(event);\r\n\r\n      scope.dispatchEvent(endEvent);\r\n\r\n      state = STATE.NONE;\r\n    }\r\n\r\n    function onContextMenu(event) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    //\r\n\r\n    scope.domElement.addEventListener(\"contextmenu\", onContextMenu, false);\r\n\r\n    scope.domElement.addEventListener(\"mousedown\", onMouseDown, false);\r\n    scope.domElement.addEventListener(\"wheel\", onMouseWheel, false);\r\n\r\n    scope.domElement.addEventListener(\"touchstart\", onTouchStart, false);\r\n    scope.domElement.addEventListener(\"touchend\", onTouchEnd, false);\r\n    scope.domElement.addEventListener(\"touchmove\", onTouchMove, false);\r\n\r\n    window.addEventListener(\"keydown\", onKeyDown, false);\r\n    window.addEventListener(\"keyup\", onKeyUp, false);\r\n\r\n    // force an update at start\r\n\r\n    this.update();\r\n  }\r\n\r\n  OrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype);\r\n  OrbitControls.prototype.constructor = OrbitControls;\r\n\r\n  Object.defineProperties(OrbitControls.prototype, {\r\n    center: {\r\n      get: function() {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .center has been renamed to .target\"\r\n        );\r\n        return this.target;\r\n      }\r\n    },\r\n\r\n    // backward compatibility\r\n\r\n    noZoom: {\r\n      get: function() {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.\"\r\n        );\r\n        return !this.enableZoom;\r\n      },\r\n\r\n      set: function(value) {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.\"\r\n        );\r\n        this.enableZoom = !value;\r\n      }\r\n    },\r\n\r\n    noRotate: {\r\n      get: function() {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.\"\r\n        );\r\n        return !this.enableRotate;\r\n      },\r\n\r\n      set: function(value) {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.\"\r\n        );\r\n        this.enableRotate = !value;\r\n      }\r\n    },\r\n\r\n    noPan: {\r\n      get: function() {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.\"\r\n        );\r\n        return !this.enablePan;\r\n      },\r\n\r\n      set: function(value) {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.\"\r\n        );\r\n        this.enablePan = !value;\r\n      }\r\n    },\r\n\r\n    noKeys: {\r\n      get: function() {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.\"\r\n        );\r\n        return !this.enableKeys;\r\n      },\r\n\r\n      set: function(value) {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.\"\r\n        );\r\n        this.enableKeys = !value;\r\n      }\r\n    },\r\n\r\n    staticMoving: {\r\n      get: function() {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.\"\r\n        );\r\n        return !this.enableDamping;\r\n      },\r\n\r\n      set: function(value) {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.\"\r\n        );\r\n        this.enableDamping = !value;\r\n      }\r\n    },\r\n\r\n    dynamicDampingFactor: {\r\n      get: function() {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.\"\r\n        );\r\n        return this.dampingFactor;\r\n      },\r\n\r\n      set: function(value) {\r\n        console.warn(\r\n          \"THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.\"\r\n        );\r\n        this.dampingFactor = value;\r\n      }\r\n    }\r\n  });\r\n\r\n  return OrbitControls;\r\n};\r\n","var def = require(\"../imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\n\r\nmodule.exports = function(self) {\r\n  /**\r\n   * Calculates coordinates of mouse on canvas adjusted for padding\r\n   * @param {*} event\r\n   * @param {*} currentElement\r\n   */\r\n  self.relMouseCoords = function(event, currentElement) {\r\n    var totalOffsetX = 0;\r\n    var totalOffsetY = 0;\r\n    var canvasX = 0;\r\n    var canvasY = 0;\r\n\r\n    do {\r\n      totalOffsetX += currentElement.offsetLeft - currentElement.scrollLeft;\r\n      totalOffsetY += currentElement.offsetTop - currentElement.scrollTop;\r\n    } while ((currentElement = currentElement.offsetParent));\r\n\r\n    canvasX = event.pageX - totalOffsetX;\r\n    canvasY = event.pageY - totalOffsetY;\r\n\r\n    return { x: canvasX, y: canvasY };\r\n  };\r\n\r\n  /**\r\n   * Add metadata to node\r\n   * @param {*} node\r\n   */\r\n  self.prepNode = function(node) {\r\n    let nodeToAdd = node;\r\n    if (!node.data) {\r\n      node.data = {};\r\n    }\r\n    nodeToAdd.renderData = {\r\n      label: node.data.label || \"No Label\",\r\n      color: node.data.color || def.NODE_COLOR,\r\n      hcolor: node.data.hcolor || def.NODE_HIGHLIGHT,\r\n      shape: node.data.shape || def.NODE_SHAPE,\r\n      linecolor: new THREE.Color(0.5, 0.5, 0.5),\r\n      numYeast: Math.ceil(Math.random() * 8),\r\n      size: node.data.size,\r\n      tsize: node.data.tsize || def.TEXT_SIZE,\r\n      x: 0,\r\n      y: 0,\r\n      vx: 0,\r\n      vy: 0\r\n    };\r\n    return nodeToAdd;\r\n  };\r\n\r\n  /**\r\n   * Creates a generic rectangle shape to use for selection and boundaries\r\n   */\r\n  self.make1x1Rect = function() {\r\n    var rectShape = new THREE.Shape();\r\n    rectShape.moveTo(0, 0);\r\n    rectShape.lineTo(0, 1);\r\n    rectShape.lineTo(1, 1);\r\n    rectShape.lineTo(1, 0);\r\n    rectShape.lineTo(0, 0);\r\n    rectShape.lineTo(0, 1);\r\n    return new THREE.ShapeGeometry(rectShape);\r\n  };\r\n\r\n  /**\r\n   * Creates a centered 2x2 Rectangle\r\n   */\r\n  self.make2x2Rect = function() {\r\n    var rectShape = new THREE.Shape();\r\n    rectShape.moveTo(-1, -1);\r\n    rectShape.lineTo(-1, 1);\r\n    rectShape.lineTo(1, 1);\r\n    rectShape.lineTo(1, -1);\r\n    rectShape.lineTo(-1, -1);\r\n    return new THREE.ShapeGeometry(rectShape);\r\n  };\r\n\r\n  /**\r\n   *  find radius of circle given the volume\r\n   * @param {*} volume\r\n   */\r\n  self.volToRadius = function(volume) {\r\n    return Math.pow((volume / Math.PI) * (3.0 / 4.0), 1.0 / 3.0);\r\n  };\r\n};\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\n\r\nmodule.exports = function(self) {\r\n  /**\r\n   * Creates or converts ngraph or d3 graph\r\n   */\r\n  self.setupGraph = function() {\r\n    var createNGraph = require(\"ngraph.graph\");\r\n    self.graph = createNGraph();\r\n    if (self.inGraph) {\r\n      self.updateGraph(self.inGraph);\r\n    }\r\n  };\r\n\r\n  /**\r\n   *  Create layout using d3\r\n   */\r\n  self.setupLayout = function() {\r\n    if (self.options.layout == \"ngraph\") {\r\n      self.setupNgraphLayout();\r\n    } else if (self.options.layout == \"d3\") {\r\n      self.setupD3Layout();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Set graph layout to ngraph\r\n   */\r\n  self.setupNgraphLayout = function() {\r\n    self.force = require(\"ngraph.forcelayout\")(self.graph);\r\n  };\r\n\r\n  /**\r\n   * Set graph layout to D3 Force Directed and set decay parameters\r\n   */\r\n  self.setupD3Layout = function() {\r\n    self.force = d3\r\n      .forceSimulation()\r\n      .force(\"charge\", d3.forceManyBody().strength(-1))\r\n      .force(\"link\", d3.forceLink())\r\n      .force(\"y\", d3.forceY(0).strength(0.001))\r\n      .force(\"x\", d3.forceX(0).strength(0.001))\r\n      .stop();\r\n\r\n    // set alpha decay to be lower than the default 0.0228\r\n    // so force layout does not prematurely stop\r\n    self.force.alphaDecay(0.005);\r\n\r\n    // set velocity decay to be lower than the default 0.4\r\n    // so nodes move to their final locations\r\n    self.force.velocityDecay(0.1);\r\n  };\r\n\r\n  self.setDisplayParams = function() {\r\n    self.element = document.getElementById(\"graph-container\");\r\n    self.clientRect = self.element.getBoundingClientRect();\r\n    self.width = self.clientRect.width;\r\n    self.height = self.clientRect.height;\r\n    self.aspect = self.width / self.height;\r\n    self.resolution = new THREE.Vector2(self.width, self.height);\r\n  };\r\n\r\n  self.setRendererParams = function() {\r\n    self.renderer.setSize(self.width, self.height);\r\n    self.cssRenderer = new THREE.CSS3DRenderer();\r\n    self.cssRenderer.setSize(self.width, self.height);\r\n    self.cssRenderer.domElement.style.position = \"absolute\";\r\n    self.cssRenderer.domElement.style.top = 0;\r\n    self.renderer.setPixelRatio(window.devicePixelRatio);\r\n  };\r\n\r\n  /**\r\n   *  Create initial camera and parameters\r\n   */\r\n  self.setupCamera = function() {\r\n    self.ccamera = new THREE.PerspectiveCamera(\r\n      self.fov,\r\n      self.width / self.height,\r\n      self.near,\r\n      self.far\r\n    );\r\n    self.ccamera.position.z = 200;\r\n    var controls = new OrbitControls(self.ccamera, self.element);\r\n    controls.spacePan = true; // Space bar panning\r\n    controls.bothPan = true; // Space bar and right click panning\r\n    controls.minDistance = 10;\r\n    controls.maxDistance = self.renderWidth * 2;\r\n    controls.target.set(0, 0, 0);\r\n    controls.enableRotate = false;\r\n    self.controls = controls;\r\n  };\r\n\r\n  /**\r\n   *  Create minimap\r\n   */\r\n  self.setupMinimap = function() {\r\n    self.minimap = {};\r\n    self.minimap.camera = new THREE.PerspectiveCamera(\r\n      self.fov,\r\n      1,\r\n      self.near,\r\n      self.far\r\n    );\r\n    self.minimap.camera.position.z = self.renderWidth * 2;\r\n\r\n    (self.oldCoords = {\r\n      x: null,\r\n      y: null,\r\n      z: null\r\n    }),\r\n      /**\r\n       * Pan the ccamera according to mouse position on screen (should be called only when mouse is on minimap)\r\n       * @param coordX mouse position on screen returned by relMouseCoords\r\n       * @param coordY mouse position on screen returned by relMouseCoords\r\n       */\r\n      (self.minimap.panToMousePosition = function(coordX, coordY) {\r\n        // ensures that the camera position is updated from the last pan.\r\n        if (\r\n          self.ccamera.position.x == self.oldCoords.x &&\r\n          self.ccamera.position.y == self.oldCoords.y &&\r\n          self.ccamera.position.z == self.oldCoords.z\r\n        ) {\r\n          return;\r\n        }\r\n\r\n        self.oldCoords.x = self.ccamera.position.x;\r\n        self.oldCoords.y = self.ccamera.position.y;\r\n        self.oldCoords.z = self.ccamera.position.z;\r\n\r\n        // 850 is an approximation\r\n        const coefficient = (self.height - 200) / self.ccamera.position.z;\r\n\r\n        self.controls.pan(\r\n          ((coordX / self.minimap.width) * 2000 -\r\n            1000 -\r\n            self.ccamera.position.x) *\r\n            -coefficient,\r\n          (((self.height - coordY) / self.minimap.height) * 2000 -\r\n            1000 -\r\n            self.ccamera.position.y) *\r\n            coefficient\r\n        );\r\n      });\r\n  };\r\n\r\n  /**\r\n   *  Create initial scene geometry and attributes\r\n   */\r\n  self.setupGeometry = function() {\r\n    self.scene = new THREE.Scene();\r\n\r\n    self.points = new THREE.BufferGeometry();\r\n    self.nodes = new THREE.Group();\r\n    self.scene.add(self.nodes);\r\n\r\n    if (def.LINES == \"fancy\") {\r\n      self.setupFancyEdges();\r\n    } else {\r\n      self.setUpSimpleEdges();\r\n    }\r\n\r\n    var rect = self.make1x1Rect();\r\n\r\n    self.setupSelectionBox(rect);\r\n    self.setupBoundaries(rect);\r\n    self.setupViewPort(rect);\r\n  };\r\n\r\n  /**\r\n   * Setup data structures for fancy edges\r\n   */\r\n  self.setupFancyEdges = function() {\r\n    self.edges = [];\r\n    self.edgeCount = 0;\r\n  };\r\n\r\n  /**\r\n   * Sets up data structures for simple edges\r\n   */\r\n  self.setUpSimpleEdges = function() {\r\n    self.edges = new THREE.BufferGeometry();\r\n    var material = new THREE.LineBasicMaterial({\r\n      linewidth: 2,\r\n      color: 0xffffff,\r\n      vertexColors: THREE.VertexColors,\r\n      shading: THREE.FlatShading\r\n    });\r\n    self.line = new THREE.LineSegments(self.edges, material);\r\n    self.line.frustumCulled = false;\r\n    self.scene.add(self.line);\r\n\r\n    var positions = new THREE.BufferAttribute(\r\n      new Float32Array(self.MAX_LINES * 3),\r\n      3\r\n    );\r\n    var colors = new THREE.BufferAttribute(\r\n      new Float32Array(self.MAX_LINES * 3),\r\n      3\r\n    );\r\n\r\n    self.edges.addAttribute(\"position\", positions);\r\n    self.edges.addAttribute(\"color\", colors);\r\n    self.drawCount = 0;\r\n  };\r\n\r\n  /**\r\n   * Adds box to screen that is displayed when selecting groups of nodes\r\n   */\r\n  self.setupSelectionBox = function(rect) {\r\n    self.selectBox = new THREE.Line(\r\n      rect,\r\n      new THREE.LineBasicMaterial({ linewidth: 3, color: 0x3399aa })\r\n    );\r\n    self.selectBox.visible = false;\r\n    self.scene.add(self.selectBox);\r\n  };\r\n\r\n  /**\r\n   * Sets boundaries for max edges of graph\r\n   */\r\n  self.setupBoundaries = function(rect) {\r\n    self.boundaries = new THREE.Line(\r\n      rect,\r\n      new THREE.LineBasicMaterial({ linewidth: 3, color: 0x999999 })\r\n    );\r\n    self.scene.add(self.boundaries);\r\n    self.setBoundarySize(self.renderWidth * 2);\r\n  };\r\n\r\n  /**\r\n   * Sets viewport to match size of display\r\n   */\r\n  self.setupViewPort = function(rect) {\r\n    self.viewPort = new THREE.Line(\r\n      rect,\r\n      new THREE.LineBasicMaterial({ linewidth: 3, color: self.darkMode? 0xffffff : 0x000000})\r\n    );\r\n    self.scene.add(self.viewPort);\r\n    self.setViewPortSize(self.ccamera);\r\n  };\r\n\r\n  /**\r\n   *  Creates listeners and events for selecting nodes\r\n   */\r\n  self.setupSelect = function() {\r\n    self.points.addAttribute(\r\n      \"position\",\r\n      new THREE.BufferAttribute(new Float32Array(20 * 3), 3)\r\n    );\r\n    self.points.computeBoundingSphere();\r\n    self.nodeCount = 0;\r\n    var mouseHandler = function(callback) {\r\n      return function(event) {\r\n        var coords = self.relMouseCoords(event, this);\r\n        var mouseX = (coords.x / self.width) * 2 - 1;\r\n        var mouseY = 1 - (coords.y / self.height) * 2;\r\n        var mousePosition = new THREE.Vector3(mouseX, mouseY, 1);\r\n        mousePosition.unproject(self.ccamera);\r\n        var dir = mousePosition.sub(self.ccamera.position).clone();\r\n        mousePosition.normalize();\r\n        // Determine whether mouse is on minimap\r\n        self.isMouseCoordinatesOnMinimap =\r\n          coords.x <= self.minimap.width &&\r\n          self.height - coords.y <= self.minimap.height;\r\n        if (self.isMouseCoordinatesOnMinimap) {\r\n          self.minimap.mouseX = coords.x;\r\n          self.minimap.mouseY = coords.y;\r\n        }\r\n\r\n        // Determine intersects\r\n        var raycaster = new THREE.Raycaster(\r\n          self.ccamera.position,\r\n          mousePosition\r\n        );\r\n\r\n        // Find real location of mouse\r\n        var distance = -self.ccamera.position.z / dir.z;\r\n        var pos = self.ccamera.position\r\n          .clone()\r\n          .add(dir.multiplyScalar(distance));\r\n\r\n        if (callback == self.onRightClick && event.which != 3) {\r\n          return;\r\n        }\r\n\r\n        if (\r\n          callback == self.onRightClick &&\r\n          event.target.getAttribute(\"contenteditable\")\r\n        ) {\r\n          event.target.focus();\r\n        } else {\r\n          event.preventDefault();\r\n          if (callback == self.onRightClick) {\r\n            self.onRightClickCoords(event);\r\n          }\r\n          self.callMouseHandler(raycaster, pos, callback);\r\n        }\r\n      };\r\n    };\r\n\r\n    //Add listeners to web page\r\n    self.setupMouseHandlers(mouseHandler);\r\n  };\r\n\r\n  /**\r\n   * Checks if a node has been clicked, and calls the appropriate mouse handler function\r\n   */\r\n  self.callMouseHandler = function(raycaster, pos, callback) {\r\n    var intersects = raycaster.intersectObjects(self.nodes.children);\r\n    if (intersects.length) {\r\n      // If a node has been clicked\r\n      var nodeIndex = intersects[0].object.index;\r\n      self.oldIntersect = nodeIndex;\r\n      callback(\r\n        self.graph.getNode(nodeIndex),\r\n        pos.x,\r\n        pos.y,\r\n        event.button,\r\n        event.ctrlKey\r\n      );\r\n    } else {\r\n      callback(null, pos.x, pos.y, event.button, event.ctrlKey);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Add Mouse Event Listeners to page\r\n   */\r\n  self.setupMouseHandlers = function(mouseHandler) {\r\n    self.element.addEventListener(\r\n      \"mousemove\",\r\n      mouseHandler(self.onMouseMove),\r\n      false\r\n    );\r\n    self.element.addEventListener(\r\n      \"mousedown\",\r\n      mouseHandler(self.onMouseDown),\r\n      false\r\n    );\r\n    self.element.addEventListener(\r\n      \"mouseup\",\r\n      mouseHandler(self.onMouseUp),\r\n      false\r\n    );\r\n    self.element.addEventListener(\r\n      \"mouseup\",\r\n      mouseHandler(self.onRightClick),\r\n      false\r\n    );\r\n  };\r\n};\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\nvar $ = require(\"jquery\");\r\n\r\nmodule.exports = function(self) {\r\n  self.addNode = function(node) {\r\n    self.graph.addNode(node.id, node.data);\r\n    var graphNode = self.graph.getNode(node.id);\r\n    graphNode.x = node.x;\r\n    graphNode.y = node.y;\r\n    graphNode.fx = node.fx;\r\n    graphNode.fy = node.fy;\r\n    graphNode.pinnedx = node.fx != undefined;\r\n    graphNode.pinnedy = node.fy != undefined;\r\n    self.prepNode(graphNode);\r\n    self.drawNode(graphNode);\r\n    graphNode.links = [];\r\n    self.layoutInit = true;\r\n    return graphNode;\r\n  };\r\n\r\n  self.removeNode = function(node) {\r\n    if (!node || !node.id) {\r\n      return;\r\n    }\r\n    self.removeGraphEdges(node);\r\n    self.undrawEdges(node);\r\n    self.nodes.remove(node.renderData.draw_object);\r\n    self.graph.removeNode(node.id);\r\n    self.undrawNode(node);\r\n    self.nodeCount -= 1;\r\n  };\r\n\r\n  self.removeGraphEdges = function(node) {\r\n    var nodeLinks = self.graph.getLinks(node.id);\r\n    if (nodeLinks) {\r\n      nodeLinks.forEach(function(edge) {\r\n        self.graph.removeLink(edge);\r\n      });\r\n    }\r\n  };\r\n\r\n  self.undrawNode = function(node) {\r\n    var nodes = self.force.nodes();\r\n    if (nodes) {\r\n      for (var i = 0; i < nodes.length; i++) {\r\n        if (nodes[i].id == node.id) {\r\n          self.scene.remove(nodes[i].renderData.draw_object);\r\n          nodes[i].renderData.textHolder.children[0].element.hidden = true;\r\n          nodes.splice(i, 1);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  self.undrawEdges = function(node) {\r\n    var positions = self.edges.attributes.position.array;\r\n    var colors = self.edges.attributes.color.array;\r\n    var killed = 0;\r\n    for (var i = 0; i - killed < self.lineIndices.length; i++) {\r\n      if (\r\n        self.lineIndices[i - killed].source.id == node.id ||\r\n        self.lineIndices[i - killed].target.id == node.id\r\n      ) {\r\n        for (var j = i - killed; j < self.lineIndices.length; j++) {\r\n          var k = j + 1;\r\n          if (k == self.lineIndices.length) {\r\n            positions[j * 6] = 0;\r\n            positions[j * 6 + 1] = 0;\r\n            positions[j * 6 + 3] = 0;\r\n            positions[j * 6 + 4] = 0;\r\n            colors[j * 6] = 255;\r\n            colors[j * 6 + 1] = 160;\r\n            colors[j * 6 + 2] = 80;\r\n            colors[j * 6 + 3] = 255;\r\n            colors[j * 6 + 4] = 160;\r\n            colors[j * 6 + 5] = 80;\r\n          } else {\r\n            self.lineIndices[j] = self.lineIndices[k];\r\n            self.lineObjects[j * 2] = self.lineObjects[k * 2];\r\n            self.lineObjects[j * 2 + 1] = self.lineObjects[k * 2 + 1];\r\n            positions[j * 6] = positions[k * 6];\r\n            positions[j * 6 + 1] = positions[k * 6 + 1];\r\n            positions[j * 6 + 3] = positions[k * 6 + 3];\r\n            positions[j * 6 + 4] = positions[k * 6 + 4];\r\n            colors[j * 6] = colors[k * 6];\r\n            colors[j * 6 + 1] = colors[k * 6 + 1];\r\n            colors[j * 6 + 2] = colors[k * 6 + 2];\r\n            colors[j * 6 + 3] = colors[k * 6 + 3];\r\n            colors[j * 6 + 4] = colors[k * 6 + 4];\r\n            colors[j * 6 + 5] = colors[k * 6 + 5];\r\n          }\r\n        }\r\n        self.lineIndices.pop();\r\n        self.lineObjects.pop();\r\n        self.lineObjects.pop();\r\n        self.drawCount -= 2;\r\n        killed += 1;\r\n      }\r\n    }\r\n    console.log(\"Deleted \" + killed.toString() + \" edges\");\r\n  };\r\n\r\n  self.getNode = function(node_id) {\r\n    return self.graph.getNode(node_id);\r\n  };\r\n\r\n  self.addEdge = function(source, target, visible = true) {\r\n    self.graph.addLink(source.id, target.id);\r\n    self.drawEdge(self.getNode(source.id), self.getNode(target.id), visible);\r\n  };\r\n\r\n  self.addNeighbors = function(node, neighbors) {\r\n    for (var i = 0; i < neighbors.length; i++) {\r\n      var newNode = neighbors[i];\r\n      self.addNode(newNode);\r\n      self.addEdge(node.id, newNode.id);\r\n    }\r\n  };\r\n\r\n  self.addNeighbors2 = function(node) {\r\n    self.removeFakes();\r\n    self.neighborHost = node;\r\n    node.pinnedx = true;\r\n    node.pinnedy = true;\r\n    var id = node.id;\r\n    var points = [];\r\n    for (var i = 0; i < 5; i++) {\r\n      id += 10000;\r\n      var newNode = $.extend(true, {}, node);\r\n      newNode.id = id;\r\n      newNode.data.label = i;\r\n      newNode.fx = node.x;\r\n      newNode.fy = node.y;\r\n      newNode.data.shape = node.renderData.shape;\r\n      self.fakeNodes.push(self.addNode(newNode));\r\n      self.addEdge(self.graph.getNode(node.id), self.graph.getNode(newNode.id));\r\n    }\r\n    self.lastNode = self.graph.getNode(id);\r\n  };\r\n\r\n  self.removeFakes = function(node = null) {\r\n    if (self.fakeNodes.length >= 3) {\r\n      for (var i = 0; i < 5; i++) {\r\n        if (i != node) {\r\n          self.removeNode(self.fakeNodes[i]);\r\n        }\r\n        self.fakeNodes[i].pinnedx = false;\r\n        self.fakeNodes[i].pinnedy = false;\r\n      }\r\n      self.fakeNodes = [];\r\n    }\r\n    if (self.neighborHost) {\r\n      self.neighborHost.pinnedx = false;\r\n      self.neighborHost.pinnedy = false;\r\n      self.neighborHost = null;\r\n    }\r\n  };\r\n};\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\n\r\nmodule.exports = function(self) {\r\n  /**\r\n   *  Change color of node edges\r\n   */\r\n  self.highlightNode = function(node, toggle, color = def.NODE_HIGHLIGHT) {\r\n    if (toggle) {\r\n      node.renderData.draw_object.children[0].material.color.setHex(color);\r\n      node.renderData.draw_object.children[0].visible = true;\r\n    } else {\r\n      node.renderData.draw_object.children[0].material.color.set(\r\n        node.renderData.hcolor\r\n      );\r\n      node.renderData.draw_object.children[0].visible = false;\r\n    }\r\n  };\r\n\r\n  /**\r\n   *  Highlight edges from and to a node and hide others\r\n   */\r\n  self.highlightEdges = function(node, toggle) {\r\n    const froms = [];\r\n    const tos = [];\r\n    for (var i = 0; i < self.selection.length; i++) {\r\n      for (var j = 0; j < self.selection[i].links.length; j++) {\r\n        froms.push(self.selection[i].links[j].fromId);\r\n        tos.push(self.selection[i].links[j].toId);\r\n      }\r\n    }\r\n    if (toggle) {\r\n      for (var i = 0; i < node.links.length; i++) {\r\n        froms.push(node.links[i].fromId);\r\n        tos.push(node.links[i].toId);\r\n      }\r\n      self.highlightNeighbors(node, froms, tos);\r\n    } else {\r\n      self.highlightNeighbors(node, froms, tos);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Highlight adjacent nodes\r\n   * \r\n   * Also highlights edges.\r\n   */\r\n  self.highlightNeighbors = function(node, froms, tos) {\r\n    self.graph.forEachNode(n => {\r\n      if (self.selection.indexOf(n) != -1 || n == node) {\r\n        // If the node is selected or the node is the node to be highlighted\r\n        self.colorNodeOpacity(n, 1);\r\n        self.colorNodeEdge(n, 0.5, 0.5);\r\n        for (var i = 0; i < n.linkObjs.length; i++) {\r\n          n.linkObjs[i].linecolor = n.renderData.linecolor;\r\n        }\r\n      } else if (\r\n        self.doHighlightNeighbors &&\r\n        (froms.indexOf(n.id) != -1 || tos.indexOf(n.id) != -1)\r\n      ) {\r\n        // If the node is not selected or highlighted and\r\n        // if the node is present in either froms or tos arrays\r\n        self.colorNodeOpacity(n, 1);\r\n        self.colorNodeEdge(n, 0.3, 0.9);\r\n      } else if (\r\n        !self.prevHighlights ||\r\n        self.prevHighlights.indexOf(n.id) == -1\r\n      ) {\r\n        self.colorNodeOpacity(n, 0.5);\r\n        self.colorNodeEdge(n, 0.3, 0.9);\r\n        self.highlightNode(n, false, def.ADJACENT_HIGHLIGHT);\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   *  Change color of node edges\r\n   */\r\n  self.colorNodeEdge = function(node, dc, c) {\r\n    node.renderData.linecolor.r = self.darkMode ? dc : c;\r\n    node.renderData.linecolor.g = self.darkMode ? dc : c;\r\n    node.renderData.linecolor.b = self.darkMode ? dc : c;\r\n  };\r\n\r\n  /**\r\n   *  Change node opacity\r\n   */\r\n  self.colorNodeOpacity = function(node, op) {\r\n    node.renderData.draw_object.material.opacity = op;\r\n  };\r\n};\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\nvar $ = require(\"jquery\");\r\n\r\nmodule.exports = function(self) {\r\n  self.selectNode = function(node) {\r\n    self.dragging = node;\r\n    self.selection = [node];\r\n    node.renderData.isSelected = true;\r\n    self.updateSelection(self.mouseX, self.mouseY);\r\n  };\r\n\r\n  /**\r\n   * Deselect nodes in selection list\r\n   */\r\n  self.clearSelection = function() {\r\n    for (var i = 0; i < self.selection.length; i++) {\r\n      self.selection[i].renderData.isSelected = false;\r\n      if (!def.NODE_NO_HIGHLIGHT) {\r\n        self.selection[i].renderData.draw_object.children[0].visible = false;\r\n      } else {\r\n        self.selection[i].renderData.draw_object.material.color.set(\r\n          new THREE.Color(self.selection[i].renderData.color)\r\n        );\r\n      }\r\n      self.selection[i].renderData.textHolder.children[0].element.hideme = true;\r\n    }\r\n    self.selection = [];\r\n  };\r\n\r\n  /**\r\n   *  Update positions of all objects in self.selection\r\n   *  based on diff between mouse position and self.dragging position\r\n   */\r\n  self.updateSelection = function(mouseX, mouseY) {\r\n    if (self.dragging) {\r\n      var diffx = mouseX - self.dragging.x;\r\n      var diffy = mouseY - self.dragging.y;\r\n    }\r\n    for (var i = 0; i < self.selection.length; i++) {\r\n      if (self.dragging) {\r\n        self.selection[i].x += diffx;\r\n        self.selection[i].y += diffy;\r\n        self.selection[i].fx = self.selection[i].x;\r\n        self.selection[i].fy = self.selection[i].y;\r\n        self.selection[i].pinnedx = true;\r\n        self.selection[i].pinnedy = true;\r\n      }\r\n      if (!def.NODE_NO_HIGHLIGHT) {\r\n        self.selection[i].renderData.draw_object.children[0].visible = true;\r\n      } else {\r\n        self.selection[i].renderData.draw_object.material.color.set(\r\n          new THREE.Color(self.selection[i].renderData.hcolor)\r\n        );\r\n      }\r\n      self.selection[\r\n        i\r\n      ].renderData.textHolder.children[0].element.hideme = false;\r\n    }\r\n  };\r\n\r\n  /**\r\n   *  Find any objects within the current box selection and add it to self.selection\r\n   */\r\n  self.checkSelection = function(mouseX, mouseY) {\r\n    if (!self.dragging) {\r\n      self.mouseEnd = new THREE.Vector3(mouseX, mouseY, 0);\r\n      if (self.mouseStart.x < self.mouseEnd.x) {\r\n        var left = self.mouseStart;\r\n        var right = self.mouseEnd;\r\n      } else {\r\n        var left = self.mouseEnd;\r\n        var right = self.mouseStart;\r\n      }\r\n\r\n      self.graph.forEachNode(function(node) {\r\n        let npos;\r\n        if (self.options.layout == \"ngraph\") {\r\n          npos = self.force.getNodePosition(node.id);\r\n        } else if (self.options.layout == \"d3\") {\r\n          npos = node;\r\n        }\r\n        if (self.insideBox(left, right, npos.x, npos.y)) {\r\n          self.selection.push(node);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   *  returns true if pos is in box with top left l and bottom right r\r\n   */\r\n  self.insideBox = function(l, r, posx, posy) {\r\n    return (\r\n      posx < r.x &&\r\n      posx > l.x &&\r\n      ((posy > r.y && posy < l.y) || (posy < r.y && posy > l.y))\r\n    );\r\n  };\r\n};\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\nvar $ = require(\"jquery\");\r\n\r\nmodule.exports = function(self) {\r\n  /**\r\n   * Mouse move event that selections nodes in selection box\r\n   */\r\n  self.onMouseMove = function(selection, mouseX, mouseY, button, ctrl) {\r\n    // check if left button is not down\r\n    self.mouseX = mouseX;\r\n    self.mouseY = mouseY;\r\n\r\n    if (self.leftMouseDown && self.mouseDown) {\r\n      // left-clicked empty space (i.e., not clicking a node)\r\n      if (!self.dragging && self.selection.indexOf(selection) == -1 && !ctrl) {\r\n        self.clearSelection();\r\n      }\r\n\r\n      if (!self.dragging) {\r\n        // add nodes enclosed by selection box into node selection\r\n        self.checkSelection(mouseX, mouseY);\r\n      }\r\n    }\r\n\r\n    if (self.selection.length > 0) {\r\n      // reactivate (in D3's terminology: reheat) the force layout\r\n      if (self.dragging) {\r\n        self.force.alpha(1);\r\n      }\r\n      // update position of nodes in selection\r\n      self.updateSelection(mouseX, mouseY);\r\n    }\r\n\r\n    if (!self.mouseDown) {\r\n      self.onHover(selection);\r\n      self.mouseStart = new THREE.Vector3(mouseX, mouseY, 0);\r\n    } else {\r\n      // if mouse is in minimap, do nothing else\r\n      if (self.isMouseCoordinatesOnMinimap) {\r\n        self.minimap.panToMousePosition(\r\n          self.minimap.mouseX,\r\n          self.minimap.mouseY\r\n        );\r\n        return;\r\n      }\r\n\r\n      // update selection box size/position\r\n      if (self.leftMouseDown && !self.dragging) {\r\n        if (self.showBox) {\r\n          self.selectBox.visible = true;\r\n          self.showBox = false;\r\n        }\r\n        self.selectBox.position.x = mouseX;\r\n        self.selectBox.position.y = mouseY;\r\n        var diffx = self.mouseStart.x - mouseX;\r\n        var diffy = self.mouseStart.y - mouseY;\r\n        self.selectBox.scale.set(diffx, diffy, 1);\r\n      } else {\r\n        self.selectBox.visible = false;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Mouse hover over node event that highlights the node and neighbors at mouse position\r\n   */\r\n  self.onHover = function(node) {\r\n    if (self.lastHover && self.selection.indexOf(self.lastHover) == -1) {\r\n      self.highlightNode(self.lastHover, false);\r\n      self.lastHover.renderData.textHolder.children[0].element.hideme = true;\r\n      self.highlightEdges(node, false);\r\n    }\r\n    self.lastHover = node;\r\n    if (node) {\r\n      self.highlightNode(node, true);\r\n      node.renderData.textHolder.children[0].element.hideme = false;\r\n      self.highlightEdges(node, true);\r\n    } else if (self.selection.length == 0) {\r\n      self.graph.forEachNode(n => {\r\n        self.colorNodeOpacity(n, 1);\r\n        self.colorNodeEdge(n, 0.5, 0.5);\r\n        self.highlightNode(n, false, def.ADJACENT_HIGHLIGHT);\r\n      });\r\n    }\r\n    if (self.prevHighlights != undefined) {\r\n      for (var i = 0; i < self.prevHighlights.length; i++) {\r\n        self.colorNodeOpacity(self.prevHighlights[i], 1);\r\n        self.highlightNode(self.prevHighlights[i], true, def.SEARCH_HIGHLIGHT);\r\n      }\r\n    }\r\n  };\r\n\r\n  // vars to get time at mouse press and time at mouse release\r\n  var startTime = 0;\r\n  var endTime = 0;\r\n  /**\r\n   * Mouse down event to start a selection box or start dragging a node\r\n   */\r\n  self.onMouseDown = function(selection, mouseX, mouseY, button, ctrl) {\r\n    // if mouse is in minimap, do nothing else\r\n    if (self.isMouseCoordinatesOnMinimap) {\r\n      self.mouseDown = true;\r\n      self.minimap.panToMousePosition(self.minimap.mouseX, self.minimap.mouseY);\r\n      return;\r\n    }\r\n    startTime = Date.now();\r\n    self.leftMouseDown = button == 0;\r\n    // left or right mouse button\r\n    if (button == 0 || button == 2) {\r\n      self.mouseDown = true;\r\n      self.mouseStart = new THREE.Vector3(mouseX, mouseY, 0);\r\n      if (button == 0 && !self.dragging) {\r\n        self.showBox = true;\r\n      }\r\n      if (self.selection.indexOf(selection) == -1 && !ctrl) {\r\n        for (var i = 0; i < self.selection.length; i++) {\r\n          self.selection[i].renderData.isSelected = false;\r\n          if (!def.NODE_NO_HIGHLIGHT) {\r\n            self.selection[\r\n              i\r\n            ].renderData.draw_object.children[0].visible = false;\r\n          } else {\r\n            self.selection[i].renderData.draw_object.material.color.set(\r\n              new THREE.Color(self.selection[i].renderData.color)\r\n            );\r\n          }\r\n          self.selection[\r\n            i\r\n          ].renderData.textHolder.children[0].element.hideme = true;\r\n        }\r\n        self.selection = [];\r\n      }\r\n      if (selection) {\r\n        self.dragging = selection;\r\n        if (!selection.renderData.isSelected) {\r\n          if (self.selection.indexOf(selection) == -1) {\r\n            self.selection.push(selection);\r\n          }\r\n          selection.renderData.isSelected = true;\r\n          self.updateSelection(mouseX, mouseY);\r\n        } else if (ctrl) {\r\n          self.selection.splice(self.selection.indexOf(selection), 1);\r\n          selection.renderData.isSelected = false;\r\n          if (!def.NODE_NO_HIGHLIGHT) {\r\n            selection.renderData.draw_object.children[0].visible = false;\r\n          } else {\r\n            selection.renderData.draw_object.material.color.set(\r\n              new THREE.Color(self.selection[i].renderData.color)\r\n            );\r\n          }\r\n          selection.renderData.textHolder.children[0].element.hideme = true;\r\n          self.dragging = null;\r\n        }\r\n      } else {\r\n        if (self.newNodeIds) {\r\n          self.highlightNodeIds([], true);\r\n          self.newNodeIds = undefined;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Mouse up event that closes selection flags and emits selection to Argo\r\n   */\r\n  self.onMouseUp = function(selection, mouseX, mouseY, button) {\r\n    endTime = Date.now();\r\n    self.mouseDown = false;\r\n    // Left or right mouse button\r\n    if (button == 0 || button == 2) {\r\n      self.showBox = false;\r\n      self.dragging = null;\r\n      self.selectBox.visible = false;\r\n\r\n      self.ee.emit(\"select-nodes\", self.selection);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Right click event to save right clicked node\r\n   */\r\n  self.onRightClick = function(selection) {\r\n    if (selection) {\r\n      self.rightClickedNode = selection;\r\n    }\r\n    if (self.neighborHost) {\r\n      var n = self.fakeNodes.indexOf(selection);\r\n      if (n != -1) {\r\n        self.removeFakes(n);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Right click event that emits context menu event to Argo\r\n   */\r\n  self.onRightClickCoords = function(event) {\r\n    // Don't show menu if dragging camera\r\n    if (endTime - startTime < 200) {\r\n      self.ee.emit(\"right-click\", {\r\n        pageX: event.pageX,\r\n        pageY: event.pageY\r\n      });\r\n    }\r\n  };\r\n};\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\n\r\nmodule.exports = function(self) {\r\n  /**\r\n   * Set all nodes to a size\r\n   */\r\n  self.setUniformNodeSize = function(s) {\r\n    self.graph.forEachNode(function(node) {\r\n      node.renderData.draw_object.scale.set(s, s, 1);\r\n      var hsize = 1 + def.HIGHLIGHT_SIZE / s;\r\n      node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Set all nodes to a size based on a value in the node's data\r\n   */\r\n  self.setNodeDataSize = function(dataValue) {\r\n    self.graph.forEachNode(function(node) {\r\n      dataVal = node.renderData[dataValue];\r\n      if (!dataVal) {\r\n        console.log(\"Data value does not exist\");\r\n      } else {\r\n        dataVal = Math.log(dataVal + 1);\r\n        node.renderData.draw_object.scale.set(dataVal, dataVal, 1);\r\n        var hsize = 1 + def.HIGHLIGHT_SIZE / dataVal;\r\n        node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Set all nodes to a color\r\n   */\r\n  self.setUniformNodeColor = function(hsvDegree) {\r\n    self.graph.forEachNode(function(node) {\r\n      node.renderData.draw_object.material.color.set(\r\n        new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 43%)\")\r\n      );\r\n      if (!def.NODE_NO_HIGHLIGHT) {\r\n        node.renderData.draw_object.children[0].material.color.set(\r\n          new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 63%)\")\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Set all nodes to a color based on a value in the node's data\r\n   */\r\n  self.setNodeDataColor = function(dataValue) {\r\n    var i = 0;\r\n    values = [];\r\n    min = null;\r\n    max = null;\r\n\r\n    self.graph.forEachNode(function(node) {\r\n      if ((dataVal = node.renderData[dataValue])) {\r\n        if (min == null) min = dataVal;\r\n        if (max == null) max = dataVal;\r\n        if (dataVal < min) min = dataVal;\r\n        else if (dataVal > max) max = dataVal;\r\n        values[i] = dataVal;\r\n        i += 1;\r\n      } else {\r\n        values[i] = -1;\r\n      }\r\n    });\r\n\r\n    i = 0;\r\n    self.graph.forEachNode(function(node) {\r\n      var hsvDegree;\r\n      if (values[i] == -1) {\r\n        hsvDegree = 0;\r\n      } else {\r\n        values[i] = (values[i] - min) / (max - min);\r\n        hsvDegree = values[i] * 120;\r\n      }\r\n      node.renderData.draw_object.material.color.set(\r\n        new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 48%)\")\r\n      );\r\n      if (!def.NODE_NO_HIGHLIGHT) {\r\n        node.renderData.draw_object.children[0].material.color.set(\r\n          new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 63%)\")\r\n        );\r\n      }\r\n      i++;\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Map a node attribute based on some mapping function\r\n   */\r\n  self.mapNodeAttributes = function(mapping, nodes = null) {\r\n    let val;\r\n    if (mapping[0] == \"degree\") {\r\n      val = node => (node.links ? node.links.length + 2 : 2);\r\n    } else if (mapping[0] == \"scalex\") {\r\n      val = node => node.renderData.draw_object.scale.x;\r\n    } else {\r\n      val = node => mapping[0];\r\n    }\r\n\r\n    let mod;\r\n    if (mapping[1] == \"volume\") {\r\n      mod = val => self.volToRadius(val);\r\n    } else if (mapping[1] == \"mult\") {\r\n      mod = val => val * mapping[3](val);\r\n    } else if (mapping[1] == \"add\") {\r\n      mod = val => val + mapping[3](val);\r\n    } else if (mapping[1] == \"log\") {\r\n      mod = val => Math.log(val);\r\n    } else {\r\n      mod = val => val;\r\n    }\r\n\r\n    let attr;\r\n    if (mapping[2] == \"scalexy\") {\r\n      attr = (node, val) => {\r\n        node.renderData.draw_object.scale.set(val, val, 1);\r\n        var hsize = 1 + def.HIGHLIGHT_SIZE / val;\r\n        node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\r\n      };\r\n    } else if (mapping[2] == \"edgeColorRed\") {\r\n      attr = (node, val) => {\r\n        node.renderData.linecolor.r = 1;\r\n        node.renderData.linecolor.b = 1 - val / 5;\r\n        node.renderData.linecolor.g = 1 - val / 5;\r\n      };\r\n    } else if (mapping[2] == \"edgeColorBlue\") {\r\n      attr = (node, val) => {\r\n        node.renderData.linecolor.b = 1;\r\n        node.renderData.linecolor.r = 1 - val / 5;\r\n        node.renderData.linecolor.g = 1 - val / 5;\r\n      };\r\n    } else if (mapping[2] == \"edgeColorGreen\") {\r\n      attr = (node, val) => {\r\n        node.renderData.linecolor.g = 1;\r\n        node.renderData.linecolor.b = 1 - val / 5;\r\n        node.renderData.linecolor.r = 1 - val / 5;\r\n      };\r\n    } else if (mapping[2] == \"nodeColorBlue\") {\r\n      attr = (node, val) => {\r\n        node.renderData.draw_object.material.color.b = 1;\r\n        node.renderData.draw_object.material.color.r = 1 - val / 5;\r\n        node.renderData.draw_object.material.color.g = 1 - val / 5;\r\n      };\r\n    } else if (mapping[2] == \"pinned\") {\r\n      attr = (node, val) => {\r\n        node.pinnedx = val;\r\n        node.pinnedy = val;\r\n      };\r\n    } else if (mapping[2] == \"labelSize\") {\r\n      attr = (node, val) => {\r\n        self.changeLabelFontSize(node, val);\r\n      };\r\n    } else if (mapping[2] == \"labelLength\") {\r\n      attr = (node, val) => {\r\n        self.changeLabelLength(node, val);\r\n      };\r\n    }\r\n\r\n    self.changeNodes(val, mod, attr, nodes);\r\n  };\r\n\r\n  /**\r\n   *  get attribute from node using function val\r\n   *  modify result with function mode\r\n   *  set node attribute with attr\r\n   */\r\n  self.changeNode = function(val, mod, attr, node) {\r\n    var v = val(node);\r\n    if (v != undefined) {\r\n      var r = mod(v);\r\n      if (r != undefined) {\r\n        attr(node, r);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   *  perform changeNode on many nodes\r\n   */\r\n  self.changeNodes = function(val, mod, attr, nodes = null) {\r\n    if (nodes == null) {\r\n      self.graph.forEachNode(function(node) {\r\n        self.changeNode(val, mod, attr, node);\r\n      });\r\n    } else {\r\n      for (var i = 0; i < nodes.length; i++) {\r\n        self.changeNode(val, mod, attr, nodes[i]);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Limit label size by (estimated) characters\r\n   * This is only accurate if the label is monospaced\r\n   */\r\n  self.changeLabelLength = function(node, numChars) {\r\n    node.renderData.textHolder.children[0].element.children[0].style.width =\r\n      numChars.toString() + \"ch\";\r\n  };\r\n\r\n  /**\r\n   * Limit label size by (estimated) characters\r\n   * This is only accurate if the label is monospaced\r\n   */\r\n  self.changeLabelFontSize = function(node, size, relativeSize = 1) {\r\n    size = size * relativeSize;\r\n    node.renderData.textHolder.children[0].element.children[0].style.fontSize =\r\n      size.toString() + \"rem\";\r\n  };\r\n\r\n  /**\r\n   * Change boundary size\r\n   */\r\n  self.setBoundarySize = function(size) {\r\n    self.renderWidth = size;\r\n    self.renderHeight = size;\r\n    self.boundaries.scale.set(size * 2, size * 2, 1);\r\n    self.boundaries.position.x = -size;\r\n    self.boundaries.position.y = -size;\r\n    self.controls.maxDistance = size * 2;\r\n    self.minimap.camera.position.z = self.renderWidth * 2;\r\n  };\r\n\r\n  /**\r\n   * Change viewport size\r\n   */\r\n  self.setViewPortSize = function(camera) {\r\n    var distance = self.ccamera.position.z;\r\n    var height =\r\n      Math.tan(((camera.fov * Math.PI) / 180) * 0.5) * distance * 2 + 5;\r\n    var width = height * camera.aspect + 5;\r\n    self.viewPort.scale.set(width, height, 1);\r\n    self.viewPort.position.x = camera.position.x - width / 2;\r\n    self.viewPort.position.y = camera.position.y - height / 2;\r\n  };\r\n};\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\n\r\nmodule.exports = function(self) {\r\n  /**\r\n   *  Create highlight mesh\r\n   */\r\n  self.createHighlightMesh = function(node, texture) {\r\n    var shape =\r\n      node.renderData.hshape || node.renderData.shape || def.NODE_HSHAPE;\r\n    if (shape == \"square\") {\r\n      var hgeometry = self.make2x2Rect();\r\n    } else {\r\n      var hgeometry = new THREE.CircleGeometry(1, 32);\r\n    }\r\n\r\n    return self.createHighlightDrawObject(hgeometry, node, texture);\r\n  };\r\n\r\n  /**\r\n   * Sets the material, color, visibility, and size of the highlight drawing for a node.\r\n   */\r\n  self.createHighlightDrawObject = function(hgeometry, node, texture) {\r\n    var size = self.getNodeSize(node);\r\n    var hsize = def.HIGHLIGHT_SIZE;\r\n\r\n    texture = def.NODE_NO_HTEX ? null : texture;\r\n    var color = def.NODE_NO_HCOLOR\r\n      ? null\r\n      : parseInt(node.renderData.hcolor || def.NODE_HIGHLIGHT);\r\n    var hmaterial = new THREE.MeshBasicMaterial({ color: color, map: texture });\r\n    hmaterial.transparent = true;\r\n    var highlight = new THREE.Mesh(hgeometry, hmaterial);\r\n    highlight.visible = true;\r\n    highlight.scale.set(1 + hsize / size, 1 + hsize / size, 1);\r\n    highlight.position.z = -0.01;\r\n    return highlight;\r\n  };\r\n\r\n  /**\r\n   *  Create node mesh\r\n   */\r\n  self.createNodeMesh = function(node, texture) {\r\n    var shape = node.renderData.shape || def.NODE_SHAPE;\r\n    if (shape == \"square\") {\r\n      var geometry = self.make2x2Rect();\r\n    } else {\r\n      var geometry = new THREE.CircleGeometry(1, 32);\r\n    }\r\n    return self.createNodeDrawObject(geometry, node, texture);\r\n  };\r\n\r\n  /**\r\n   * Create mesh to visual show pinning\r\n   */\r\n  self.createPinMesh = function(size) {\r\n    var geometry = self.make2x2Rect();\r\n    var color = new THREE.Color(def.PIN_COLOR);\r\n    var material = new THREE.MeshBasicMaterial({ color: color });\r\n    var pinMesh = new THREE.Mesh(geometry, material);\r\n    pinMesh.scale.set(0.1, 0.1, 1);\r\n    pinMesh.position.z = 0.01;\r\n    pinMesh.visible = false;\r\n    return pinMesh;\r\n  };\r\n\r\n  /**\r\n   * Create the drawing information for a node\r\n   */\r\n  self.createNodeDrawObject = function(geometry, node, texture) {\r\n    var size = self.getNodeSize(node);\r\n\r\n    texture = def.NODE_NO_TEX ? null : texture;\r\n    var color = def.NODE_NO_COLOR\r\n      ? null\r\n      : new THREE.Color(node.renderData.color || def.NODE_COLOR);\r\n    var material = new THREE.MeshBasicMaterial({ color: color, map: texture });\r\n    material.transparent = true;\r\n    var draw_object = new THREE.Mesh(geometry, material);\r\n    draw_object.scale.set(size, size, 1);\r\n    return draw_object;\r\n  };\r\n\r\n  /**\r\n   * Get the size of a node if it exists, otherwise get it from the render data.\r\n   */\r\n  self.getNodeSize = function(node) {\r\n    var size;\r\n    if (node.renderData.size != undefined) size = node.renderData.size;\r\n    else size = node.renderData[\"size\"];\r\n    return size;\r\n  };\r\n\r\n  self.createNodeLabel = function(node) {\r\n    var material = new THREE.MeshBasicMaterial({\r\n      color: 0x000000,\r\n      wireframe: true,\r\n      wireframeLinewidth: 1,\r\n      side: THREE.DoubleSide\r\n    });\r\n    var geometry = new THREE.PlaneGeometry(1000, 200);\r\n    var textMesh = self.createAndSetupLabelTextMesh(geometry, material);\r\n    var label = self.createAndSetupLabelDiv(node, textMesh);\r\n    var textHolder = self.createAndSetupTextHolder(label, textMesh);\r\n    node.renderData.textHolder = textHolder;\r\n    self.scene.add(textHolder);\r\n  };\r\n\r\n  self.createAndSetupLabelTextMesh = function(geometry, material) {\r\n    var textMesh = new THREE.Mesh(geometry, material);\r\n    textMesh.scale.set(def.TEXT_SIZE, def.TEXT_SIZE, 1);\r\n    var bbox = new THREE.Box3().setFromObject(textMesh);\r\n    textMesh.position.x += (bbox.max.x - bbox.min.x) * def.TEXT_X_OFFSET;\r\n    textMesh.position.y -= (bbox.max.y - bbox.min.y) * def.TEXT_Y_OFFSET;\r\n    textMesh.visible = def.TEXT_WIREFRAME;\r\n    return textMesh;\r\n  };\r\n\r\n  self.createAndSetupLabelDiv = function(node, textMesh) {\r\n    var label = self.createLabelDiv(node);\r\n    label.element.hidden = true;\r\n    label.position.copy(textMesh.position);\r\n    label.scale.copy(textMesh.scale);\r\n    return label;\r\n  };\r\n\r\n  self.createAndSetupTextHolder = function(label, textMesh) {\r\n    var textHolder = new THREE.Object3D();\r\n    textHolder.add(label);\r\n    textHolder.add(textMesh);\r\n    return textHolder;\r\n  };\r\n\r\n  /**\r\n   *  Create label div\r\n   */\r\n  self.createLabelDiv = function(node) {\r\n    // Create canvas to draw text label onto sprite image\r\n    var element = self.createLabelDivElement();\r\n    var content = document.createTextNode(node.renderData.label);\r\n    var textElement = self.createLabelTextElement();\r\n    textElement.appendChild(content);\r\n    element.appendChild(textElement);\r\n    var labelObj = new THREE.CSS3DObject(element);\r\n    return labelObj;\r\n  };\r\n\r\n  /**\r\n   * Creates the Label Div Element for a node's label\r\n   */\r\n  self.createLabelDivElement = function() {\r\n    var element = document.createElement(\"div\");\r\n    element.style.width = \"1000px\";\r\n    element.style.height = \"200px\";\r\n    element.style.backgroundColor = def.TEXT_BACK_COLOR;\r\n    element.style.opacity = def.TEXT_OPACITY;\r\n    return element;\r\n  };\r\n\r\n  /**\r\n   * Creates the text element to add to the label div for a node.\r\n   */\r\n  self.createLabelTextElement = function() {\r\n    var textElement = document.createElement(\"div\");\r\n    textElement.style.width = \"1000px\";\r\n    textElement.style.height = \"2ch\";\r\n    textElement.style.fontSize = \"96px\";\r\n    textElement.style.textOverflow = \"ellipsis\";\r\n    textElement.style.overflow = \"hidden\";\r\n    textElement.style.userSelect = \"all\";\r\n    textElement.style.whiteSpace = \"nowrap\";\r\n    //textElement.setAttribute('contenteditable', 'true');\r\n    return textElement;\r\n  };\r\n\r\n  /**\r\n   * Instantiates, sets highlight for, and sets position for the actual THREE\r\n   * drawing of a node\r\n   */\r\n  self.setupNodeDrawObject = function(node, htexture, texture) {\r\n    var draw_object = self.createNodeMesh(node, texture);\r\n\r\n    // Create highlight\r\n    if (!def.NODE_NO_HIGHLIGHT) {\r\n      var highlight = self.createHighlightMesh(node, htexture);\r\n      draw_object.add(highlight);\r\n    }\r\n\r\n    var pinMesh = self.createPinMesh();\r\n    draw_object.add(pinMesh);\r\n\r\n    draw_object.position.x = node.renderData.x;\r\n    draw_object.position.y = node.renderData.y;\r\n    draw_object.index = node.id;\r\n    draw_object.name = node.id;\r\n    node.renderData.draw_object = draw_object;\r\n\r\n    return draw_object;\r\n  };\r\n\r\n  /**\r\n   *  Create a node object and add it to the scene.\r\n   */\r\n  self.drawNode = function(node) {\r\n    function onHTextureLoad(node, htexture) {\r\n      // Load node texture\r\n      self.textureLoader.load(\r\n        node.renderData.image || def.NODE_TEXTURE,\r\n        onTextureLoad.bind(null, node, htexture)\r\n      );\r\n    }\r\n\r\n    function onTextureLoad(node, htexture, texture) {\r\n      // Create mesh for node\r\n      var draw_object = self.setupNodeDrawObject(node, htexture, texture);\r\n\r\n      // Create div for label\r\n      self.createNodeLabel(node);\r\n\r\n      self.nodeCount += 1;\r\n      self.nodes.add(draw_object);\r\n    }\r\n\r\n    if (def.NODE_NO_HTEX && def.NODE_NO_TEX) {\r\n      onTextureLoad(node, null, null);\r\n    } else {\r\n      // Load highlight texture\r\n      self.textureLoader.load(\r\n        node.renderData.himage || def.NODE_HTEXTURE,\r\n        onHTextureLoad.bind(null, node)\r\n      );\r\n    }\r\n  };\r\n\r\n  /**\r\n   *  Create an edge and add it to the lineSegments.\r\n   */\r\n  self.drawEdge = function(source, target, visible = true) {\r\n    if (\r\n      source.renderData.draw_object === undefined ||\r\n      target.renderData.draw_object === undefined\r\n    ) {\r\n      setTimeout(self.drawEdge.bind(null, source, target), 50);\r\n      return;\r\n    }\r\n    var index = self.drawCount * 3;\r\n    self.lineObjects[index / 3] = source;\r\n    self.lineObjects[index / 3 + 1] = target;\r\n    if (!source.linkObjs) {\r\n      source.linkObjs = [];\r\n    }\r\n    if (!target.linkObjs) {\r\n      target.linkObjs = [];\r\n    }\r\n    self.lineIndices.push({\r\n      source: source,\r\n      target: target,\r\n      hide: !visible,\r\n      linecolor: source.renderData.linecolor\r\n    });\r\n    source.linkObjs.push(self.lineIndices[index / 6]);\r\n    target.linkObjs.push(self.lineIndices[index / 6]);\r\n    self.updateColorsAndPositions(source, target, index);\r\n    self.drawCount += 2;\r\n  };\r\n\r\n  /**\r\n   * Update the colors and positions of the edges between source and target\r\n   */\r\n  self.updateColorsAndPositions = function(source, target, index) {\r\n    var positions = self.edges.attributes.position.array;\r\n    var colors = self.edges.attributes.color.array;\r\n\r\n    var v1pos = source.renderData.draw_object.position;\r\n    var v2pos = target.renderData.draw_object.position;\r\n    var v1color = self.lineIndices[index / 6].linecolor;\r\n    var v2color = self.lineIndices[index / 6].linecolor;\r\n    colors[index] = v1color.b;\r\n    positions[index++] = v1pos.x;\r\n    colors[index] = v1color.g;\r\n    positions[index++] = v1pos.y;\r\n    colors[index] = v1color.r;\r\n    positions[index++] = v1pos.z - 0.02;\r\n    colors[index] = v2color.b;\r\n    positions[index++] = v2pos.x;\r\n    colors[index] = v2color.g;\r\n    positions[index++] = v2pos.y;\r\n    colors[index] = v2color.r;\r\n    positions[index++] = v2pos.z - 0.02;\r\n  };\r\n};\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\n\r\n/**\r\n * These functions are endpoints revealed to Argo frontend\r\n */\r\nmodule.exports = function(self) {\r\n  /**\r\n   * Set frame.mouseMode to the specified mode\r\n   * @param {string} mode name of the mode, currently supports ['select', 'move']\r\n   */\r\n  self.setMouseMode = mode => {\r\n    if (mode === \"select\") {\r\n      // This is the default mode, where users can select one or multiple nodes\r\n      self.mouseMode = \"select\";\r\n      self.isMouseModeMove = false;\r\n    } else if (mode === \"move\") {\r\n      // move mode, where user can drag the screen to achieve panning\r\n      self.mouseMode = \"move\";\r\n      self.isMouseModeMove = true;\r\n    }\r\n  };\r\n\r\n  self.pauseLayout = () => {\r\n    self.paused = true;\r\n  };\r\n  window.pause = self.pauseLayout;\r\n\r\n  self.resumeLayout = () => {\r\n    self.paused = false;\r\n  };\r\n\r\n  self.mapSelectedNodes = () => {\r\n    self.mapNodeAttributes([\"degree\", \"log\", \"scalexy\"], self.selection);\r\n  };\r\n\r\n  self.mapAllNodes = () => {\r\n    self.mapNodeAttributes([\"degree\", \"log\", \"scalexy\"]);\r\n  };\r\n\r\n  self.pinSelectedNodes = () => {\r\n    self.mapNodeAttributes([true, \"\", \"pinned\"], self.selection);\r\n  };\r\n\r\n  self.unpinSelectedNodes = () => {\r\n    self.mapNodeAttributes([false, \"\", \"pinned\"], self.selection);\r\n  };\r\n\r\n  self.setLabelFontSize = size => {\r\n    self.graph.forEachNode(function(node) {\r\n      self.changeLabelFontSize(node, size, self.relativeFontSize);\r\n    });\r\n  };\r\n\r\n  self.setLabelRelativeSize = size => {\r\n    self.relativeFontSize = size;\r\n    self.setLabelFontSize(self.labelSize);\r\n  };\r\n\r\n  self.setLabelLength = numChars => {\r\n    self.graph.forEachNode(function(node) {\r\n      self.changeLabelLength(node, numChars);\r\n    });\r\n  };\r\n\r\n  self.toggleMap = () => {\r\n    self.mapShowing = !self.mapShowing;\r\n  };\r\n\r\n  // Emits id of every node with label being displayed at this moment.\r\n  self.updateNodesShowingLabels = () => {\r\n    var nodes = [];\r\n    self.graph.forEachNode(n => {\r\n      var node = self.graph.getNode(n.id);\r\n      if (node.renderData.textHolder.children[0].element.override) {\r\n        nodes.push(n.id);\r\n      }\r\n    });\r\n    self.ee.emit(\"show-node-label\", nodes);\r\n  };\r\n\r\n  self.toggleSelectedLabels = () => {\r\n    self.toggleLabels(self.selection.map(n => n.id));\r\n  };\r\n\r\n  self.showSelectedLabels = () => {\r\n    self.showLabels(self.selection.map(n => n.id));\r\n  };\r\n\r\n  self.hideSelectedLabels = () => {\r\n    self.hideLabels(self.selection.map(n => n.id));\r\n  };\r\n\r\n  self.toggleLabels = nodeids => {\r\n    self.graph.forEachNode(n => {\r\n      if (nodeids.includes(n.id)) {\r\n        var node = self.graph.getNode(n.id);\r\n        if (\r\n          node.renderData.textHolder.children[0].element.override == undefined\r\n        ) {\r\n          node.renderData.textHolder.children[0].element.override = false;\r\n        }\r\n        node.renderData.textHolder.children[0].element.override = !node\r\n          .renderData.textHolder.children[0].element.override;\r\n      }\r\n    });\r\n    self.updateNodesShowingLabels();\r\n  };\r\n\r\n  self.showLabels = nodeids => {\r\n    self.graph.forEachNode(n => {\r\n      if (nodeids.includes(n.id)) {\r\n        var node = self.graph.getNode(n.id);\r\n        node.renderData.textHolder.children[0].element.override = true;\r\n      }\r\n    });\r\n    self.updateNodesShowingLabels();\r\n  };\r\n\r\n  self.hideLabels = nodeids => {\r\n    self.graph.forEachNode(n => {\r\n      if (nodeids.includes(n.id)) {\r\n        var node = self.graph.getNode(n.id);\r\n        node.renderData.textHolder.children[0].element.override = false;\r\n      }\r\n    });\r\n    self.updateNodesShowingLabels();\r\n  };\r\n\r\n  self.hideAllLabels = () => {\r\n    self.graph.forEachNode(function(node) {\r\n      var node = self.graph.getNode(node.id);\r\n      node.renderData.textHolder.children[0].element.override = false;\r\n    });\r\n    self.updateNodesShowingLabels();\r\n  };\r\n\r\n  self.showAllLabels = () => {\r\n    self.graph.forEachNode(function(node) {\r\n      var node = self.graph.getNode(node.id);\r\n      node.renderData.textHolder.children[0].element.override = true;\r\n    });\r\n    self.updateNodesShowingLabels();\r\n  };\r\n\r\n  self.setCanvasSize = function(size) {\r\n    self.setBoundarySize(size);\r\n  };\r\n\r\n  self.setAllNodesShape = function(shape) {\r\n    if (self.selection.length == 0) {\r\n      self.graph.forEachNode(function(node) {\r\n        self.setNodeShape(self.graph.getNode(node.id), shape);\r\n      });\r\n    } else {\r\n      self.selection.forEach(function(node) {\r\n        self.setNodeShape(self.graph.getNode(node.id), shape);\r\n      });\r\n    }\r\n  };\r\n\r\n  self.setNodeShape = function(node, shape) {\r\n    if (shape == \"square\") {\r\n      node.renderData.shape = shape;\r\n      node.renderData.draw_object.geometry = self.make2x2Rect();\r\n      node.renderData.draw_object.children[0].geometry = self.make2x2Rect();\r\n    } else if (shape == \"circle\") {\r\n      node.renderData.shape = shape;\r\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 32);\r\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\r\n        1,\r\n        32\r\n      );\r\n    } else if (shape == \"triangle\") {\r\n      node.renderData.shape = shape;\r\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 3);\r\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\r\n        1,\r\n        3\r\n      );\r\n    } else if (shape == \"pentagon\") {\r\n      node.renderData.shape = shape;\r\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 5);\r\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\r\n        1,\r\n        5\r\n      );\r\n    } else if (shape == \"hexagon\") {\r\n      node.renderData.shape = shape;\r\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 6);\r\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\r\n        1,\r\n        6\r\n      );\r\n    } else if (shape == \"octagon\") {\r\n      node.renderData.shape = shape;\r\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 8);\r\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\r\n        1,\r\n        8\r\n      );\r\n    }\r\n  };\r\n\r\n  self.getNumSelected = function() {\r\n    if (self.selection.length == self.graph.getNodesCount()) {\r\n      return 0;\r\n    }\r\n    return self.selection.length;\r\n  };\r\n\r\n  self.toggleDark = function() {\r\n    self.darkMode = !self.darkMode;\r\n    self.updateViewPortEdgeColor();\r\n  };\r\n\r\n  self.updateViewPortEdgeColor = function() {\r\n    self.viewPort.material.color = new THREE.Color( self.darkMode? 0xffffff : 0x000000 );       \r\n  }\r\n\r\n  self.getGraph = function() {\r\n    return self.graph;\r\n  };\r\n\r\n  self.getNodeList = function() {\r\n    var nodes = [];\r\n    self.graph.forEachNode(function(node) {\r\n      nodes.push(node);\r\n    });\r\n    return nodes;\r\n  };\r\n\r\n  self.getPositions = function() {\r\n    var poses = {};\r\n    self.graph.forEachNode(function(node) {\r\n      poses[node.id] = [node.x, node.y];\r\n    });\r\n    return poses;\r\n  };\r\n\r\n  self.getPinPositions = function() {\r\n    var poses = {};\r\n    self.graph.forEachNode(function(node) {\r\n      poses[node.id] = [node.fx, node.fy];\r\n    });\r\n    return poses;\r\n  };\r\n\r\n  var alias = false;\r\n  self.toggleAlias = () => {\r\n    // TODO: recreate renderer with new antialias\r\n    // self.init(alias);\r\n    // self.display();\r\n    alias = !alias;\r\n  };\r\n\r\n  self.setLastNode = id => {\r\n    self.lastNode = self.graph.getNode(id);\r\n  };\r\n\r\n  self.dragLastNode = () => {\r\n    self.selectNode(self.lastNode);\r\n  };\r\n\r\n  var x = 1.0;\r\n  self.lowerRes = () => {\r\n    x -= 0.1;\r\n    self.renderer.setPixelRatio(x);\r\n    self.onWindowResize();\r\n  };\r\n\r\n  self.getNeighbors = function(node) {\r\n    if (node) {\r\n      self.addNeighbors(node);\r\n    } else {\r\n      self.addNeighbors(self.rightClickedNode);\r\n    }\r\n  };\r\n\r\n  self.toggleNeighborHighlight = function() {\r\n    self.doHighlightNeighbors = !self.doHighlightNeighbors;\r\n  };\r\n\r\n  self.highlightNodeIds = function(nodeids, toggle) {\r\n    if (nodeids.length > 0 && Array.isArray(nodeids[0])) {\r\n      nodeids = nodeids[0];\r\n    }\r\n    if (self.prevHighlights) {\r\n      for (var i = 0; i < self.prevHighlights.length; i++) {\r\n        self.highlightNode(\r\n          self.prevHighlights[i],\r\n          !toggle,\r\n          def.SEARCH_HIGHLIGHT\r\n        );\r\n      }\r\n    }\r\n    self.prevHighlights = [];\r\n    self.graph.forEachNode(function(node) {\r\n      if (nodeids.indexOf(node.id) != -1) {\r\n        self.highlightNode(node, toggle, def.SEARCH_HIGHLIGHT);\r\n        self.prevHighlights.push(node);\r\n      }\r\n    });\r\n  };\r\n\r\n  self.removeSelected = function() {\r\n    for (var i = 0; i < self.selection.length; i++) {\r\n      self.removeNode(self.selection[i]);\r\n    }\r\n    self.selection = [];\r\n  };\r\n\r\n  self.getSelected = function() {\r\n    return self.selection;\r\n  };\r\n\r\n  self.getSelectedIds = function() {\r\n    return self.selection.map(n => n.id);\r\n  };\r\n};\r\n","var def = require(\"./imports\").default;\r\nvar THREE = def.THREE;\r\nvar Edge = def.Edge;\r\nvar Node = def.Node;\r\nvar OrbitControls = def.OrbitControls;\r\nvar d3 = def.d3;\r\nvar ee = def.ee;\r\n\r\nmodule.exports = function(self) {\r\n  /**\r\n   *  Update the position and color of the edges\r\n   */\r\n  self.updateEdges = function() {\r\n    self.edges.setDrawRange(0, self.drawCount + 6);\r\n    var total = self.drawCount + 6;\r\n    var positions = self.edges.attributes.position.array;\r\n    var colors = self.edges.attributes.color.array;\r\n    for (var i = 0; i < total; i += 2) {\r\n      if (self.lineIndices[i / 2]) {\r\n        if (self.lineIndices[i / 2].hide) {\r\n          var v1pos = self.lineObjects[i].renderData.draw_object.position;\r\n          var v2pos = self.lineObjects[i + 1].renderData.draw_object.position;\r\n          positions[i * 3] = v1pos.x;\r\n          positions[i * 3 + 1] = v1pos.y;\r\n          positions[i * 3 + 3] = v2pos.x;\r\n          positions[i * 3 + 4] = v2pos.y;\r\n          colors[i * 3] = 255;\r\n          colors[i * 3 + 1] = 255;\r\n          colors[i * 3 + 2] = 255;\r\n          colors[i * 3 + 3] = 255;\r\n          colors[i * 3 + 4] = 255;\r\n          colors[i * 3 + 5] = 255;\r\n        } else {\r\n          var v1pos = self.lineObjects[i].renderData.draw_object.position;\r\n          var v2pos = self.lineObjects[i + 1].renderData.draw_object.position;\r\n          var v1color = self.lineIndices[i / 2].linecolor;\r\n          var v2color = self.lineIndices[i / 2].linecolor;\r\n          positions[i * 3] = v1pos.x;\r\n          positions[i * 3 + 1] = v1pos.y;\r\n          positions[i * 3 + 3] = v2pos.x;\r\n          positions[i * 3 + 4] = v2pos.y;\r\n          colors[i * 3] = v1color.r;\r\n          colors[i * 3 + 1] = v1color.g;\r\n          colors[i * 3 + 2] = v1color.b;\r\n          colors[i * 3 + 3] = v2color.r;\r\n          colors[i * 3 + 4] = v2color.g;\r\n          colors[i * 3 + 5] = v2color.b;\r\n        }\r\n      }\r\n    }\r\n    self.edges.attributes.position.needsUpdate = true;\r\n    self.edges.attributes.color.needsUpdate = true;\r\n  };\r\n\r\n  /**\r\n   *  Update the position of the labels\r\n   */\r\n  self.updateLabels = function() {\r\n    var nodes = self.force.nodes();\r\n    for (var i = 0; i < nodes.length; i++) {\r\n      let thisNode = self.graph.getNode(nodes[i].id);\r\n      if (thisNode.renderData.textHolder != undefined) {\r\n        if (\r\n          //thisNode.renderData.textHolder.children[0].element.hideme != false &&\r\n          !thisNode.renderData.textHolder.children[0].element.override\r\n        ) {\r\n          thisNode.renderData.textHolder.children[0].element.hidden = true;\r\n        } else {\r\n          thisNode.renderData.textHolder.children[0].element.hidden = false;\r\n        }\r\n      }\r\n      thisNode.renderData.textHolder.position.x =\r\n        thisNode.renderData.size + thisNode.renderData.draw_object.position.x;\r\n      thisNode.renderData.textHolder.position.y =\r\n        thisNode.renderData.draw_object.position.y;\r\n    }\r\n  };\r\n\r\n  /**\r\n   *  Update the position and color of the edges\r\n   */\r\n  self.updateNodes = function() {\r\n    if (self.options.layout == \"ngraph\") {\r\n      self.graph.forEachNode(function(node) {\r\n        if (node.renderData) {\r\n          node.renderData.draw_object.position.x = self.force.getNodePosition(\r\n            node.id\r\n          ).x;\r\n          node.renderData.draw_object.position.y = self.force.getNodePosition(\r\n            node.id\r\n          ).y;\r\n        }\r\n      });\r\n      if (!self.paused) {\r\n        self.force.step();\r\n      }\r\n    } else if (self.options.layout == \"d3\") {\r\n      var nodes = self.force.nodes();\r\n      for (var i = 0; i < nodes.length; i++) {\r\n        nodes[i].x = Math.max(\r\n          -self.renderWidth,\r\n          Math.min(self.renderWidth, nodes[i].x)\r\n        );\r\n        nodes[i].y = Math.max(\r\n          -self.renderHeight,\r\n          Math.min(self.renderHeight, nodes[i].y)\r\n        );\r\n        let thisNode = self.graph.getNode(nodes[i].id);\r\n        if (thisNode && thisNode.renderData.draw_object) {\r\n          if (!thisNode.pinnedx) {\r\n            thisNode.fx = null;\r\n            thisNode.renderData.draw_object.children[1].visible = false;\r\n          } else {\r\n            thisNode.fx = thisNode.x;\r\n            thisNode.renderData.draw_object.children[1].visible = true;\r\n          }\r\n          if (!thisNode.pinnedy) {\r\n            thisNode.fy = null;\r\n          } else {\r\n            thisNode.fy = thisNode.y;\r\n          }\r\n          thisNode.renderData.draw_object.position.x = nodes[i].x;\r\n          thisNode.renderData.draw_object.position.y = nodes[i].y;\r\n        }\r\n      }\r\n\r\n      for (var i = 0; i < self.fakeNodes.length; i++) {\r\n        self.fakeNodes[i].fx =\r\n          self.neighborHost.x + self.neighborHost.data.size * 3;\r\n        self.fakeNodes[i].fy =\r\n          self.neighborHost.y - self.neighborHost.data.size * 3 * i;\r\n      }\r\n\r\n      if (!self.paused) {\r\n        self.force.tick();\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Restrict camera translation\r\n   */\r\n  self.updateCamera = function() {\r\n    self.controls.target.x -=\r\n      self.controls.object.position.x -\r\n      Math.max(\r\n        -self.renderWidth,\r\n        Math.min(self.renderWidth, self.controls.object.position.x)\r\n      );\r\n    self.controls.object.position.x -=\r\n      self.controls.object.position.x -\r\n      Math.max(\r\n        -self.renderWidth,\r\n        Math.min(self.renderWidth, self.controls.object.position.x)\r\n      );\r\n    self.controls.target.y -=\r\n      self.controls.object.position.y -\r\n      Math.max(\r\n        -self.renderHeight,\r\n        Math.min(self.renderHeight, self.controls.object.position.y)\r\n      );\r\n    self.controls.object.position.y -=\r\n      self.controls.object.position.y -\r\n      Math.max(\r\n        -self.renderHeight,\r\n        Math.min(self.renderHeight, self.controls.object.position.y)\r\n      );\r\n    self.setViewPortSize(self.ccamera);\r\n  };\r\n\r\n  /**\r\n   * Given an ngraph, update the current ngraph and add or remove inconsistent nodes\r\n   */\r\n  self.updateGraph = function(graph) {\r\n    var numNodesAdded = 0;\r\n    graph.forEachNode(function(node) {\r\n      var oldNode = self.graph.getNode(node.id);\r\n      if (!oldNode) {\r\n        if (!self.newNodeIds) {\r\n          self.newNodeIds = [];\r\n        }\r\n        self.newNodeIds.push(node.id);\r\n        self.addNode(node);\r\n        numNodesAdded += 1;\r\n        self.lastNode = self.graph.getNode(node.id);\r\n      } else {\r\n        self.updateNode(oldNode, node);\r\n      }\r\n    });\r\n    graph.forEachLink(function(link) {\r\n      if (!self.graph.getLink(link.fromId, link.toId)) {\r\n        self.addEdge(\r\n          self.graph.getNode(link.fromId),\r\n          self.graph.getNode(link.toId)\r\n        );\r\n      }\r\n    });\r\n\r\n    self.graph.forEachNode(function(node) {\r\n      var oldNode = graph.getNode(node.id);\r\n      if (!oldNode) {\r\n        self.removeNode(node);\r\n      }\r\n    });\r\n\r\n    self.force.alpha(1);\r\n    self.force.stop();\r\n\r\n    if (numNodesAdded > 10) {\r\n      // This seems unnecessary for now\r\n      // self.tickToStatic = true;\r\n      self.tickToStatic = false;\r\n    } else {\r\n      self.tickToStatic = false;\r\n    }\r\n    if (self.newNodeIds) {\r\n      self.highlightNodeIds(self.newNodeIds, true);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * update positions in the ngraph given a list of positions\r\n   */\r\n  self.updatePositions = function(positions) {\r\n    self.graph.forEachNode(function(node) {\r\n      var pos = positions[node.id];\r\n      if (pos) {\r\n        self.graph.getNode(node.id).x = pos[0];\r\n        self.graph.getNode(node.id).y = pos[1];\r\n        self.graph.getNode(node.id).pinnedx = node.pinnedx;\r\n        self.graph.getNode(node.id).pinnedy = node.pinnedy;\r\n        if (node.pinnedx) {\r\n          self.graph.getNode(node.id).fx = pos[0];\r\n        }\r\n        if (node.pinnedy) {\r\n          self.graph.getNode(node.id).fy = pos[1];\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Update a node given a new node\r\n   */\r\n  self.updateNode = function(node, newNode) {\r\n    if (newNode.data) {\r\n      if (node.data.color && newNode.data.color) {\r\n        node.data.color = newNode.data.color;\r\n        node.renderData.color = node.data.color;\r\n        node.renderData.draw_object.material.color.set(\r\n          new THREE.Color(node.data.color)\r\n        );\r\n      }\r\n      if (newNode.data.size && newNode.data.size > 0) {\r\n        node.data.size = newNode.data.size;\r\n        node.renderData.size = newNode.data.size;\r\n        node.renderData.draw_object.scale.set(\r\n          newNode.data.size,\r\n          newNode.data.size,\r\n          1\r\n        );\r\n        var hsize = 1 + def.HIGHLIGHT_SIZE / newNode.data.size;\r\n        node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\r\n      }\r\n      if (newNode.data.label) {\r\n        node.data.label = newNode.data.label;\r\n        node.renderData.label = node.data.label;\r\n        node.renderData.textHolder.children[0].element.childNodes[0].innerText =\r\n          node.data.label;\r\n      }\r\n      if (newNode.data.shape) {\r\n        node.data.shape = newNode.data.shape;\r\n        node.renderData.shape = node.data.shape;\r\n        self.setNodeShape(node, node.data.shape);\r\n      }\r\n    }\r\n  };\r\n};\r\n"],"sourceRoot":""}